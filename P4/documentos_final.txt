1 | preliminary report international algebraic language | perlis, a. j. samelson,k.
2 | extraction root repeated subtraction digital computer | sugai, i.
3 | technique department matrix program scheme | friedman, m. d.
4 | glossary computer engineering programming terminology
5 | square root approximation | wadey, w. g.
6 | computer inspection procedure | muller, m. e.
7 | glossary computer engineering programming terminology
8 | equivalence transformation program scheme | friedman, m. d.
9 | proposal uncol | conway, m. e.
10 | glossary computer engineering programming terminology
11 | problem programming communication changing machine proposed solution part | strong, j. wegstein, j. tritter, a. olsztyn, j. mock, o. steel, t.
12 | error estimation runge kutta procedure | call, d. h. reeves, r. f.
13 | glossary computer engineering programming terminology
14 | problem programming communication changing machine proposed solution part | strong, j. wegstein, j. tritter, a. olsztyn, j. mock, o. steel, t.
15 | recursive curve fitting technique | giblin, j.
16 | secant modification newton method | jeeves, t. a.
17 | programming arithmetic operation | ershov, a. p.
18 | simple automatic coding system | adams, e. s. schlesinger, s. i.
19 | glossary computer engineering programming terminology
20 | accelerating convergence iterative process | technique discussed applied iterative procedure solution equation accelerates rate convergence iteration converges induces convergence iteration diverges illustrative | wegstein, j. h.
21 | algebraic formulation flow diagram | voorhees, e. a.
22 | unusual application department automatic implementation computer logic | morris, e. f. wohr, t. e.
23 | binary truth function operation decimal computer extract command | kautz, w. h.
24 | improved decimal redundancy check | sisson, r. l.
25 | general purpose programming system | holt, a. w.
26 | subroutine method calculating logarithm | bemer, r. w.
27 | note empirical bound generating bessel function | randels, j. b. reeves, r. f.
28 | request method program | corley, h. p. t.
29 | need algorithm | selden, w.
30 | algorithm analyzing logical statement produce truth function table | wolpe, h.
31 | ibm code nundrums | grumette, m.
32 | variable width table binary search facility | halpern, m.
33 | programmed binary counter ibm type calculator | kenny, b. c. hunter, j. a.
34 | table automatic computation | wilf, h. s.
35 | machine method square root computation | bemer, r. w.
36 | queue network simulator ibm burroughs | conway, r. w. johnson, b. m. maxwell, w. l.
37 | impact computer development | humphrey, s. m.
38 | proposed interpretation algol | irons, e. t. acton, f. s.
39 | secant method simultaneous nonlinear equation | procedure simultaneous solution system necessarily linear equation generalization secant method single function variable | wolfe, p.
40 | finger fist choice decimal binary representation | binary number system offer advantage decimal representation high performance general purpose computer greater simplicity binary arithmetic unit greater compactness binary number contribute directly arithmetic speed obvious important binary addressing instruction format increase performance binary address essential powerful operation practical decimal instruction format hand decimal number essential communicating man computer application requiring processing large volume inherently decimal input output data time decimal binary conversion needed purely binary computer significant slower decimal adder take time fast binary adder addition conversion careful review significance decimal binary addressing binary decimal data arithmetic supplemented efficient conversion instruction | buchholz, w.
41 | note computer research eastern europe | nadler, m.
42 | method computation square root division | sarafyan, d.
43 | technique handling macro instruction | greenwald, i. d.
44 | runcible algebraic translation limited computer | knuth, d. e.
45 | flow outlining substitute flow charting | gant, w. t.
46 | multiprogramming stretch feasibility consideration | tendency increased parallelism computer noted exploitation parallelism present number problem machine design programming system minimum requirement successful concurrent execution independent problem program discussed requirement met stretch system carefully balanced combination built programmed logic technique place burden programmed logic system program supervisory program compiler problem program | codd, e. f. lowry, e. s. mcdonough, e. scalzi, c. a.
47 | russian visit computer | zaitzeff, e. m. astrahan, m. m.
48 | shift register code indexing application | communication shift register code calling wireless telemetering station fixed cyclical order high degree redundancy permitting single error correcting code minimum distance code bit code word employed station identification code embedding shift register code period permit code employed punctuation telemetering station receiver simply putting received zero shift register time code combination arises identifying station barring tuitous error combination low probability called communication describes property application code detail finding employed ural soviet built drum computer donated indian statistical institute united nation technical aid administration untaa | nadler, m. sengupta, a.
49 | scientific business application oracle curve plotter | fike, c. t.
50 | statistical program ibm part ii | hamblen, j. w.
51 | construction micro flowchart | gorn, s. ingerman, p. z. crozier, j. b.
52 | efficient method generating uniformly distributed point surface dimensional sphere corrigendum | cook, j. m.
53 | recommendation share algol committee
54 | sale simple algebraic language engineer | brittenham, w. r. clark, k. kuss, g. thompson, h. smith, a. o.
55 | algebraic translator | kaner, h.
56 | proposed standard flow chart symbol
57 | computer center
58 | lem small size general purpose digital computer magnetic ferrite element | paper examines question development construction general purpose digital computer contactless magnetic ferrite capacitive dezu long duration capacitive memory element developed laboratory electrical modeling vinityi sssr supervision professor gutenmacher | machmudov, u. a.
59 | survey progress trend development automatic data processing business management control system federal government december iii
60 | alpha vector transformation system linear constraint | wersan, s. j.
61 | ibm tape matrix compiler | hornick, s. d.
62 | multi dimensional square polynomial curve fitting | lesh, f. h.
63 | octal diagram binary conception applicability computer design logic | paper date back genesis binary conception circa year ago octal diagram year ago derived chinese ancient analyzes applicability binary trinity octal diagram modern electronic digital computer design logic | li, s. t.
64 | remark algol symbol manipulation | green, j.
65 | algol committee report extension | dijkstra, e. w. heise, w. perlis, j. a. samelson, k.
66 | proposal generalized card code character | bemer, r. w.
67 | central european computer | blachman, n. m.
68 | role university computer data processing related field | study made university program united state field computer data processing operation research closely related field university policy organization administration faculty student research curriculum equipment financing investigated integrated university program recommended reflecting conviction present activity related computer develop discipline legitimate province university scholar detail recommended graduate school computer science | fein, l.
69 | statistical program ibm part | collection description statistical program university computing center ibm | hamblen, j. w.
70 | construction set test matrix | paper develops equation property set test matrix determination accuracy routine finding inverse determinant eigenvalue matrix | aegerter, m. j.
71 | proposal feasible programming system | paper proposes designing programming facility involving digital computer program assist preparation large scale real time program facility capable preparing program variety machine characteristic similar facility computer basic assumption random access storage avoid necessity segmenting constructed program fashion trivial assumption unrealistic intended provide opportunity concentrate aspect program construction programming system stress discovery source program statement error attempting construct object program computer characteristic advocated program interrupt scheme large set character indirect addressing | bagley, p. r.
72 | educational program computing | hollingsworth, j.
73 | real time data assimilator | gschwind, h. w.
74 | high speed sorting procedure | shell, d. l.
75 | parameter estimation simple nonlinear model | chow, w. m.
76 | binary conversion fixed decimal precision decimal fraction | taranto, d.
77 | gat construction translator | arden, b. graham, r.
78 | remark practical solution characteristic problem | paper concerned practical solution characteristic problem ordinary differential equation apparent sequential computer digital analog solve initial problem boundary problem mathematical process found compensate machine inadequacy compensating machine imperfection course normal activity numerical analyst number paper applied device problem purpose note establish mathematical framework model practical procedure assist extension idea problem | wouk, a.
79 | programming machine extended address calculational mechanism | schecher, h.
80 | technique computing critical rotational speed flexible shaft automatic computer | schwartz, b. l.
81 | norc high speed printer | gleissner, g. h.
82 | handling identifier internal symbol language processor | substitution computer oriented symbol programmer oriented symbol language processor examined feasible method presented | williams, f. a.
83 | visit computation center soviet union | carr iii, j. w.
84 | survey progress trend development automatic data processing business management control system federal government december ii part ca590406
85 | error analysis floating point arithmetic | carr iii, j. w.
86 | survey progress trend development automatic data processing business management control system federal government december | controller general of the united states to the congress of the united states
87 | note method generating point uniformly dimensional sphere | muller, m. e.
88 | efficient method generating uniformly distributed point surface dimensional sphere | hicks, j. s. wheeling, r. f.
89 | routine find solution simultaneous linear equation polynomial coefficient | larson, e. h. marshall, d. p.
90 | binary arithmetic discretely variable word length serial computer | ercoli, p. vacca, r.
91 | mathematical procedure machine division | gilman, r. e.
92 | checklist intelligence programming system | remarkable variation exists degree sophistication programming system manifestation jungle assorted device reproducing limited human decision procedure attempt made begin systematic classification device educating computer take decision making function human operator demonstrated feasible date highly desirable future | bemer, r. w.
93 | formula computer oriented language | technique shown enabling computer translate simple algebraic formula address computer code | wegstein, j. h.
94 | iterative method fitting logistic curve | iterative method finding logistic curve square fit set dimensional point | howell, j.r.
95 | elimination special function differential equation | set ordinary differential equation mathematical function requiring subroutine numerical solution electronic computer tabular data numerical solution hand calculation function generator analog method applied expanded equivalent set equation function practical function satisfy sufficiently simple differential equation function eliminated procedure trigonometric inverse trigonometric exponential transcendental function | powers, j. e.
96 | computing radiation integral | relative merit cost way evaluating typical radiation integral spherical bessel function investigated method desk machine evaluation finite series integration differential equation reef electronic analog computer litton ibm computer result generally applicable equation separated helmholtz wave equation | hansen, r. c. bailin, l. l. rutishauser, r. w.
97 | signal corp research development automatic programming digital computer | luebbert, capt. w. f. collom jr., capt. p. w.
98 | arithmetic translator compiler ibm fortran automatic coding system | sheridan, p. b.
99 | modification international algebraic language | green, j.
100 | recursive subscripting compiler list type memory | carr iii, j. w.
101 | nuclear reactor code | nather, v. sangren, w.
102 | comparison programming method | curtz, t. b. riordan, j. f. spohn,m.
103 | cope console operator proficiency examination | year electronic computer sophisticated program process complex dependence computing skill experience operator increasing time selection training qualified operator grows difficult meet need quick accurate uniform operator test training aid author developed cope console operator proficiency examination outlined examination programmed specifically ibm model ii tape record coordinator similar program developed computer | farbman, d. ketover, r.
104 | digital simulation discrete flow system | discrete flow system discussed characterized movement randomly arriving item interacting channel programing digital computer simulate system utilizes technique common approach physical problem principal portion paper discussion simulation study illustrate programming problem involved extensive package handling plant objective optimization parameter storage capacity processing rate air traffic flow control procedure simulated compare effect alternative control decision | moore, c. j. lewis, t. s.
105 | method word inversion ibm | price, r. a. jardins, p. d.
106 | method overlapping erasure list | important property newell shaw simon scheme computer storage list data multiple occurrence need stored place computer list overlapped unfortunately overlapping pose problem subsequent erasure list longer needed desired erase part overlap list lisp mccarthy employ elegant inefficient solution problem present paper describes general method enables efficient erasure method employ interspersed reference count describe extent overlapping | collins, g. e.
107 | multiple precision arithmetic | pope, d. a. stein, m. l.
108 | programmed error correction project mercury | dimsdale, b. weinberg, g. m.
109 | note approximating | lubkin, s.
110 | fibonaccian searching | ferguson, d. e.
111 | programming numerical solution polynomial equation | numerical technique presented computing root polynomial equation applying recommended scaling inversion rule basic bairstow newton raphson iterative technique applied great reliability high degree accuracy rapid convergence realized numerical example shown illustrate pitfall show circumvented application recommended procedure | ellenberger, k. w.
112 | numerical solution polynomial equation algorithm | ellenberger, k. w.
113 | survey coded character representation | bemer, r. w.
114 | survey punched card code | smith, h. j. williams, f. a.
115 | optimizers structure | wheeling, r. f.
116 | sumador chino | recent motor trip mexico writer came adding device referred sumador chino chinese adder survey literature history mathematics instrument calculation uncovered reference device purpose communication enlist help member bringing light known concerning evolution present status sumador chino | rogers, j. l.
117 | estimation relative efficiency internal sorting method | nagler, h.
118 | character scanning ibm | speckhard, a. e.
119 | note eigenvalue computation | andrus, j. f.
120 | simple technique coding differential equation | sefton, p. vaillancourt, r.
121 | computation control labelling | holt, a.
122 | square fitting great circle point sphere | dewitte, l.
123 | compilation computer neliac | neliac compiler based algol developed navy electronics laboratory san diego california boot strap compiler remington rand univac countess computer compiler generate version running countess program generated machine code control data corporation cdc version neliac accepted essentially identical input language | masterson jr., k. s.
124 | algorithm assignment problem | assignment problem formulated briefly discussed efficient algorithm solution presented algol code empirical relation solution time size problem based extensive experiment carried digital computer | silver, r.
125 | polynomial transformer algorithm | mackinney, j. g.
126 | square fit orthogonal polynomial algorithm | mackinney, j. g.
127 | assignment algorithm | silver, r.
128 | rootfinder iii algorithm | herroit, j. g.
129 | rootfinder ii algorithm | forsythe, g. e. herriot, j. g.
130 | real zero arbitrary function algorithm | leavenworth, b.
131 | solution tri diagonal linear equation algorithm | leavenworth, b.
132 | math sort algorithm | feurzeig, w.
133 | riccati bessel function kind algorithm | oser, h.
134 | bessel function set integer order algorithm | borsch-supan, w.
135 | digital computer university iv | reeves, r. f.
136 | note calculation interest | ingerman, p. z.
137 | evaluating number expressed string english word | swift, c. j.
138 | thought reconciling character set proposal corrigenda | voorhees, e. a.
139 | binomial coefficient algorithm | kenyon, r. r.
140 | crout pivoting algorithm | forsythe, g. e.
141 | thought parallel processing | yarbrough, l. d.
142 | comment technique counting | sherman, p. m.
143 | list computer system program ibm datatron univac s | romberg, a.
144 | number digital shorthand | present communication system transmit single character group coded pulse simple terminal equipment english word form sparse set alphabetic combination present method inefficient computer system substituted terminal numeric representation entire word common phrase character character representation requires approximately present transmission time saving reflected cost benefit accrue code language translation scheme provision made transmission purely numeric binary stream single character transmission non dictionary word name people place | bemer, r. w.
145 | automatic grader programming class | hollingsworth, j.
146 | computer engineering classroom instruction | april computer committee college engineering university michigan act steering committee ford foundation project computer engineering education held special conference discus timely topic pertinent ford project report condensed transcription key idea offered conference attendee selected topic | katz, d. l.
147 | report conference university computing center director
148 | digital computer university iii | reeves, r. f.
149 | decision rule improved efficiency solving linear programming problem simplex algorithm | dickson, j. c. frederick, f. p.
150 | rational interpolation continued fraction algorithm | floyd, r. w.
151 | trdiag algorithm | sprague iii, c. d.
152 | crout pivoting algorithm | forsythe, g. e.
153 | comment fortran user | blatt, j. m.
154 | rapidly convergent expression evaluating | berin, a.
155 | trie memory | fredkin, e.
156 | introductory problem symbol manipulation student | rosin, r. f.
157 | digital computer university ii | reeves, r. f.
158 | rootfinder ii algorithm | thacher jr., h. c.
159 | rootfinder algorithm | thacher jr., h. c.
160 | rootfinder ii algorithm | thacher jr., h. c.
161 | abbreviating word systematically corrigendum | barrett, j. a. grems, m.
162 | variant technique counting | frieden, h.
163 | counting ibm | kutler, s. s.
164 | short study notation efficiency | smith jr., h. j.
165 | neliac dialect algol | huskey, h. d. halstead, m. h.
166 | programming compatibility family closely related digital computer | luebbert, w. f.
167 | combining algol statement analysis validity checking | mcisaac, p.
168 | multiprogram scheduling part scheduling algorithm external constraint | codd, e. f.
169 | multilingual terminology project | holmstrom, j. e.
170 | thought reconciling character set proposal | voorhees, e. a.
171 | digital computer university part | reeves, r. f.
172 | complex exponential integral algorithm | beam, a.
173 | atlas concept large computer design
174 | interval estimation time state total time ratio doubleexponential process | neal, w. r.
175 | solution simultaneous ordinary differential equation general purpose digital computer | anderson, w. h.
176 | symbol manipulation threaded list corrigendum | perlis, a. j. thornton, c.
177 | solution polynomial equation bairstow hitchcock method grau communication acm february algorithm | thacher jr., h. c.
178 | rootfinder algorithm | thacher jr., h. c.
179 | evaluation legendre polynomial pn recursion algorithm | galler, g. m.
180 | evaluation laguerre polynomial ln recursion algorithm | galler, g. m.
181 | evaluation hermite polynomial hn recursion algorithm | galler, g. m.
182 | evaluation chebyshev polynomial tn recursion algorithm | galler, g. m.
183 | conversion floating point representation | perry, c.
184 | short method measuring error square power series | robinson, s. m. struble, g. w.
185 | multiprogram scheduling part introduction theory | order exploit fully fast computer posse simultaneous processing ability large extent schedule workload scheduling routine capable extremely rapid execution prove defeating construction schedule entail determining program run concurrently sequentially respect concise scheduling algorithm tends minimize time executing entire pending workload subset subject external constraint precedence urgency algorithm applicable wide class machine | codd, e. f.
186 | algorithm defining algol assignment statement addendum | floyd, r. w.
187 | compiling connective | swift, c. j.
188 | department computer mathematics moscow state university | berezin, i. s.
189 | future automatic digital computer | booth, a. d.
190 | bendix system
191 | abbreviating word systematically | barrett, j. a. grems, m.
192 | technique counting binary computer | wegner, p.
193 | start automatic storage assignment | patrick, r. l.
194 | divisionless computation square root continued squaring | sarafyan, d.
195 | code | patterson, g. w.
196 | report algorithmic language algol | naur, p. backus, j.
197 | imaginary number system | knuth, d. e.
198 | high speed multiplication process digital computer | gurzi, f.
199 | euclidian algorithm algorithm | claussen, r.
200 | bessel function asymptotic expansion algorithm | clarke, d. s.
201 | bessel funtion series expansion algorithm | clarke, d. s.
202 | control system logical block diagnosis data loading | paper describes section integrated diagnostic monitor system facilitates checking section instruction subroutine object program method diagnostic operation format similar computer program make system convenient simple understand paper describes number diagnostic feature included system | senko, m. e.
203 | decoding combination integer time | brown, r. m.
204 | proving theorem pattern recognition | wang, h.
205 | macro instruction extension compiler language | macroinstruction compiler constructed small set function made extremely powerful conditional assembly nested definition parenthetical notation serve make compiler capable accepting general extension ground language | mcilroy, m. d.
206 | symbol manipulation xtran | green, j.
207 | syntactic semantic augments algol | smith, j. w.
208 | introduction information processing language | newell, a. tonge, f. m.
209 | symbol manipulation threaded list | perlis, a. j. thornton, c.
210 | recursive function symbolic expression computation machine part | mccarthy, j.
211 | share standard flow chart symbol | grems, m.
212 | bisection routine algorithm | gorn,s.
213 | numerical inversion laplace transforms | schmittroth, l. a.
214 | algorithm defining algol assignment statement | floyd, r. w.
215 | execute operation fourth mode instruction sequencing | brooks, f. p.
216 | note abacus number conversion | kanner, h.
217 | soviet computer technology
218 | computer preparation poetry concordance | painter, j. a.
219 | marriage problem | shuchter, j. p.
220 | method computation square root division | traub, j. f.
221 | basic side tape labeling | logan, w. a.
222 | coding isomorphism | coding external symbol symbol internal compute carried relevant informational property preserved form easily dealt case point presented | lynch, w. c.
223 | selfcipher programming | pelta, h. n.
224 | sequential formula translation | syntax algorithmic language algol conveniently sequence state element called cellar transition controlled admissible state symbol pair represented transition matrix description syntax furnishes time extremely simple rule translating machine program statement algorithmic language sequential treatment feasible case optimizing process recursive address calculation | samelson, k. bauer, f. l.
225 | techniquefor handling macro instruction corrigendum | greenwald, i. d.
226 | solution polynomial equation bairstow hitchcock method algorithm | grau, a. a.
227 | rootfinder algorithm | wegstein, j.
228 | quadi algorithm | herbold, r. j.
229 | terminology proposal | gruenberger, f.
230 | proposal character code compatibility | bemer, r. w.
231 | proposal set publication standard acm | kent, e. r.
232 | high speed sorting procedure | frank, r. m. lazarus, r. b.
233 | abstract additional nuclear reactor code | nather, v. sangren, w.
234 | sap assembly program ibm | speckhard, a. e.
235 | think piece | bagley, p. r.
236 | soviet cybernetics computer | article record observation soviet research technology cybernetics computer science made author visit soviet union delegate ifac congress automatic control held moscow summer | feigenbaum, e. a.
237 | computer production peek boo sheet | robbins, d.
238 | simulation analysis biochemical system | garfinkel, d. rutledge, j. d. higgins, j. j.
239 | inefficiency boolean function information retrieval system | verhoeff, j. goffman, w. belzer, j.
240 | processing magnetic tape variable block | graham, j. w. sprott, d. a.
241 | machine calculation moment probability distribution | method presented calculation machine moment probability distribution necessitating addition reference memory moment minimum multiplication 2n addition 2n reference memory required straightforward method number entry probability distribution method directly applicable tabulated distribution exists computed repeated convolution case conserve time accuracy | lechner, j. a.
242 | note geometric weighted check digit verification | note describes method utilizing geometric weight modulus checking digit computer multiplication division addition attempt made show limitation system | wilson, j. g.
243 | dimensional code detecting correcting multiple error | paper introduces family code detecting correcting multiple error binary coded message message arranged conceptually multidimensional rectangular array process encoding error detection based parity evaluation prescribed dimension array effectiveness code increased introducing system check bit essentially parity check parity bit dimensional code discussed paper parity evaluation horizontal vertical main diagonal family code restricted dimension evidenced discussion minnick ashenhurst similar multidimensional single bit selection plan purpose dimensional code correcting detecting error developed extension higher dimensional code greater correction power straightforward | rubinoff, m.
244 | incomplete elliptic integral algorithm | kriebel, d. c.
245 | set associate legendre polynomial kind algorithm | herndon, j. r.
246 | square fit orthogonal polynomial algorithm | macmillan, d. b.
247 | incomplete elliptic integral algorithm | jefferson, d. k.
248 | proprietary mathematical programming impression panel discussion | panel discussion proprietary mathematical programming sponsored special interest committee mathematical programming acm hall discussion september 7th 16th national acm meeting los angeles note consists solely impression garnered moderator panel necessarily represent position panelist participant discussion | smith, l. w.
249 | specification language mechanical language processor baker dozen | gorn, s.
250 | engineering application logic structure table | nickerson, r. c.
251 | ballistic cam design | paper present digital computer program rapid calculation manufacturing data essential design preproduction cam utilized ballistic computer tank fire control system cam profile generated introduces superelevation angle required tank main armament type ammunition | archambault, m.
252 | programming duplex computer system | paper describes method duplex computer programming computer military defense system method combine special program basic data processing program package duplex operation system greater reliability achieving required level integration computer similar processing input continually cross check intermediate final result | dow, j.
253 | program ray chaudhuri algorithm minimum cover abstract complex | foata, d. c.
254 | smalgol | prior western joint computer conference people joint user group expressed interest defining smalgol language algol language compiler small size computer preliminary report resulted acm national conference month later considering counter proposal final version agreed subcommittee recommendation subcommittee standard subset algol small computer presented | bachelork, g. a. dempster, j. r. h. knuth, d. e. speroni, j.
255 | augmentation algorithm | breed, l. m.
256 | set test matrix algorithm | dubay, g. h.
257 | invert algorithm | knapp, a. w. shaman, p.
258 | composition generator algorithm | hellerman, o. ogden, s.
259 | permutation algorithm | coveyou, r. r. sullivan, j. g.
260 | interpolation aitken algorithm | mifsud, c. j.
261 | tape splitting | moore, d. p.
262 | map | moore, c. l. ruwe, m. l.
263 | library loading alternate routine selection | moore, d. p.
264 | generalized polyphase merge algorithm | reynolds, s. w.
265 | low level language subroutine fortran | paper describes subroutine coded symbolic language fortran coded program deal special arithmetic multi precision arithmetic symbol manipulation bit manipulation expanded character set input output visual display | barnett, m. p.
266 | fitting sphere method square | robinson, s. m.
267 | proposal improving efficiency algol | wilkes, m. v.
268 | stochastic evaluation static storage allocation | cohen, l. j.
269 | core allocation based probability | riskin, b. n.
270 | technique storage allocation algorithm | kelley jr., j. e.
271 | semi automatic storage allocation system loading time | heising, w. p. larner, r. a.
272 | storage allocation scheme algol | storage allocation scheme machine instruction core store magnetic drum drum storing program block data directed programmer auxiliary information algol program administrative routine controlling storage run time full detailed | jensen, j. mondrup, p. naur, p.
273 | experience automatic storage allocation | collins jr., g. o.
274 | dynamic storage allocation atlas computer including automatic backing store | fotheringham, j.
275 | dynamic storage allocation information retrieval system | sams, b. h.
276 | program organization record keeping dynamic storage allocation | material presented paper part design plan core allocation portion ascii matic programming system project ascii matic concerned application computer technique activity headquarters military intelligence operation army | holt, a. w.
277 | problem storage allocation multiprocessor multiprogrammed system | maher, r. j.
278 | general formulation storage allocation | formalization general computer storage allocation process attempted computer fictitious computer essentially identical respect possession unbounded primary storage mapping total storage set internal external direct address set introduced program sequence termed admissible relative specific execution time period mapping underwhich effective data referent located direct address set storage allocation considered process establishing arbitrary program sequence mapping decoupling program admissible subprogram linking set interlude existence proof term completely interpretive program special case discussed restriction generality program considered practical realization allocation process tractable | roberts jr., a. e.
279 | case dynamic storage allocation | sams, b. h.
280 | preplanned approach storage allocating compiler | o'neil, r. w.
281 | putting hex | recent note approximate natural antilogy considered indirect formulation describing note produce family fast high precision eminently practical exponential evaluation formula derived formulation | feurzeig, w.
282 | optimum tape writing procedure | consider magnetic tape system read check writing error occurs writing record programmed error routine bypass area tape try rewrite record area paper evaluates procedure basis expected loss computer time develops decision rule selecting optimum procedure rule depends critically number time tape written future case optimum procedure bypass area decision size area bypassed formula developed determine optimum area bypassed procedure | hutchinson, k.
283 | inversion complex matrix | tornheim, l.
284 | manipulation algebraic expression | algorithm algebraically manipulating expression form sum cipi developed conjunction development program system analysis problem algorithm enablesus derive system transfer function algebraically block diagram linear continuous multi loop feedback system machine representation derived expression virtue algorithm form simplifies task compiling algorithm developed purpose connection system analysis study application mathematical device extends confines original problem | rom, a. r. m.
285 | solution tridiagonal matrix | wenrick, r. c. houghton, a. v.
286 | iterative method inversion power series | bramhall, j. n.
287 | generalized important event technique | shapiro, n. vreenegoor, h.
288 | syntactical chart algol | taylor, w. turner, l. waychoff, r.
289 | critical path scheduling algorithm | alexander, n. p.
290 | chain tracing algorithm | mayoh, b. h.
291 | mobol preparingretrieval program | hoffman, j. opler, a.
292 | information retrieval language legal study | kehl, w. b. horty, j. f. bacon, c. r. t. mitchell, d. s.
293 | applied mathematics laboratory david taylor model basin | richstone, m.
294 | imaginary number system | knuth, d.
295 | rational approximation error function similar function | clendenin, w. w.
296 | note multiple precision arithmetic | cox, a. g. luther, h. a.
297 | note fitting great circle square | marcus, c. f.
298 | bit pseudo random number generator | bit pseudo random number generator suitable computer tested statistically randomness determine adequacy monte carlo program frequency test distribution low order moment run run mean applied half million generated number lying interval set integer obtained bit generated number test substantiated randomness number set integer coming significant bit | kuehn, h. g.
299 | generalized polyphase merge algorithm | reynolds, s. w.
300 | cobol sample problem | simplified merchandise control problem chosen presenting cobol user potential user computing system mythical department store language bros programming cobol language run computer | mackinson, t. n.
301 | set test matrix algorithm | gilbert, h. e.
302 | augmentation algorithm | rice, h. g.
303 | basic terminology connected mechanical language processor | suggestion paper part terminology work university pennsylvania office computer research education work jointly supported national science foundation air force office scientific research | gorn, s.
304 | nth root complex number algorithm | nestor jr., c. w.
305 | cram algorithm | caffrey, j.
306 | invrs algorithm | caffery, j.
307 | find algorithm | hoare, c. a. r.
308 | quicksort algorithm | hoare, c. a. r.
309 | partition algorithm | hoare, c. a. r.
310 | set associate legendre polynomial kind algorithm | herndon, j. r.
311 | procedure range arithmetic algorithm | gibb, a.
312 | note approximating | olivier, d.
313 | iterative method inversion power series | bramhall, j. n.
314 | divisionless method integer conversion | clarkson, w. k. prince, b. m.
315 | solution tridiagonal matrix | wenrick, r. c.
316 | algorithm equivalence declaration | arden, b. w. galler, a. graham, r. m.
317 | approximation curve line segment dynamic programming | bellman, r.
318 | combat vehicle firing stability active suspension | fischer, c. m.
319 | class iteration formula historical note | class iteration formula obtainable rational approximation euler formula derived error estimate historical note iterative procedure derivation euler formula error estimate notation simplifies error estimate suggests generalization final section considers pade approximants euler polynomial show number known formula derived unified approach short discussion formula | traub, j. f.
320 | logic structure table | logic table excellent developing expressing logic required procedure operation system circuit set rule writing logic table explained mean simple example logic structure vending machine logic table logic table dimensional nature enabling fully express consider sequential parallel aspect logic compiled directly computer program eliminate need flow charting hand coding | cantrell, h. n. king, j. king, f. e. h.
321 | algol confidential | algol report encountered describe complex language difficult learn metalinguistic formula admirably serve purpose precisely language certainly readable beginner experience shown report explained fact easy learn algol write algorithm language general powerful handle enormous class problem hard learn part algol present compiler language write assignment statement lot unnecessary restriction imposed compiling language finally lifted algol unobvious thing written later lie problem algol general restriction lifted lot technical detail crop hard learn correctly paper obscure feature language considered usefulness discussed remark based author interpretation algol report | knuth, d. e. merner, j. n.
322 | operational compatibility system convention | general standard committee share organization devoted considerable effort problem operating computer efficiently view growing number programming system programming system coded utilize fixed set hardware component recognizing fact occupying storage medium required incompatibility resolved manually setting computer system required set convention considered minimize computer set time sufficiently broad interest feel computer user aware george ryckman chairman | bright, h. s.
323 | state digital computer technology europe | blachman, n. m.
324 | romberg integration algorithm | bauer, f. l.
325 | numerical solution polynomial equation algorithm | alexander, w. j.
326 | mathsort algorithm | ranshaw, r. w.
327 | zero real polynomial resultant procedure algorithm | bareiss, e. h. fisherkeller, m. a.
328 | matrix inversion algorithm | cohen, d.
329 | automatic abstracting indexing survey recommendation | preparation widespread automatic scanner read document transmit content machine analysis report present concept automatic analysis relative frequency approach measuring significance word word group sentence relative frequency approach discussed detail application problem automatic indexing automatic abstracting included report summary automatic analysis study published date writing conclusion point sophisticated mathematical linguistic technique solution problem automatic analysis | edmundson, h. p. wyllys, r. e.
330 | method evaluating area normal function | baker, f. b.
331 | successive approximation computer storage problem ordinary differential equation | bellman, r.
332 | indirect chaining method addressing secondary key | method entering random access basis key briefly surveyed widely chaining method based pseudo random key transformation reviewed detail efficient generalization chaining method permit recovery additional key presented | johnson, l. r.
333 | design improved transmission data processing code | bemer, r. w. smith jr., h. j. williams jr., f. a.
334 | division square root quater imaginary number system | nadler, m.
335 | numerical experiment newton method nonlinear parabolic ellipticboundary problem | generalization newton method nonlinear parabolic equation form xx nonlinear elliptic equation xx yy exp solved numerically comparison result result obtained picard iteration procedure show case quisi linearization method offer substantial advantage time accuracy | bellman, r. juncosa, m. l. kalaba, r.
336 | practical technique determination optimum relaxation factor successive relaxation method | kulsrud, h. e.
337 | survey punched card code | ross, h. m.
338 | grout ii algorithm | thacher jr., h.c.
339 | real exponential integral algorithm | alexander, w. j. thacher jr., h. c.
340 | legendre polynomial algorithm | herndon, j.
341 | chebyschev polynomial algorithm | herndon, j.
342 | solution polynomial equation barstow hitchcock algorithm | herndon, j.
343 | frequently occurring error algol program algorithm | herndon, j.
344 | ber bei function algorithm | herndon, j. r.
345 | complete elliptic integral kind algorithm | herndon, j. r.
346 | complete elliptic integral kind algorithm | herndon, j. r.
347 | gamma function range algorithm | herndon, j. r.
348 | nth root complex number algorithm | herndon, j. r.
349 | set test matrix | herndon, j. r.
350 | adjust inverse matrix element perturbed algorithm | herndon, j. r.
351 | inverse finite segment hilbert matrix algorithm | herndon, j. r.
352 | spherical neumant function algorithm | herndon, j. r.
353 | logarithm complex number algorithm | herndon, j. r.
354 | legendre function kind real imaginary argument algorithm | herndon, j. r.
355 | exponential complex number algorithm | herndon, j. r.
356 | interest algorithm | ingerman, p. z.
357 | bessel function computed recursively algorithm | wojcicki, m. e.
358 | crout pivoting ii algorithm | thacher jr., h. c.
359 | invert algorithm | wood, t. c.
360 | evaluation determinant algorithm | solomon, j. g.
361 | programmed error correction decimal computer | weinberg, g. m.
362 | table look technique | sherman, p. m.
363 | approximating transcendental number continued fraction | karst, e.
364 | compilation subscripted variable | nather, r. e.
365 | bessel function integral order complex argument | gray, m. c.
366 | eigenvalue symmetric matrix | smith, o. k.
367 | topological ordering list randomly numbered element network | network directed line segment free circular element assumed line identified terminal node node assumed numbered non topological system list line numeric order simple technique create high speed list topological order | lasser, d. j.
368 | real zero arbitrary function algorithm | collinge, r. m.
369 | crout pivoting algorithm | thacher jr., h. c.
370 | bisection routine algorithm | rader, p. j.
371 | remark algorithm algorithm algorithm | wilkinson, j. h.
372 | critical path scheduling algorithm | leavenworth, b.
373 | correlation coefficient matrix multiplication algorithm | sassouni, p.
374 | telescope2 algorithm | brons, k. a.
375 | telescope1 algorithm | brons, k. a.
376 | tchebycheff algorithm | gianni, a. j.
377 | sieve algorithm | wood, t. c.
378 | generalized technique symbol manipulation numerical calculation | ross, d. t.
379 | bitwise operation | strachey, c.
380 | comparison iterative method calculation nth root | iterative method calculation nth root including proposed author compared way theoretical convergence estimate macrocompiler estimate machine running time compare running time method variety input data | traub, j. f.
381 | alternate form uncol diagram | bratman, h.
382 | statistical program university north carolina | bush, n.
383 | finding minimum route network turn penalty | caldwell, t.
384 | gamma function algorithm | lipp, m. f.
385 | factorial algorithm | lipp, m. f.
386 | multint algorithm | freeman jr., r. d.
387 | gamma function algorithm | collinge,r. m.
388 | solution polynomial equation bairstow hitchcock method algorithm | vandergraft, j. s.
389 | real exponential integral algorithm | peavy, s.
390 | complex exponential integral algorithm | rader, p. j. thacher jr., h. c.
391 | bk system philco | smith, r. b.
392 | comment paper parallel processing | nekora, m. r.
393 | subroutine symbol manipulation algebraic compiler | carr iii, j. w. hanson, j. w.
394 | multiple programming data processing | ryle, b. l.
395 | multiple precision division | rabinowitz, p.
396 | automation program debugging | automatic debugging substantially reduce lead time coding effective complex program enforces analysis debugging criterion resulting verifiably accurate program programmer specifies program debugged memory area set input data maximum repetition loop checkpoint information set data executive debugging program run program debugged performing checking function creating trace record later analysis location error application flexible system conjunction debugging technique | jacoby, k. layton, h.
397 | card format reference information processing | paper proposes card format suitable variety reference information processing column ibm card divided field reference material field column identification field column format reference material flexible format identification rigid reference material includes basically index title source class summary cross reference entry identification includes basically code matrix descriptor entry number kind major interest source reference identification choice identify material personal general card format sufficient identify material reference book article programming term hardware term equipment machine system abbreviation suitable standard card reference information processing | grems, m.
398 | slang system | sibley, r. a.
399 | compiling technique boolean expression conditional statement algol | huskey, h. d. wattenburg, w. h.
400 | comment implementation recursive procedure block algol | irons, e. t. feurzeig, w.
401 | allocation storage array algol | sattley, k.
402 | dynamic declaration | ingerman, p. z.
403 | thunk compiling procedure statement comment procedure declaration | ingerman, p. z.
404 | syntax directed compiler algol | irons, e. t.
405 | algorithm coding efficient arithmetic operation | existing formula translation scheme yield inefficient coding method reduces number store fetch operation evaluates constant subexpressions compilation recognizes equivalent subexpressions | floyd, r. w.
406 | threaded list constructing combined algol machine assembly processor | evans jr., a. perlis, a. j. van zoeren, h.
407 | madcap scientific compiler displayed formula textbook language | wells, m. b.
408 | internal organization mad translator | arden, b. w. galler, b. a. graham, r. m.
409 | cl environment compiler | flexible large scale programming system facilitate solution information processing problem provide intercommunication program programmer developed realized ibm computer system based master concept provision accepting storing retrieving description instance large complex data set algorithm defined data set data algorithm expressed family command descriptive language concept distinct data description content description discussed detail | cheatham jr., t. e. collins jr., g. o. leonard, g. f.
410 | clip translator | englund, d. clark, e.
411 | magnetic tape data storage oracle algol translator | bottenbruch, h.
412 | recursive process algol translation | gray, a. a.
413 | basic compiler arithmetic expression | huskey, h. d. wattenburg, w. h.
414 | ibm data processing system feature unit | ibm data processing system announced recently international business machine corporation feature disk storage drive interchangeable disk pack newly developed unit | wheeling, r.
415 | digital computer western germany | schuff, h. k.
416 | multiple shooting method point boundary problem | morrison, d. d. riley, j. d. zancanaro, j. f.
417 | legal implication computer | paper point variety way computer system business industry involved legal entanglement suggests computer specialist responsibility call assistance forestalling minimizing entanglement planning stage technique suggested making legal clearance effective burden technology achieving favorable legal climate generally computer specialist alerted potential opportunity interpret lawyer technical aspect computer system involved legal situation | freed, r. n.
418 | random algorithm | behrenz, p. g.
419 | magic square algorithm | thacher jr., h. c.
420 | perm algorithm | phillips, e. s.
421 | position point relative polygon algorithm | hacker, r.
422 | combination algorithm | grench, r. e.
423 | matrix inversion algorithm | behrenz, p. g.
424 | gamma function algorithm | behrenz, p. g.
425 | complete elliptic integral algorithm | merner, j. n.
426 | term magic square algorithm | collison, d. m.
427 | psif algorithm | amit, d.
428 | multiple integration algorithm | mckeeman, w. m.
429 | adaptive nimerical integration simpson rule algorithm | mckeeman, w. m.
430 | treesort2 algorithm | kaupe jr.,a. f.
431 | treesort1 algorithm | kaupe jr., a. f.
432 | triangular regression algorithm | hafley, w. l. lewis, j. s.
433 | fixed world length array variable word length computer | sonquist, j. a.
434 | character manipulation fortran ii | poore jr., j. h.
435 | decision matrix basis simple data input routine | great deal time effort spent development bigger compiler language multiprogram executive system implementation method procedure instantaneous occurs evolutionary process concerned problem maintaining improving incorporating idea existing system neglected area author interested method employing decision matrix presented handling standard system programming problem providing data input routine | vasilakos, g. j.
436 | evaluation polynomial computer | knuth, d. e.
437 | compiling matrix operation | galler, b. a. perlis, a. j.
438 | mechanical pragmatic time motion study miniature mechanical linguistic system | gorn, s.
439 | line digital computer measurement neurological control system | stark, l. payne, r. okabe, y.
440 | record linkage | special difficulty encountered devising reliable system searching updating large document identified primarily basis name personal particular underlying problem making nearly maximum item identifying information individually unreliable collectively considerable discriminating power rule applied generally retrieval system developed methodological study linkage vital health record family grouping demographic research purpose rule way information utilization matching optimized discussed | newcombe, h. b. kennedy, j. m.
441 | topological sorting large network | topological sorting procedure required problem involving analysis network problem pert present paper present general method obtaining topological order permit treatment larger network handled present procedure achieves greater efficiency procedure adapted machine discussed term pert network activity ordered hour machine time method developed byproduct procedure needed westinghouse baltimore programmed present plan implement regard technique westinghouse present anticipated need completely served lockheed program | kahn, a. b.
442 | crout equilibration iteration algorithm | mckeeman, w. m.
443 | complex number real power algorithm | erwin jr.,g. w.
444 | evaluation jacobi symbol algorithm | may, r. w.
445 | combination algorithm | may, r. w.
446 | simpson integration algorithm | behrenz, p. g.
447 | certification calculation easter | williams, m. r.
448 | path matrix algorithm | ingerman, p. z.
449 | matrix inversion algorithm | ingerman, p. z.
450 | solution diophantine equation algorithm | peck, j. e. l.
451 | nesting statement ii algorithm | dahm, d. m. wells, m.
452 | nesting statement algorithm | dahm, d. m. wells, m.
453 | enlargement group algorithm | wells, m.
454 | crout equilibration iteration algorithm | mckeeman, w. m.
455 | exponentiation series algorithm | fettis, h. e.
456 | random algorithm | behrenz, p. g.
457 | quantum mechanical integral slater type integral | browne, j. c.
458 | coefficient determination algorithm | smith, v. h. allen, m. l.
459 | permute algorithm | eaves, lt. b. c.
460 | minifun algorithm | whitley, v. w.
461 | coding medical case history data computer analysis | lipkin, m. woodbury, m. a.
462 | computer pattern recognition technique electrocardiographic diagnosis | programmed digital computer general pattern classification recognition device phase lively interest artificial intelligence important choose class signal present undergoing good deal visual inspection trained people purpose pattern recognition comparison machine human performance obtained practical result serf additional motivation clinical electrocardiogram make class signal approach problem presented center multiple adaptive matched filter classify normalized signal present report five background application method | stark,l. okajima, m. whipple, g. h.
463 | ambiguity phrase structure language | floyd, r. w.
464 | syntactic analysis digital computer | paper account shadow language describe syntax subroutine enables computer perform syntactic analysis input subroutine consists string analyzed description syntax syntax expressed shadow language output consists trace table express result syntactic analysis tabular form version subroutine program year present account language subroutine summary material previously unpublished report additional discussion work relation general question problem oriented language string transformation | barnett, m. p. futrelle, r. p.
465 | perm algorithm | schrack, g. f.
466 | general order arithmetic algorithm | george, r.
467 | permutation generator algorithm | schrack, g. f. shimrat, m.
468 | incomplete elliptic integral algorithm | jefferson, d. k.
469 | critical path scheduling algorithm | hellberg, l.
470 | summation fourier series algorithm | wells, m.
471 | ortho algorithm | walsh, p. j.
472 | gauss method algorithm | counts, j. w.
473 | weightcoeff algorithm | rutishauser, h.
474 | input data organization fortran | yarbrough, l.d.
475 | test matrix inversion procedure | pei, m. l.
476 | remark sampling tape ii | nadler, m.
477 | remark sampling tape | muller, m. e.
478 | implementing stack | baecker, h.d.
479 | dispersion pas algorithm polyphase merge | paper present manner dispersing string polyphase merge number string dispersed level acceptable polyphase merge economical technique reaching level polyphase merge shown proved | mendoza, a. g.
480 | quick calculation jacobian elliptic function corrigendum | salzer, h. e.
481 | day look computing | armerding, g. w. gruenberger, f. j. marks, s. l. parkin, t. r.
482 | tall list processor philco computer | feldman, j.
483 | nonexistence phrase structure grammar algol | algol defined partly formal mechanism phrase structure grammar partly informally stated restriction shown formal mechanism type sufficient define algol | floyd, r. w.
484 | hankel function algorithm | schaefer, l. j.
485 | real error function erf algorithm | crawford, m. techo, r.
486 | tridiagonal matrix algorithm | dietzel, g. f.
487 | normdev algorithm | shafer,d.
488 | heuristic page turning multiprogrammed computer | weil, j. w.
489 | status ipl philco computer june | shaffer, s. s.
490 | programmed method printer graphical output | garfinkel, d.
491 | multiprogramming design low cost digital computer | penny, j. p. pearcey, t.
492 | analysis addressing method | paper present addressing method based calculation address identification record large recirculating type advantageous customary probability distribution displacement record calculated address number probe required address record computed basis markov chain model reader interested mathematics introduction summary sufficient | schay jr., g. spruth, w. g.
493 | property classification method design processing | mcgee, w. c.
494 | finite sequentially compact process adjoints matrix arbitrary integral domain | luther, h. a. guseman jr., l. f.
495 | procedure inverting large symmetric matrix | square method simultaneous adjustment parameter coefficient normal equation element symmetric positive definite matrix order solve normal equation evaluate precision measure resulting parameter inversion matrix coefficient required procedure matrix inversion take advantage symmetry programmed high speed computer element stored manipulated independent order allow computer memory capacity handle larger matrix procedure inverting symmetric matrix devised | busing, w. r. levy, h. s.
496 | set matrix testing computer program | brenner, j. l.
497 | remark line segment curve fitting dynamic programming | recent paper bellman showed dynamic programming determine solution problem previously considered stone problem comprises determination point subdivision interval line segment give square fit function interval bellman confined primarily analytical derivation suggesting briefly solution equation derived point subdivision reduced discrete search paper computational procedure considered fully similarity stone equation shown equation involving minimization found addition shown bellman method applied curve fitting problem additional constraint added end line segment curve | gluss, b.
498 | magic square algorithm | collison, d. m.
499 | permutation generator algorithm | collison, d. m.
500 | permute algorithm | collison, d. m.
501 | jacobi algorithm | hillmore, j. s.
502 | simpson integration algorithm | george, r.
503 | rational root polynomial integer coefficient algorithm | collison, d. m.
504 | factor algorithm | hillmore, j. s.
505 | composition generator algorithm | collison, d. m.
506 | permutation algorithm | hillmore, j. s.
507 | partition quicksort find algorithm | hillmore, j. s.
508 | matrix inversion algorithm | george, r.
509 | matrix inversion algorithm | struble, g.
510 | ber bei function algorithm | thacher jr., h. c.
511 | set test matrix algorithm | hillmore, j. s.
512 | telescope algorithm | thacher jr., h. c.
513 | sieve algorithm | hillmore, j. s.
514 | binomial coefficient algorithm | george, r.
515 | rational interpolation continued fraction algorithm | thacher jr., h. c.
516 | matrix inversion ii algorithm | george, r.
517 | evaluation pert network algorithm | eisenman, b. shapiro, m.
518 | magic square odd order algorithm | collison, d. m.
519 | magic square order algorithm | collison, d. m.
520 | complex division algorithm | smith, r. l.
521 | perm algorithm | trotter, h. f.
522 | generation partition constraint algorithm | stockmal, f.
523 | treesort algorithm | floyd,r. w.
524 | position point relative polygon algorithm | shimrat, m.
525 | computer technique handling analysis variance | howell, j. r.
526 | character manipulation fortran | pyle, i. c.
527 | description list concept | concept defined class object member distinguished processing property property defined mean partition set object disjoint class formal definition concept recursive nature concept list structure correspondence established recursive definition concept description list structure definition description list structure concept built elementary list structure recursive process list structure obtained compared description list structure discussed author previous publication | banerji, r. b.
528 | fortran business data processing | robbins, d. k.
529 | regression coded pattern data editing | robison, d. e. aroian, l. a.
530 | computer method radiation treatment planning | siler, w. laughlin, j. s.
531 | person matching electronic method | record linkage updating accomplished establishment preassigned number payroll number customer number social security number vital health record unique number generally preassigned individual purpose reporting service received health department order determine physician report refer individual identification compared laborious operation subject error misspelling marriage problem interested maintenance psychiatric case register maryland report hundred psychiatric agency refer patient record linked order provide unduplicated count individual care longitudinal record psychiatric history earlier paper describes general procedure register maintenance digital computer honeywell present detail initial procedure person matching process order elicit comment suggestion person experience matching | phillips jr., w. bahn, a. k. miyasaki, m.
532 | computation rational approximation continuous function | fraser, w. hart, j. f.
533 | digital synthesis correlated stationary noise | note propose method generating stationary noise prescribed auto covariance function digital method need technique arises testing performance data processing engineering system input corrupted correlated noise known form required technique simple produce strict sense stationary noise agrees approximately prescribed auto covariance function acf interval method consists approximating spectral density periodic process spectral line synthesizing periodic noise random phase amplitude order simplify discussion statistical property noise generated technique presented term exact harmonic analysis practice discrete harmonic analysis presented section | peabody, p. r. adorno, d. s.
534 | quick calculation jacobian elliptic function | salzer, h. e.
535 | triangular walk pattern hill method solving transcendental equation | onoe, m.
536 | nonlinear regression solution simultaneous equation | set observables z1 zm bound relation parameter a1 equation z1 a1 frequently problem determining set value ai minimizes sum square difference observed calculated value distinguished observable say zm solution equation zm zm z1 a1 rise function nonlinear ai rely version gaussian regression iteration scheme converges minimizing set value shown minimization technique solution simultaneous necessarily linear equation | baer, r. m.
537 | machine program theorem proving | program proof procedure discussed connection trial run improvement | davis, m. logemann, g. loveland, d.
538 | quantum mechanical integral slater type orbitals algorithm | kruglyak, y. a. whitman, d. r.
539 | definite exponential integral algorithm | kruglyak, y. a. whitman, d. r.
540 | definite exponential integral algorithm | kruglyak, y. a. whitman, d. r.
541 | simpson integration algorithm | relph, a. p.
542 | factor algorithm | relph, a. p.
543 | interpolation aitken algorithm | relph, a. p.
544 | ber bei function algorithm | relph, a. p.
545 | adjust inverse matrix element perturbed algorithm | george, r.
546 | logarithm complex number algorithm | johnson, m. l. sangren, w.
547 | gamma function algorithm | johnson, m. l. sangren, w.
548 | molecular orbital calculation molecular interaction | kruglyak, y. a. whitman, d. r.
549 | quantum mechanical integral slater type orbitals | kruglyak, y. a. whitman, d. r.
550 | definite exponential integral algorithm | kruglyak, y. a. whitman, d. r.
551 | definite exponential integral algorithm | kruglyak, y. a. whitman, d. r.
552 | gauss method algorithm | counts, j. w.
553 | complex number real power algorithm | johnson, m. l. sangren, w.
554 | newton maehly algorithm | bauer, f. l. stoer, j.
555 | reduction jacobi algorithm | rutishausr, h.
556 | translation boolean expression | bottenbirruch, h. h grau, a. a.
557 | simulation computer timing device
558 | modified inversion procedure product form inverse linear programming code | paper describes algorithm selection pivot row matrix inversion product form inverse algorithm developed linear programming code valuable inversion non dense matrix procedure paper tested operation esso research engineering ibm computer month substantial computer cost saving realized procedure | larsen, l. j.
559 | solution eigenvalue problem approximately known eigenvectors | appel, k.
560 | communication independently translated block | wegner, p.
561 | analytic differentiation computer | hanson, j. w. caviness, j. s. joseph, c.
562 | avint algorithm | whittier, v. e.
563 | sorting procedure algorithm | randell, b.
564 | cram algorithm | relph, a. p.
565 | invrs algorithm | caffrey, j.
566 | matrix inversion algorithm | conger, r. a.
567 | logarithm complex number algorithm | relph, a. p.
568 | exponential complex number algorithm | relph, a. p.
569 | binomial coefficient algorithm | steck, b.
570 | simpson rule integrator algorithm | kuncir, g. f.
571 | permutation lexicographical order algorithm | schrack, g. f. shimrat, m.
572 | add item chain linked list algorithm | kiviat, p. j.
573 | remove item chain linked list algorithm | kiviat, p. j.
574 | evaluation jacobi symbol algorithm | garland, s. j. knapp, a. w.
575 | evaluation definite complex line integral algorithm | pfaltz, j. l.
576 | shortest path algorithm | floyd, r. w.
577 | ancestor algorithm | floyd, r. w.
578 | generation partition part count form algorithm | stockmal, f.
579 | combination algorithm | kurtzberg, j.
580 | general order arithmetic algorithm | perstein, m. h.
581 | note sampling tape | jones, t. g.
582 | lost bit | oster, c. a.
583 | redundancy check algol program | thacher jr., h. c.
584 | report algorithmic language fortran ii | rabinowitz, i. n.
585 | initial experience operating multiprogramming system | lewis research center form degree program simultaneity operation modified sperry rand univac scientific model computer year simultaneity evolved initial achievement searching input output automatic time sharing independently coded problem important machine program system modification accomplish evolution additional modification required added facilitate ease coding operation modification proceed temperate pace insure basic data reduction work load computing center completed schedule educationally valuable mistake made suggested cure pointed future improvement emphasized basic principle multiprogramming system material follows description evolution programming hardware system developed present multiprogramming system lewis research center | landis, n. manos, a. turner, l. r.
586 | simultaneous system equation matrix inversion routine algorithm | roek, d. j.
587 | romberg integration algorithm | buchner, k. h.
588 | chebyshev curve fit algorithm | newhouse, a.
589 | evaluation fresnel cosine integral algorithm | cundiff, j. l.
590 | evaluation fresnel sine integral algorithm | cundiff, j. l.
591 | evaluation asymptotic expression fresnel sine cosine integral algorithm | cundiff, j. l.
592 | cobol batching problem | mullen, j. w.
593 | introduction machine independent data division | mullin, j. p.
594 | advanced input output system cobol compiler | bouman, c. a.
595 | guide teaching cobol | teaching cobol divided main subject area syntax cobol syntax solving problem programming concept generally accepted knowledge hardware computer logic possessed programmer teaching problem arises determining student know hardware logic computer write cobol program unfortunately historical data concerning student programming proficiency non existent difficult measure approach solving problem | greene, i.
596 | floating point arithmetic cobol | paper basic operation floating point arithmetic examined cobol procedure carrying specification working storage paper concludes procedure | kesner, o.
597 | modular data processing system written cobol | emery, j. c.
598 | cobol librarian key object program efficiency | answer question cobol compiler forced generation efficient object program purpose article present answer creation full utilization constructed cobol library | hicks, w.
599 | report writer cobol | donally, w. l.
600 | syntactical chart cobol | berman, r. sharp, j. sturges, l.
601 | interim report bureau ship cobol evaluation program | siegel, m. smith, a. e.
602 | cobol compatibility | lippitt, a.
603 | basic element cobol | sammet, j. e.
604 | cobol | cunningham, j. f.
605 | computer simulation city traffic | in simulating traffic flow on city streets, the national bureau of standards has used data  processing techniques to tabulate and make motion pictures of vehicle movements in the model.  each vehicle  is assigned a digital identification giving points of entry and exit, type of vehicle, desired speed,  and actual speed, in proportions simulating field data.  changes in the model can be made to observe  their consequences and to determine the ability of a real street to carry loads expected in the future.
606 | method eliminating ambiguity due signal coincidence digital design | kaiser, c. j.
607 | calculation easter | knuth, d.
608 | permutation algorithm | peck, j. e. l. schrack, g. f.
609 | permutation algorithm | brown, p. j.
610 | sieve algorithm | brown, p. j.
611 | permutation generator algorithm | howell, j. r.
612 | permute algorithm | peck, j. e. l. schrack, g. f.
613 | jacobi algorithm | evans, t. g.
614 | simpson integration algorithm | hennion, p. e.
615 | addressing multidimensional array | method representing function variable consider function assume value selected point dimensional space picture analyst element dimensional array exist conventional storage linear array vector mean performing transformation set index locating array element space location address element storage vector subject paper noted index address transformation computationally identical conversion number fixed mixed radix number system way implementing transformation | hellerman, h.
616 | information algebra phase report language structure group codasyl development committee | this report represents the results of the first phase of the work of the language structure  group.  the goal of this work is to arrive at a proper structure for a machine-independent problem-defining  language, at the systems level of data processing.  the report is based, for the most part, on a mathematical  model called "an information algebra" developed primarily by r. bosak.  it is hoped that this report  will be read (a) with avid interest by programming language designers and implementors, and all those  interested in developing a theoretical approach to data processing; (b) with interest and understanding  by professional programmers and systems analysts; and (c) with appreciation by the businessman-analyst-manager.   the authors have not attempted an exhaustive discourse in this report.  rather, they have tried to present  a philosophy to the professional people who are vitally concerned with providing a working language for  the systems analyst's use.  they trust that the ideas in this report will stimulate others to think along  similar lines.  questions and comments will be welcomed, and can be addressed to any of the members of  the language structure group:  robert bosak, system development corporation;  richard f. clippinger,  honeywell edp division;  carey dobbs, remington rand univac division;  roy goldfinger (chairman), ibm  corporation;  renee b. jasper, navy management office;  william keating, national cash register;  george  kendrick, general electric company;  jean e. sammet, ibm corporation.
617 | poseidon | computer form part control system completely automatic partly human work speed control system perform calculation data processing fast result required instant action control system known working real time | wheeling, r. f.
618 | computer key total system control industrial viewpoint | man man machine process characterized main type market type shown estimated | carlson, w. m.
619 | retrieval misspelled name airline passenger record system | paper discus limited problem recognition retrieval misspelled roster hundred name reservation inventory flight large jet airliner program developed operated telefile stored program core drum memory solid state computer retrieve passenger record successfully despite significant misspelling original entry time retrieval time procedure involves automatic scoring technique match name condensed form name closely resembling requested phone number annexed presented agent final selecton program successfully isolated retrieved name subjected number unusual usual misspelling | davidson, l.
620 | ratfact algorithm | halstead, m. h.
621 | romberg integration algorithm | thacher jr., h. c.
622 | optimal classification object algorithm | mayoh, b. h.
623 | economising sequence algorithm | mayoh, b. h.
624 | economising sequence algorithm | mayoh, b. h.
625 | reciprocal gamma function real argument algorithm | holsten, w.
626 | method representation storage retrieval random code digit number random code digit number | foster, m. b.
627 | knotted list structure | weizenbaum, j.
628 | floating point number representation algorithmic language | grau, a. a.
629 | wired binary decimal conversion scheme | lynch, w. c.
630 | evaluation autocode readability | requirement autocode pair requirement easy read easy write compatible paper argues readability added translation process programmer enjoy utmost economy expression management full valid cobol version printed give advantage readability compatibility | ellis, p. v.
631 | automatic programming language translation syntactical analysis | ledley, r.s. wilson, j. b.
632 | vectorcardiographic diagnosis aid algol | forsythe, g. e. von der groeben, j. toole, j. g.
633 | simulation analysis biochemical system iii analysis pattern recognition | garfinkel, d. polk, w. higgins, j. j. ochser, r. t.
634 | manipulation tree information retrieval | salton, g.
635 | note multiplying boolean matrix | baker, j. j.
636 | tape splitting iterative program | weisert, c.
637 | neliac generated compiler | neliac system machine generated original neliac system developed naval electronics laboratory san diego basic bootstrap process generate system neliac language generated existing neliac compiler experience shown inherent difficulty building compiler compiler pointed advantage pol constructing programming system report present result project completed neliac system generate compiler ibm compiler run produce program neliac language generated neliac system reduction programming time improvement documentation system significant | watt, j. b. wattenburg, w. h.
638 | surge recoding cobol merchandise control algorithm | longo, l. f.
639 | difference expression coefficient algorithm | giammo, t. p.
640 | rational root polynomial integer coefficient algorithm | perry, c.
641 | interpolation differentiation integration algorithm | hennion, p. e.
642 | introduction algol | schwarz, h. r.
643 | simulation analysis biochemcial system ii solution differential equation | larson, r. sellers, p. meyer, r.
644 | string language symbol manipulation based algol | artificial computer programming language proposed describing manipulation string character symbol concept string introduced algol report extended adding declaration string substring string array explicit length ability concatenate shift string ranking symbol comparing sting boolean relation primer informal description language example description experiment language ibm computer formal description algol report defines proposed string language | wegstein, j. h. youden, w. w.
645 | invrs algorithm | randell, b. broyden, c. g.
646 | inverse finite segment hilbert matrix algorithm | randell, b.
647 | numerical solution polynomial equation algorithm | cohen, k. j.
648 | sorting procedure algorithm | flores, i.
649 | factor algorithm | peck, j. e. l.
650 | curve fitting constraint algorithm | peck, j. e. l.
651 | survey language system information retrieval | grems, m.
652 | semantic structure information system | sable, j. d.
653 | translation retrieval request couched semiformal english language | cheatham jr., t. e. warshall, s.
654 | language problem posed heavily structured data | barnes, r. f.
655 | comit ir language | feature make comit good symbol manipulation language render suited type information retrieval program presented general discussion unique programming language examination application | yngve, v. h.
656 | information system ability extract intelligence data | wang, t. l.
657 | information structure processing retrieving | colilla, r. a. sams, b. h.
658 | discussion pro con special ir language | sammet, j. e. ohlman, h. bohnest, h. g.
659 | reversion series algorithm | thacher jr., h. c.
660 | test matrix determinant inverse pracnique | englar, t. s.
661 | indexing lambda notation | method indexing sequentially stored element sparse multi dimensional array scheme notation | barnett, m. p.
662 | shuttle sort algorithm | juelich, o. c.
663 | determinant algorithm | lapidus, a.
664 | assignment algorithm | witty, r. d.
665 | gauss seidel algorithm | shantz, p. w.
666 | topological ordering pert network algorithm | kase, r. h.
667 | kutta merson algorithm | lukehart, p. m.
668 | minimum excess cost curve algorithm | briggs, w. a.
669 | specification jovial | shaw, c. j.
670 | legal implication computer banking business | introduction computer banking business wide variety legal implication merit careful attention early stage industry highly regulated government subject statute regulation affected important common law rule established court legal ramification involve mechanization significant economically attractive phenomenon premise processing essential identify provide legal aspect system practice crystallize order avoid later impact unanticipated physical complication expense legal aspect computerization banking business especially diverse state basic question bank authorized law invest facility directly cooperative challenging question relating premise processor respect obligation disclose information concerning bank customer adequacy fidelity bond coverage extent liability improper refusal pay check susceptibility regulation government agency pertinent propriety data processing bank nonbank entity rendering service charge bank depositor | freed, r. n.
671 | telefile case study line saving bank application | development line computer system saving bank institution traced early conceptual need bank consummation design teleregister corporation bank equipment criterion led development telefile system teleregister corporation operation line line program statistic cited reliability performance system benefit bank discussed banker point view indication future trend line saving bank field discussed | sanders, m.
672 | recent development affecting adp tax administration | leibowitz, g. j.
673 | account classification automating bank | eckert, j. b.
674 | application ibm edp method calculation formation constant complex iron | andrews, a. c. hassler, j. decou, f.
675 | coding clinical laboratory data automatic storage retrieval | series clinical laboratory code developed accept store urin analysis blood chemistry hematology test result automatic data processing code constructed part computerized hospital simulation able handle result laboratory test encountered unique feature code accept conventionally recorded qualitative quantitative test result clinical test result need arbitrarily stratified standardized altered coded paper describes code developed present listing urin analysis code criterion developing code outlined problem multiple synonymous terminology discussed solution problem flexible computer produced composite laboratory report discussed reproduction report paper concludes problem remain unsolved ten year witness emergence practical automated information system laboratory | gross, l. d.
676 | computation type incompletebeta function | tang, i. c.
677 | length string merge sort | detailed statistic length maximal sorted string result form internal sort phase merge sort tape shown string produced alternating method produce ascending descending string alternately tend fourth long method produce ascending string contrary statement appeared previously literature slight modification read backward polyphase merge algorithm suggested | knuth, d. e.
678 | optimizing bit time computer simulation | major component bit time computer simulation program boolean compiler compiler accepts boolean function representing simulated computer digital circuit generates set machine instruction subsequently executed host computer technique discussed increasing sophistication boolean compiler optimize bit time computer simulation technique applicable general purpose computer | katz,j. h.
679 | recent improvement madcap | madcap programming language admitting subscript superscript form displayed formula basic implementation language previous paper madcap scientific compiler displayed formula textbook language comm acm jan paper discus recent improvement language area complex display logical control subprogramming area complex display prominent improvement notation integration binomial coefficient area logical control chief feature notation variably nested looping discussion subprogramming focused madcap notation procedure | wells, m. b.
680 | error correcting parse algorithm | irons, e. t.
681 | flexible abbreviation word computer language | lomis, r. g. rubin, j.
682 | recursive programming fortran ii | ayers, j. a.
683 | serial technique determine minimum path | weimer, d. l.
684 | interpolation differentiation integration algorithm | hennion, p. e.
685 | euler summation algorithm | thacher jr., h. c.
686 | smooth algorithm | george, r.
687 | shank algorithm | thacher jr., h. c.
688 | bessel function algorithm | simoes pereira, j. m. s.
689 | report visit discus common programming language czechoslovakia poland | gosden, j. a. merner, j. n. gay, r. e. jones, j. l. christopher, j. s.
690 | usa participation international standard glossary information processing | traub, j. f.
691 | description apt language | apt programmed tool language numerical control programming metalinguistic notation introduced algol report example apt usage included presented historical summary development apt statement concerning present status | brown, s. a. drayton, c. e. mittman, b.
692 | inverse test matrix | stockmal, f. j.
693 | extension fibonaccian search variable | technique fibonaccian search concept developed solve optimization problem involving unimodal function variable technique proven optimal sense dimensional fibonaccian search valuable kind calculation | krolak, p. cooper, l.
694 | comparison disk tape | principal characteristic magnetic disk tape unit summarized compared characteristic disk illustrated sorting compared tapesort conclusion presented disk competitive tape important application | hess, h.
695 | disk stretch | paper begin briefly describing stretch ibm computer special emphasis organization operation input output equipment physical characteristic disk system bit word usec word transmission rate noted timing limitation due arm motion disk rotation discussed application disk usage discussed separately problem program system program compiler supervisory program approximately word disk storage reserved storage system program subroutine library problem program filed disk programming technique discussed transmitting word disk core storage minimum delaying interruption arithmetic unit dump disk considered recovery computer malfunction mathematical physical development calculation comment made regarding reliability economics utility weakness limitation disk system future application noted disk connotation | carlson, b. g. voorhes, e. a.
696 | automatic data acquisition inquiry system disk | lockheed missile space company installed large scale automatic data acquisition ada system tie company manufacturing facility located van nuys sunnyvale california system includes remote input station collect transmit company operating data central data processing center rca edp system record control flow data transmitted data processing center large capacity rca data disc store information required provide date information response inquiry received remotely located inquiry station addition storage data disk system record incoming outgoing data magnetic tape input company conventional line business data processing application | edwards, j. d.
697 | numerical method determination moving field isodose curve treatment planning radiotherapy | dalrymple, g. v. perez-tamayo, r.
698 | data dial communication computer ordinary dial telephone | operating system user call remotely located computer ordinary dial telephone special hardware connection required user telephone input computer telephone dial output computer spoken form result test telephone boston area reported | marill, t. edwards, d. feurzeig, w.
699 | contour map program ray crystallography | fortran program ibm system plotter produce contour map matrix point evenly spaced dimension contoured scale factor ax ax need perpendicular | dayhoff, m. o.
700 | hermite interpolation algorithm | dwyer, t. a.
701 | shuttle sort algorithm | schubert, g. r.
702 | assign algorithm | filsak, z. vrchovecka, l.
703 | assign algorithm | scowen, r. s.
704 | combinatorial thing time time time algorithm | collins, d. h.
705 | combinatorial thing time algorithm | blakely, r. e.
706 | fourier series approximation algorithm | schubert, g. r.
707 | erf algorithm | ibbetson, d.
708 | evaluation fresnel integral algorithm | gray, m. d.
709 | assignment algorithm | newhouse, a.
710 | fresnel integral algorithm | gray, m. d.
711 | frequency distribution algorithm | gray, m. d.
712 | hermite interpolation algorithm | schubert, g. r.
713 | lagrangian interpolation algorithm | schubert, g. r.
714 | gauss algorithm | ibbetson, d.
715 | discrete convolution algorithm | foreman jr., w. t.
716 | stringsort algorithm | boothroyd, j.
717 | partitioning algorithm finite set | partition set element represented tuples positive integer algorithm generate repetition tuples partition set partition set fewer set partition set exactly set | hutchinson, g.
718 | experiment automatic verification program | effective compiler replacing explicit verification cost technique | weinberg, g. m. gressett, g. l.
719 | variable width stack | character addressable variable field computer permit ready establishment manipulation variable width stack single machine command push variable field item stack pop availability variety field delimiters machine push pop variable width item command stacking operation made basis compiler decoding algorithm proper machine class compilation advantage machine fixed length word | rotenberg, n. opler, a.
720 | format free input fortran | bailey, m. j. barnett, m. p. futrelle, r. p.
721 | report proposed american standard flowchart symbol information processing | paper present essential content proposed american standard flowchart symbol information processing proposed standard prepared subcommittee x3 problem description analysis american standard association asa |  rossheim, r. j.
722 | alcor group representation algol symbol
723 | ecma subset algol
724 | profile programmer | synopsis: 549 members of the acm participated in a study concerned primarily with the attitudes  of programmers toward their careers and jobs.  a very high percentage of programmers have apparently  entered their careers by accident; it has proven a happy choice for most and they expect to remain in  the field during the next five years.  their principal job satisfactions relate to the nature of their  work, and mostfind their jobs offer high level of professional interest and good working conditions.   salary and advancement prospects, however,are not as satisfactory.  more than half report a positive  attitude toward programmers and programming on the part of their organizations.  turnover among themselves  is attributed primarily to poor management-salary is seen as the principal motivating factor in turnover  among other programmers.  nature of the work offered and salary are principal determinants in accepting  a new job.  programmers are less mobile than expected.  programmers tend to see their colleagues in a  favorable light, on the whole.  personalities seem to vary with function, systems programmers differing  from applications programmers.  four principal problems for programming in the immediate future are listed  by participants: languages, personnel, various specific applications and techniques, and building programming  as a profession.
725 | group participation computer demonstration | mccormick, e. m.
726 | general program analysis square rectangular lattice design | paper describes general purpose program handle incomplete block design known square rectangular lattice flow diagram method calculation programmed digital computer | smillie, k. w.
727 | approximate solution delta | dimensional dirichlet problem delta fu treated numerically exceptionally fast exceptionally accurate numerical method programming detail numerous example mathematical theory supplied extension method natural dimensional problem mean dimensional | greenspan, d. yohe, m.
728 | computer drawn flowchart | meet need improved documentation written computer program simple system effective communication presented shown great promise programmer describes program simple format computer prepares flow chart cross referenced listing input description date easily final output clearly explains original program system proved valuable debugging coding aid | knuth, d. e.
729 | generalization algol | wirth, n.
730 | mirfag compiler based standard mathematical notation plain english | pilot version compiler mirfag operation chief feature system intended solution scientific problem presentation mathematical formula entirely standard textbook notation plain english organizational instruction automatic error diagnosis indicating actual location error uncompiled program attempt minimize fragmentation original problem statement normal feature programming system | gawlik, h. j.
731 | symmetric list processor | list processing system list cell forward backward link datum system intended imbeding higher level language capable calling function subroutine coded machine language presentation form fortran program depending limited set fortran program depending limited set primitive machine language subroutine defined finally set field character manipulation primitive round system | weizenbaum, j.
732 | monte carlo inverse algorithm | rodman,r. d.
733 | newton interpolation forward divided difference algorithm | thacher jr., h. c.
734 | newton interpolation backward divided difference algorithm | thacher jr., h. c.
735 | calculation confluent divided difference algorithm | thacher jr., h. c.
736 | modified hankel function algorithm | thacher jr.,h. c.
737 | exponentiation series algorithm | lawrence, j. d.
738 | fourier series approximation algorithm | george, r.
739 | minifun algorithm | wasscher, e. j.
740 | interest algorithm | wright, c. b.
741 | evaluation determinant algorithm | freed, b. h.
742 | evaluation determinant algorithm | freed, b. h.
743 | arccosin algorithm | konda, m.
744 | ative algorithm | haubrich, j. g. a.
745 | steep2 algorithm | wasscher, e. j.
746 | steep1 algorithm | wasscher, e. j.
747 | generation permutation lexicographical order algorithm | shen, m. k.
748 | semi iterative process evaluating arctangent | chu, w. h. saathoff, d. r.
749 | note onstochastic matrix | dumey, a. i.
750 | pei matrix eigenvectors | newbery, a. c. r.
751 | note set test matrix inversion | rodman, r. d.
752 | closing print tape | moore, d. p.
753 | procedure converting logic table condition efficient sequence test instruction | egler, j. f.
754 | ye indiscreet monitor | blatt, j. m.
755 | exponential method numerical integration ordinary differential equation | formula numerical integration prepared involves exponential term formula compared standard integration method shown large class differential equation exponential formula superior stability property large step size formula large step size decrease total computing time solution significantly engineering problem high accuracy needed | pope, d. a.
756 | computer program editing news | danielson, w. a. briggs, b.
757 | simulation traffic network | katz, j. h.
758 | skeletal structure pert cpa computer program | introduction mechanic pert cpa computer program provided major component program purpose interrelationship outlined | kahn, a. b.
759 | continued operation notation symbol manipulation array processing | account notational device formal representation syntax string relationship string transformation procedure computing procedure deal array function variable device consists continued operation collective symbol analogous summation symbol sigma continued multiplication symbol pi conventional mathematics | barnett, m. p.
760 | dialect fortran | pyle, i. c.
761 | note dangling algol | revision algol proposed eliminate ambiguous statement add convenience language discussion background problem sketch proof ambiguity removed included | kaupe jr., a. f.
762 | remark syntax symbolic programming language | diforino, a. c.
763 | syntax controlled generator formal language processor | eickel, j. bauer, f. l. paul, m. samelson, k.
764 | reduction matrix polynomial element algorithm | hennion, p. e.
765 | orthogonal polynomial square surface fit algorithm | bitterli, c. v.
766 | xy move plotting algorithm | fletcher, w. e.
767 | certification algorithm combinatorial thing time time time wolfson wright comm acm apr | thoro, d.
768 | certification algorithm combinatorial thing time wolfson wright comm acm apr | thoro, d.
769 | algebra set algorithm | bosworth, k. m.
770 | combination order algorithm | bosworth, k. m.
771 | combination lexicographical order algorithm | bosworth, k. m.
772 | gomory algorithm | lefkowitz, b. d'esopo, d. a.
773 | matrix inversion algorithm | george, r.
774 | jacobi algorithm | naur, p.
775 | interpolation differentiation integration algorithm | hennion, p. e.
776 | partition quicksort find algorithm | randell, b. russell, l. j.
777 | set test matrix algorithm | naur, p.
778 | legendre function kind real imaginary argument algorithm | george, r.
779 | crout ii algorithm | domingo, c. rodriguez-gil, f.
780 | algorithm invert alg gauss method alg inversion ii gjr | naur, p.
781 | telescope algorithm | bridges, j. f.
782 | telescope algorithm | bridges, j. f.
783 | shellsort algorithm | boothroyd, j.
784 | normal random algorithm | george, r.
785 | conversion calendar date julian day number algorithm | tantzen, r. g.
786 | adaptive integration multiple integration algorithm | mckeeman, w. m.
787 | matrix division algorithm | wells, m.
788 | muller method finding root arbitrary function algorithm | roman, r. d.
789 | bandsolve algorithm | thurnau, d. h.
790 | zersol algorithm | domingo, c.
791 | character manipulation fortran | smith, d. d.
792 | multiple precision binary decimal integer conversion addition subtraction | keyes, d. f. moore, d. p.
793 | mapped list structure | baecker, h. d.
794 | list type storage technique alphameric information | method economic term space time proposed storage manipulation character string arbitrary length fixed word length computer method illustrated application algol type identifier algol block structure | bowlden, h. j.
795 | debugging system source language level | ferguson, h. e. berner, e.
796 | sabrag time sharing low cost computer | serial sabrac computer designed built scientific department israel defense ministry location magnetic drum main store avoid need resort optimum programming technique increase efficiency computer word ferrite core store program obeyed transfer core drum store twin paper tape input output channel autonomously concurrently time shared multiplication division order autonomous machine executing order simultaneously function naturally interlocked number advanced order facility incorporated execute order permit temporary jump order modifier register permit double modification general relative addressing subroutine effective speed machine muchhigher basic specification lead expect design concept time sharing incorporated low cost computer | lehman, m. netter, z. eshed, r.
797 | american standard code information interchange
798 | catalogue entry retrieval system | scheff, b. h.
799 | design separable transition diagram compiler | cobol compiler design presented compact permit rapid pas compilation large subset cobol moderately large computer version compiler smaller machine require working tape compiler tape method largely applicable construction algol compiler | conway, m. e.
800 | linking segment subprogram language linking loader | mccarthy, j. corbato, f. j. daggett, m. m.
801 | square solution constraint algorithm | synge, m. j.
802 | syminv2 algorithm | rutishauser, h.
803 | syminv2 algorithm | evans jr., a.
804 | exponentiation series algorithm | thacher jr., h. c.
805 | newton maehly algorithm | kondo, j.
806 | remark certification matrix inversion procedure | moler, c.
807 | reversion series algorithm | fettis, h. e.
808 | confluent hypergeometric algorithm | relph, a. p.
809 | hypergeometric algorithm | relph, a. p.
810 | complex power algorithm | relph, a. p.
811 | smoothing algorithm | rodriguez gil, f.
812 | smoothing algorithm | rodriguez-gil, f.
813 | difference derivative algorithm | vande riet, r. p.
814 | complex arithmetic algorithm | vande riet, r. p.
815 | normal probability curve fitting algorithm | colker, a.
816 | erlang probability curve fitting algorithm | colker, a.
817 | nexcom algorithm | hopley, j.
818 | realizing boolean connective ibm | hellerman, h. senzig, d. n.
819 | polynomial evaluation revised | eisman, s. h.
820 | checking loop network | gordon, r. m.
821 | remark sampling tape iii | juelich, o. c.
822 | real time programming specification | problem implementation large real time application treated suggested guideline program specification developed problem delineated occur system programming | head, r. v.
823 | syntactic description bc nelliac | huskey, h. d. love, r. wirth, n.
824 | descriptran automated descriptive geometry | descriptive geometry consists procedure originally designed solve space geometry problem graphical construction measurement computation addition unifies simplifies approach problem call subroutine compute coordinate correspond obtainable graphical construction advantage approach descriptive geometry accuracy computation speed digital computer descriptran make program problem space statement consists subroutine analogous procedure descriptive geometry | kliphardt, r. a.
825 | pip photo interpretive program analysis spark chamber data | operating computer program process photographically recorded data input program consists spark chamber photograph track high energy particle recorded program scan measure performs preliminary interpretation photograph continuous operation processing rate photographic frame hour achieved | rudloe, h. deutsch, m. marill, t.
826 | remark fortran subroutine time series analysis | bennett, c. m.
827 | disk sorting | sorting technique ibm random access storage device evaluated | schick, t.
828 | incompressible flow network calculation | general method calculation flow pressure fluid flow network presented method applicable computer | cantrell, h. n.
829 | external language klipa ural digital computer | greniewski, m, turski, w.
830 | corc cornell computing language | conway, r. w. maxwell, w. l.
831 | real error function erf algorithm | thacher jr., h. c.
832 | curve fitting constraint algorithm | isoda, k.
833 | reduction symmetric bandmatrix triple diagonal form | schwartz, h. r.
834 | nonrecursive adaptive integration algorithm | mckeeman, w. m. tesler, l.
835 | complementary error function large algorithm | thacher jr., h. c.
836 | error function large algorithm | thacher jr., h. c.
837 | incomplete beta ratio algorithm | ludwig, o. g.
838 | direct search algorithm | kaupe jr., a. f.
839 | square solution constraint algorithm | synge, m. j.
840 | square surface fit algorithm | arthurs, t. d.
841 | shuttle sort algorithm | shaw, c. j. trimble, t. n.
842 | posteriori bound polynomial algorithm | gibb, a.
843 | assign algorithm | hajek, o.
844 | fortran edit feature | fedako,j. e.
845 | test matrix determinant inverse | caffrey, j.
846 | inverse conversion table | sanborn, t. g.
847 | penny matching program | logic penny matching program written csx | wall, e. brown, r. m.
848 | note range transformation square root logarithm | germ idea previous paper picked year function desirable transform argument short range symmetric give example usage square root logarithm function binary decimal machine | bemer, r. w.
849 | tree structure processing | data processing problem frequently searched altered binary search technique efficient searching large organization readily adapted alteration conversely chained allocation permit efficient alteration searched efficiently organized tree structure discussed shown searched altered time proportional slog number item parameter tree shown optimizing lead search time cent slower binary search tree organization employ data chain considered compromise organization binary search chained relation tree organization multidimensional indexing trie structure discussed | sussenguth jr., e. h.
850 | conversion reconversion comparison technique variable length sorting | logic converting highly variable input record format easily efficiently processed sorting program internal record format discussed relation conversion input format reconversion output format comparison technique internal format | waks, d. j.
851 | design characteristic variable length record sort fixed length record sorting technique | paper describes application technique sorting fixed length record problem variable length record sorting technique implemented sylvania computer system fixed length word memory specifically technique sequence variable length record unrestricted size produce long initial string data merge string data power number work tape system restrict volume input data | goetz, m. a.
852 | method comparing time requirement sorting method | hall, m. h.
853 | cobol sort verb | paterson, j. b.
854 | characteristic sorting computing system random access storage device | substantial difference characteristic random access storage tape device dictate concept objective computer program design considered viewpoint external medium true case sorting tape oriented system major sorting problem minimizing merge time despite limited order merge contrast sorting random access oriented system encourages selection optimum order merge order problem discussed paper criterion developed determining optimum order merge according property random access storage device attention problem key sorting versus record sorting possibly disadvantage key sorting random access system | hubbard, g. u.
855 | organization structure dataon disk memory system efficient sorting data processing program | approach organization structure data bryant disc memory system sorting performing data processing function presented area covered characteristic bryant disc system bendix rca proposed chaining structure data function disk executive routine concept sorting performing maintenance processing proposed structure executive routine discussed additionally shown sorting accomplished disk storage work area | goetz, m. a.
856 | sorting large volume random access drum storage | approach sorting record random access drum memory sort program designed generalized generating sort applicable variety record statement description divided part part present operating environment defines general solution part describes internal sort merge technique | falkin, j. savastano jr., s.
857 | sorting nonredundant technique fact compiler | typical structure including called non redundant examined method fact sort discussed | glore, j. b.
858 | tape merge pattern generator | routine presented specifies sequence merge cycle effect merging sorted tape routine designed minimize elapsed computer time varying power merge cycle tape drive characteristic assigning drive single reel drive multiple reel | cooke, w. s.
859 | computer planned collates | french, n.c.
860 | comparison polyphase oscillating sort technique | comparison oscillating polyphase sort technique developed computer system ten tape drive basis comparison total reading writing required number input string tape drive technique | goetz, m. a. toth, g. s.
861 | read backward polyphase sorting | read backward polyphase sorting efficient tape sort sorting technique backward polyphase produce continuous merging process tape total number tape sorting process presorting technique conjunction polyphase merge sort provided presort capability producing ascending descending string distributing string tape required polyphase merge | gilstad, r. l.
862 | string distribution polyphase sort | malcolm jr., w. d.
863 | multiphase sorting | manker, h. h.
864 | empirical study minimal storage sorting | hibbard, t. n.
865 | internal tape sorting replacement selection technique | general technique sequencing unsorted record presented technique shown applicable stage generalized sort program formation initial string sorting record memory storage internal sort shown record memory storage record sequenced log2 test record initial string length average 2n random input record reading writing processing accomplished simultaneously computer permit overlap | goetz, m. a.
866 | sorting computer | gotlieb, c. c.
867 | square fitting plane surface dynamic programming | dynamic programming recently stone bellman gluss determine closet fit broken line segment curve interval constraint number segment fixed present paper successive model developed extend method fitting broken plane segment surface defined type subareas space model considers rectangular area constraint plane segment defined grid space shown model incorporated algorithm successive approximation optimal fit type closed area finally application briefly | gluss, b.
868 | suggested method making fuller string algol | shoffner, m. g. brown, p. j.
869 | term magic square algorithm | thoro, d.
870 | term magic square algorithm | barnecut, j. n. r.
871 | psif algorithm | thacher jr., h. c.
872 | adaptive numerical integration simpson rule algorithm | mckeeman, w. m.
873 | random algorithm | poore jr., j. h.
874 | chebyshev curvefit algorithm | hale, r. p.
875 | incomplete elliptic integral algorithm | van de riet, r. p.
876 | complete elliptic integral algorithm | thacher, h. c.
877 | complete elliptic integral kind algorithm | thacher jr., h. c.
878 | reduction matrix polynomial element algorithm | hennion, p. e.
879 | newton interpolation forward divided difference algorithm | kahan, w. farkas, i.
880 | newton interpolation backward divided difference | kahan, w. farkas, i.
881 | calculation confluent divided difference algorithm | kahan, w. farkas, i.
882 | monte carlo algorithm | rodman, r. d.
883 | complete elliptic integral algorithm | thacher jr., h. c.
884 | orthogonal polynomial square surface fit algorithm | clark, r. e. kubik, r. n. phillips, l. p.
885 | modified hankel function algorithm | fettis, h. e.
886 | xy move plotting algorithm | stockton, f. g.
887 | combinatorial thing time time time algorithm | wright, h. v. wolfson, m. l.
888 | algorithm combinatorial thing time | wolfson, m. l. wright, h. v.
889 | official action response algol programming language
890 | selected definition | selection definition prepared acm standard committee subcommittee programming terminology presented review acm membership | fritz, w. b.
891 | everyman information retrieval system | information retrieval problem solution presented posed technical library limited bubget personnel solution general applicable type retrieval problem method solution make group previously dismissed information retrieval program expensive difficult programming stand point reconsider position present solution make install information retrieval program month equipment | whitley, v. w.
892 | recol retrieval command language | interrogation scheme retrieval manipulation data record language interrogation scheme selecting record logical condition statement defining record class associating record editing printed output summarizing result operation example typical application significant feature machine implementation | climenson, w. d.
893 | significance arithmetic digital computer | nyu modified include significance mode operation intended facilitate identification significant bit result floating point arithmetic operation manner floating point arithmetic handled mode discussed numerical experiment mode comparison made ordinary normalized mode example include power series evaluation linear equation solution determinant evaluation matrix inversion | goldstein, m.
894 | iterative factorization technique polynomial | iterative technique displayed factor arbitrary degree found polynomial variable convergence shown occur jacobian vanish initial approximation factor actual factor process simply programmed preliminary result adapted digital computer factor degree technique similar bairstow present method simpler | luther, h. a.
895 | computational extension variate difference method | presented computational extension variate difference method developed tintner | scheinok, p. a.
896 | characteristic value vector defective matrix | thompson, g. t.
897 | note proof non existence phrase structure grammar algol | brown, p. j.
898 | random algorithm | laughlin, d. l.
899 | magic square algorithm | bosworth, k. m.
900 | ancestor algorithm | thacher jr., h. c.
901 | difference expression coefficient algorithm | clark, e. s.
902 | determinant algorithm | digby, d. w.
903 | exponentiation series algorithm | fettis, h. e.
904 | fourier series approximation algorithm | mifsud, c. j.
905 | algebra set algorithm | mifsud, c. j.
906 | combination order algorithm | mifsud, c. j.
907 | combination lexicographical order algorithm | mifsud, c. j.
908 | test matrix inversion | lasor, w. s.
909 | arithmetizing declaration corrigendum | conway, m. e. speroni, j.
910 | selective instruction trap | mayer, r. j.
911 | variant method searching | mcilroy, m. d.
912 | addressing array yi dimension fortran analysis variance | garber, m. j.
913 | neliac | halstead, m. h. 
914 | jovial documentation | shaw, c. j.
915 | documentation ipl | newell, a.
916 | fortran | heising, w. p.
917 | comit | yngve, v. h.
918 | cobol | cunningham, j. f.
919 | documentation problem algol | naur, p.
920 | documentation programming language | yngve, v. h. sammet, j. e.
921 | incomplete elliptic integral algorithm | meyer, n. a.
922 | multint algorithm | thacher jr., h. c.
923 | gomory algorithm | bauer, f. l.
924 | nexcom algorithm | hopley, j.
925 | location vector lexicographically ordered listalgorithm | walter, h. f.
926 | syminv2 algorithm | rutishauser, h.
927 | linear programming applied ultraviolet absorption spectroscopy | white, w. c. shapiro, b. pratt, a. w.
928 | character manipulation fortran | lewis, t. s.
929 | glossary construction | grems, m.
930 | decimal binary conversion short field | yarbrough, l. d.
931 | systematic mistake analysis digital computer program | miller, j. c. maloney, c. j.
932 | matrix inversion gauss jordan inversion ii algorithm | naur, p.
933 | magic square algorithm | naur, p.
934 | gauss method algorithm | naur, p.
935 | calculating prime mean gps algorithm | naur, p.
936 | set test matrix algorithm | naur, p.
937 | inverse finite segment hilbert matrix algorithm | naur, p.
938 | invert algorithm | naur, p.
939 | gamma function algorithm | behrenz, p. g.
940 | generating discrete random variable computer | note concerned detail instruct computer choose thing assigned probability method uniform variable direct computer memory location sequence appropriately chosen conditional probability efficient memory space fast program result | marsaglia, g.
941 | recursive program general dimensional integral | general program outlined dimensional integration variable limit program recursive nature simpson rule combined repeated bisection attain required accuracy developed ferranti mercury autocode scheme | cadwell, j. h.
942 | fortran subroutine time series analysis | author recently concerned time series study constituted fairly typical piece applied statistical research involving extensive computation moderately large quantity data wehave found numerical process required built completely small number basic operation set fortran subroutine written perform main purpose note describe subroutine question general statistical program topical include general remark | healy, m. j. r. bogert, b. p.
943 | term frequently combined problem description | grems, m.
944 | storage search property tree organized memory system | memory list property construct numeric alphabetic alphanumeric tree tree information storage retrieval property applicable problem involving large quantity data problem quantity word length distribution stored information known priori rapidly processing purpose paper examine storage search property tree organized storage system assuming memory possessing list property prime interest application symbol table dictionary similar stored searched | scidmore, a. k. weinberg, b. l.
945 | arithmetizing declaration application cobol | conway, m. e. speroni, j.
946 | suggestion algol rome issue report american standard association subcommittee x3 | utman, r. e.
947 | supplement algol report | woodger, m.
948 | note procedure | healy, m. j. r.
949 | integer signed constant algol | remark relation syntax semantics programming language aim point true grammar context free language conceived string generating device method expressing meaning grammar algol open criticism | petrone, l. vandoni, c. e.
950 | parallel method integrating ordinary differential equation | paper dedicated proposition order take full advantage real time computation highly parallel computer expected future numerical analysis recast parallel form meant serial algorithm replaced algorithm consist subtasks computed knowledge result subtasks method proposed parallelizing numerical integration ordinary differential equation process standard method entirely serial | nievergelt, j.
951 | rational chebyshev approximation bessel function integral ki | remes algorithm approximate integral ki rational function related coefficient approximation ki1 ki2 ki3 precision | gargantini, i. pomentale, t.
952 | fortran ii chaining | drath, d. g.
953 | scanning text | baker, j. j.
954 | note calculation probability distribution | smillie, k. w. anstey, t. h.
955 | class matrix test inversion procedure | cline, r. e.
956 | family test matrix | newbery, a. c. r.
957 | method partial rewriting magnetic tape | miller, j. a.
958 | case precision | synge, m. j.
959 | mark sense port punch programming input | lubbert, w. f.
960 | curve fitting format fortran | garber, m. j.
961 | limited bit manipulation fortran ii | technique developed manipulating bit fortran ii technique allow individual bit tested field shifted number coded bcd converted binary | oster, c. a.
962 | double precision square root cdc | january late han maehly completed summary approximation elementary function cdc computer approximation technique suggested maehly equally applicable large computer cdc line unlike built double precision floating point arithmetic present work largely inspired success maehly associate concern extension maehly idea double precision subroutine | cody, w. j.
963 | relative effect central processor input output speed throughput large computer | presented paper technique determining relative effect internal speed computer speed input output unit speed system equation derived permit determination effect hardware usage measurement | white, p.
964 | mechanization tedious algebra coefficient theoretical chemistry | table formula integral involving legendre function constructed mechanically program performed algebraic operation formula rational algebraic expression single variable constructed recurrence procedure interest molecular quantum chemistry trivial coding technique write relevant program fortran result photo composed photon system controlled tape punched directly computer output avoiding keyboarding transcription error keyboarded correction | wactlar, h. d. barnett, m. p.
965 | greatest common divisor algorithm a1 | bray, t. a.
966 | evaluation determinant algorithm f3 | hasselblad, v. rulifson, j.
967 | complementary error function algorithm s15 | clausen, i. hansson,l.
968 | radical inverse quasi random point sequence algorithm g5 | halton, j. h. smith, g. b.
969 | graycode algorithm | boothroyd, j.
970 | treesort algorithm m1 | floyd, r. w.
971 | time sharing traffic control program | toronto traffic signal control system consists variety logically distinct computer program competing machine time satisfy demand time sharing program written purpose execute order predefined priority subprogram real time system paper interesting aspect time sharing program outlined | green, l. e. s.
972 | executive system implemented finite state automaton | 473l command control system air force permit operator access large data computer man machine interface satisfied communication console operator enter query view reply data link permit remote station send message status report inventory directly computer information received line data link update data stored disk 473l programming system divided executive control program component processing priority priority permit system sensitive console input permit operator console time share central processor executive control program orderly transition control programming system component major emphasis paper technique definition finite state automaton organizing executive control program | heistand, r. e.
973 | estimation heart parameter skin potential measurement | fundamental problem vector cardiography estimation state heart basis skin potential measurement mathematical model relating ventricular dipole surface potential sketched shown inverse problem determining electrical heart parameter basis skin potential measurement viewed nonlinear multipoint boundary problem feasible solution employing quasilinearization high speed digital computer | bellman, r. collier, c. kagiwada, h. kalaba, r. selvester, r.
974 | technique reading gapless tape make electrocardiograph analysis feasible ibm | study arrhythmia higher frequency component electrocardiogram long series patient heart cycle examined valid comparison heart beat made technique presented automatic analysis long series heart cycle digital computer | maher, a. s.
975 | program work international standard vocabulary computer information processing | traub, j. f.
976 | fresnel integral algorithm s20 | gray, m.
977 | conversion calendar date julian day number algorithm | oppenheim, d. k.
978 | fresnel integral algorithm s20 | lotsch, h.
979 | logarithm complex number algorithm b3 | collens, d. s.
980 | multiple precision arithmetic exact calculation symbol | paper system general purpose multiple precision fixed point routine subroutine calculate exactly quantum mechanical symbol large argument | maer, r. m. redlich, m. g.
981 | rounding problem commercial data processing | common requirement commercial data processing sum set number rounded generally understood manner equal sum number rounded individually rounding procedure accomplish procedure depends number accumulated vary sign sum vary sign number summed recognized prior rounding | kelley, t. b.
982 | inductive approach language translation | possibility natural language translation mean fixed operation translation considered conception sentence translation motivates work informally presented measurement physical similarity pair string discussed notion play central role proposed type translator experimental evidence presented support premise conception based | faulk, r. d.
983 | take reel inch perforated tape information interchange proposed american standard
984 | report input output procedure algol ifip
985 | report subset algol ifip
986 | proposed amendment proposed american standard specification general purpose paper card information processing
987 | fortran basic fortran programming language information processing automatic data processing system
988 | history summary fortran standardization development asa | heising, w. p.
989 | method syntax specification | iverson, k. e.
990 | constraint type statement programming language | proposal made including programming language statement imply relation variable explicit assignment statement compiler set newtonian iteration making purpose routine formal differentiation | wilkes, m. v.
991 | gamma function controller accuracy algorithm s14 | bray, t. a.
992 | gamma function algorithm s14 | mccombs, v. k.
993 | kutta merson algorithm d2 | priebe, k. b.
994 | stringsort algorithm m1 | blair, c. r.
995 | steep1 algorithm e4 | wallack, p.
996 | permutation set repetition algorithm g6 | sag, t. w.
997 | patent protection computer program | jacobs, m. c.
998 | computer program patentable | hamlin, k. b.
999 | joint inventorship computer | hauptman, g. a.
1000 | computer patent disclosure | kates, j. p.
1001 | copyright aspect computer usage | paper concerned question constitutes infringement copyright book nondramatic literary work work fed computer indexed analyzed partially reprinted utilized computer produce eye readable output question copyrightability program infringement copyright program discussed paper directed primarily discussion present law aspect proposed copyright law included general recommendation made respect proposed revision copyright law | lawlor, r. c.
1002 | rapid method digital filtering | computer time spent time series analysis multiplication minimum multiplication method devised digital filtering expectation line real time analysis biological data filter constructed succession readily analyzable component manner facilitates cascading repertoire frequency response curve includes good low pas band pas design program implementing synthesis filter application computer assembler allow definition recursive macro | whittlesey, j. r. b.
1003 | computer analysis method thermal diffusion biochemical system | thermal detection rapid biochemical reaction correct temperature data transient heat conduction loss cylindrical calorimeter handle complexity arising varying thermal relaxation time concentric insulating layer computer program developed temperature distribution system function radius time distribution corrected step subroutine calculates instantaneous chemical state action heat produced reaction program based direct statement fourier law heat conduction chemical rate equation provide bookkeeping law follow reactant flow heat packet computer continually store heat distribution computer analysis method regarded physical law process explicitly program result passing mathematical procedure conventionally program tested known exact solution heat equation gave identical result compared experimental data known biochemical reaction construction computer program based direct statement physical law principle general applicability applied physical phenomenon | davids, n. berger, r. l.
1004 | arctangent algorithm b1 | mills, k. w.
1005 | coordinate ellipsoid algorithm | dorrer, e.
1006 | storage allocation reference structure | method proposed discussed subscripted variable capability fortran sense added autocoder type assembly system | fitzwater, d. r.
1007 | extension existing compiler sophisticated macro | description presented application macro string concatenation employed add facility belfap | benett, r. k. neumann, h. d.
1008 | scheduling meeting computer | computer scheduling paper developed meeting federation american society experimental biology faseb faseb meeting largest scientific meeting held united state year technique developed faseb applied schedule meeting parallel session | schultz, c. k. brooks, a. schwartz, p.
1009 | solution combinatorial problem generating function variable field computer | utility generating function solving combinatorial problem discussed implementation result presented evaluated | weinberg, g. m.
1010 | multiuser computation facility education research | present day computing facility limited scientific research inability interact strongly user full power research computing instrument terminal give user ability generate correct operate procedure wish simple complex implementation small scale multiuser computer system permit user work independently machine obtain satisfactory response typewriter communication | dennis, j. b.
1011 | logarithm complex number algorithm b3 | collens, d. s.
1012 | formal parsing system | automatic syntactic analysis recently important natural language data processing syntax directed compiler formal parsing system consists finite disjoint vocabulary map recursive set string called syntactic sentence class program automatic syntactic analysis determines formal parsing system directed production analyzer nondeterministic pushdown store machine internal vocabulary input vocabulary production form ay1 ym yi element set element set context free language analyzed directed production analyzer kuno oettinger multiple path syntactic analyzer english concrete directed production analyzer working parsing algorithm connection structure assigned analyzer conventional phrase structure grammar examined paper | greibach, s. a.
1013 | final examination scheduling | method scheduling final examination yield minimal number student conflict minimization achieved repetitively evaluating nonlinear set equation imbeded process random monte carlo selection assignment heuristic technique solution optimum solution found yield locally minimal result computer program empirical result | broder, s.
1014 | machine control analysis variance | major problem analysis variance number factor increase exponential rise number interaction experimenter interested interaction impossible ignore experimental design problem getting error term natural look computer handle bulk work involved computing interaction program device computer | weldon, r. j.
1015 | minimax polynomial approximation partitioning interval | method minimax polynomial approximation product method formula estimate maximum error degree approximation formula partitioning algorithm obtained dividing basic interval subintervals approximation equal degree give equal maximum error | fraser, w. hart, j. f.
1016 | interchangcable perforated tape variable block format positioning straight cut r contouring contouring positioning r numerically controlled machine tool proposed american standard
1017 | comment bit sequencing ascii serial bit data transmission | bemer, r. w. booth, j.
1018 | gauss algorithm s15 | pike, m. c.
1019 | xy move plotting algorithm j6 | cavin, d. k.
1020 | free field read algorithm i5 | mckeeman, w. m.
1021 | conjugate gradient method algorithm f4 | reeves, c. m.
1022 | greatest common divisor algorithm a1 | peck, j. e. l.
1023 | bessel function kind algorithm s17 | gautschi, w.
1024 | note formation free list | waite, w. m.
1025 | method syntax checking algol | syntax checker designed based syntax algol algol report communication acm definition element language recursive desirable design syntax checker set mutually recursive processor tied subroutine perform bookkeeping function recursive nature language syntax checker problem recovery error required attention method devised permit program checked completely despite error | lietzke, m. p.
1026 | divide correct method multiple precision division | division problem defined notation relate problem multiple precision operation digital computer introduced basic divide correct method multiple precision division formulated known property briefly reviewed interest fact method produce step set precisely estimate desired result exact | stein, m. l.
1027 | alternate checksum method | newhall, n. s.
1028 | investigation analytical method numerical derivative evaluation | recently proposed analytical approach numerical derivative evaluation discussed technique shown accurate easy apply modification required greatly facilitate writing debugging program requiring derivative highly complex function | wilkins, r. d.
1029 | simple automatic derivative evaluation program | procedure automatic evaluation total partial derivative arbitrary algebraic function presented technique permit computation numerical value derivative developing analytical expression derivative key method decomposition function introduction intermediate variable series elementary functional step library elementary function subroutine provided automatic evaluation differentiation variable final step process produce desired function derivative main feature approach simplicity quick reaction tool derivation analytical derivative laborious debugging tool program derivative | wengert, r. e.
1030 | technique simulation computer logic | simulation digital computer integral part computer design automation system evaluation boolean function characterize computer simulated constitutes major portion simulation system general procedural class evaluating function defined greatly increased efficiency simulation system method presented simultaneously evaluating function set value variable evaluating simultaneously function set value variable | breuer,m. a.
1031 | note starting newton raphson method | determination suitable initial estimate root equation mean computing root sequence related equation | beyer, w. a.
1032 | theoretical consideration information retrieval system | information storage retrieval system composed major component identification information tagging effective retrieval searching strategy enter circumvent scanning nonrelevant material organization make access information efficient identification information paper suggests metalanguage recently discussed paper goffman verhoeff belzer object language searching strategy linear model evaluation function relevancy developed reward system retrieving relevant document retrieving nonrelevant penalizes system escaped relevant document false drop inadequacy linear model approach organization discussed organization based history past performance generating subset high probability relevant | belzer, j. goffman, w.
1033 | experimental personalized array translator system | system designed intimate man machine interaction general purpose problem solving environment experimentally operational system utilizer array oriented symbolic source language powerful statement type include numeric boolean relational selection operator operand entire array system permit simple specification test argument array single statement completely symbolic operating system includes display entry program data sequence control aided interrupt switch user interact program execution addition normal stored program sequencing system trace option ability enter statement execution present implementation system interpretive translator ibm computer | hellerman, h.
1034 | autosate | automated data system analysis technique technique designed alleviate principal problem beset analysis large data workload long span time project inception system operational date lack explicit direction conducting data system analysis result lack technique control data system lifetime analysis geared determining workload relationship storage characteristic document information network | gatto, o. t.
1035 | characteristic fortran cep language | fortran cep language differs fortran ii mainly extends variety mode real quantity suitable mixture input output list expression quantity occur mode make address greater number input output equipment remove restriction complexity list quantity transmitted magnetic core memory drum magnetic tape unit | mancino. o. g.
1036 | remark generalization algol | garwick, j. v.
1037 | reduction matrix polynomial element algorithm f3 | priebe, k. b.
1038 | crout equilibration iteration algorithm f4 | mckeeman, w. m.
1039 | summation fourier series algorithm c6 | thacher jr., h. c.
1040 | romberg integration algorithm d1 | thacher jr., h. c.
1041 | random permutation algorithm g6 | durstenfeld, r.
1042 | poisson charlier polynomial algorithm s23 | simoes pereira, j. m. s.
1043 | talk high level source language debugging technique real time data extraction | talk meaning take look debugging technique aid substantially debugging complex real time programming system interrupting user program desired point extract previously data extracted data later edited listing data high level source language identification | versteeg, r. l.
1044 | automatic loader subroutine nest | method automatic loading library subroutine adapted operate conjunction conventional pas assembler method specifically designed cope nested library structure | kanner, h.
1045 | programming analysis variance sequence operator isomorphic mapping | special operator calculus developed hartley mapping scheme found efficient programming analysis variance multifactor experiment operator calculus mapping scheme detail | peng, k. c.
1046 | compiler building system developed brooker morris | number article published past year brooker morris joined rohl recent paper presented interesting programming system developed ferranti atlas computer present paper describes major feature system expands point original author cover briefly treat lightly topic devote considerable space purpose paper purely expository small detail comment intentionally depart add material published listed reference | rosen, s.
1047 | generation test matrix similarity transformation | method obtaining test matrix prescribed distribution characteristic root process consists simple similarity transformation generate full matrix canonical form matrix generated known characteristic vector inverse determinant | ortega, j. m.
1048 | approximate solution axially symmetric problem | variety physical problem diverse field electrostatic field theory heat ideal fluid flow stress concentration theory reduce assumption axial symmetry study elliptic partial differential equation dirichlet type problem equation studied region boundary include nondegenerate portion axis exceedingly accurate numerical method approximating solution | greenspan, d.
1049 | numerical solution nonlinear point boundary problem finite difference method | solution nonlinear point boundary problem extremely difficult task question reality uniqueness established numerical technique problem present shooting technique easiest method attacking problem fail difficult method finite difference obtain solution paper example discus finite difference method non linear point boundary problem | holt, j. f.
1050 | part breakdown technique list structure | list structured part breakdown proposed discussed implementation fact presented operating program technique | brian, w. j.
1051 | multiword list item | list concept originally proposed newell simon shaw single computer word element list report describes consecutive word element result considerable saving space required hold amount data execution time required perform process data description standard list structure single word item multiword item introduced variable length item space utilization problem finally example illustrate multiword list paper attempt draw recent paper applied concept way relate general problem | comfort, w. t.
1052 | reducing truncation error programming | accumulating sum numerical integration large number interval sum larger individual addend produce accurate sum number interval increased separate variable established accumulator hold partial sum distinct interval extensive successive truncation eliminated | wolfe, j. m.
1053 | design implementation general purpose input routine | general purpose input routine discussed advocated fortran philosophy program examined exemplified | hassitt, a.
1054 | gauss seidel algorithm | batson, a. p.
1055 | bessel function algorithm | simoes pereira, j. m. s.
1056 | shellsort algorithm | batty, m. a.
1057 | critical path scheduling algorithm | hoffman, i. a.
1058 | simpson rule multiple integration algorithm | olynyk, f.
1059 | heapsort algorithm | williams, j. w. j.
1060 | matrix inversion algorithm | boothroyd, j.
1061 | matrix permutation algorithm | boothroyd, j.
1062 | symbol manipulation fortran sasp subroutine | set subroutine fortran purpose synthesize output string input string analyzed shadow general syntactic analysis subroutine reported earlier ii packed bcd string formed function type subroutine included intermediate manipulation performed string stored abbreviated internal representation automatic internal representation newly created substring stored sequentially block common storage manner storage block dynamically allocated purpose discussed | bailey, m. j. barnett, m. p. burleson, p. b.
1063 | inch perforated paper tape information interchange proposed american standard
1064 | perforated tape code information interchange proposed american standard
1065 | bit sequencing american standard code information interchange ascii serial bit data transmission proposed american standard
1066 | growing application linear programming | linear programming model grown extensively recent year concept organizing computer code undergone radical change longer adequate merely reduce mathematical algorithm simplex method computer code advanced code cope variety situation respective computer subprogram organized integrated system emphasis paper devoted underlying principle future linear programming system based viewpoint influenced demand application petroleum industry placing system component system translation problem statement term basic data linear programming matrix coefficient data transmission direct computer entry data computer center data processing editing prior solving simplex algorithm efficient reliable code solving mentioned algorithm flexible mean summarizing result | aronofsky, j. s.
1067 | picture generation standard line printer | method producing gray toned picture line printer utilizing degree blackness standard print character gray scale level devised scanned image blood cell display technique | perry, b. mendelsohn, m. l.
1068 | fortran ii load time saver | ackermann, a. f.
1069 | method comparing internal operating speed computer | raichelson, e. collins, g.
1070 | expand system input card replication | warrington, j. a. norris, j. h.
1071 | computer usage accounting generalized time sharing system | development general time sharing system requires revision accounting procedure computer usage time sharing system user operate concurrently precise amount computer time storage space user actually utilizes cost factor considered computer usage accounting generalized time sharing system discussed | rosenberg, a. m.
1072 | improved equivalence algorithm | algorithm assigning storage basis equivalence dimension common declaration presented algorithm based tree structure reduced computation time percent previously published algorithm identifying equivalence class scan equivalence declaration method applicable problem identify equivalence class element pair defining equivalence relation | galler, b. a. fisher, m. j.
1073 | fast procedure generating exponential random variable | fast method generating exponential random variable digital computer outlined | maclaren, m. d. marsaglia, g. bray, t. a.
1074 | shank algorithm | schumaker, l.
1075 | shuttlesort algorithm | juelich, o. c.
1076 | multiple integration algorithm | wirth, n.
1077 | chebyshev curve fit algorithm | naur, p.
1078 | elementary function continued fraction algorithm | morelock, j. c.
1079 | bessel function algorithm | simoes pereira, j. m. s.
1080 | chebyshev polynomial coefficient algorithm | cyvin, s. j.
1081 | normal distribution function algorithm | cyvin, s. j.
1082 | gamma function controlled accuracy algorithm | cyvin, s. j. cyvin, b. n.
1083 | experiment user oriented computer system | version software hardware system purpose facilitating programming analysis formulated problem modified flexowriter generate computer acceptable input equation computable request typed manner conventional mathematical text typing language rule flexible unrestrictive compiler part efficient system broader aspect tool study problem solving teaching system | klerer, m. may, j.
1084 | declaring arbitrarily coded alphabet | inability existing programming language handle character string alphabet mentioned scheme declaring additional alphabet proposed scheme encoding left justification collating sequence numeric sequence variation character size number bit alphabet alphabet arbitrary source language character representation | shaw, c. j.
1085 | specification general purpose paper card information processing proposed american standard
1086 | proposal input output convention algol report subcommittee algol acm programming language committee
1087 | problem automatic abstracting | variety problem concerning design operation automatic abstracting system discussed purpose general view major problem area attempt made discus detail preference alternative solution | edmundson, h. p.
1088 | menu planning computer | computer code developed plan menu finding minimum cost combination menu item daily dietary gastronomic production requirement satisfied sequence day fast special integer programming algorithm approximates theoretical solution problem menu changed line post optimized percent saving food cost fortran program ibm request considerable amount data processing precede implementation system | balistfy, j. l.
1089 | designing computer center | denison, a. popov, g.
1090 | incomplete beta function ratio algorithm | gautschi, w.
1091 | hypergeometric confluent hypergeometric algorithm | thacher jr., h. c.
1092 | nonrecursive adaptive integration algorithm | butler, h. s.
1093 | evaluation determinant algorithm | rotenberg, l. j.
1094 | prime twin algorithm | shimrat, m.
1095 | decimal table binary coded table | griebrok, m.
1096 | avoiding matrix reversal fortran ii fortran iv | stevens, d. benson, b.
1097 | algorithm converting integer base base | known simple algorithm integer conversion number system presented proved | gladwin, h. t.
1098 | comparison list processing computer language including detailed comparison comit ipl lisp slip | detailed comparison presented comit ipl lisp slip known computer programming language exhibit principal characteristic existing list processing language important common feature list processing language reviewed form data structure manipulated necessity dynamic allocation storage pushdown store recursive operation principal difference language consideration detailed representation data programmer machine method storage allocation programming formalism special process including arithmetic facility usability term availability documentation learning aid debugging facility rough comparison show language discussed approximately speed finally author give heuristic aid selection language problem application concluding language considered distinctly superior list processing application | bobrow, d. g. raphael, b.
1099 | professional computer work blind | development computer technology opened professional opportunity intelligent blind occupation blind participate disadvantage opportunity offered gain entrance occupation computer including programmer important future rehabilitation planning interest fact blind especially suited programming work intense training constant experience locating object unseen environment superbly trained memory blind brings work programming skill sighted need acquire qualification result fewer debugging problem make blind valuable addition system group blind professional number aid technique developed mediate machine programmer paper describes technique aid designed staff medical computing center university cincinnati college medicine | sterling, t. d. lichstein, m.  scarpino, f. stuebing, d.
1100 | status computer science curriculum college university | atchison, w. f. hamblen, j. w.
1101 | place logical design switching theory computer curriculum | muller, d. e.
1102 | mechanical language course specification | gorn, s.
1103 | logic computer science | korfhage, r. r.
1104 | undergraduate curriculum numerical analysis | forsythe, g. e.
1105 | introducing digital computing | arden, b. w.
1106 | programming digital computer | perlis, a. j.
1107 | computer education | keenan, t. a.
1108 | digital data processor tracking partially illuminated moon | study lunar tracking technique fabrication breadboard ass feasibility technique selected conducted define tracking system observation sight line center partially illuminated moon data processing portion system presented detail general operation tracker head assembly data readout operation entire system effect data processing consideration design tracker system system basically consists optical sensor digital computer tracker drive mechanism system unit connected cascade comprise control loop application optical telescope radial mechanical scanning mechanism read lunar sight line measurement information information sequentially read special purpose digital computer extract measurement computes error signal drive tracker attitude | wilcox, h. j.
1109 | conversion power series chebyshev polynomial | slowly convergent power series rearranged series chebyshev polynomial sequence transformation evaluating coefficient method illustrated computing coefficient expansion logarithm dilogarithm | thacher jr., h. c.
1110 | fourier series method numerical solution class parabolic partial differential equation | fourier series method applied class parabolic partial differential equation reduces problem system ordinary differential equation application method show considerable advantage conventional finite difference method | forrington, c. v. d.
1111 | class iterative technique factorization polynomial | method iteration developed term function arbitrary character sufficient condition convergence process yielding factor arbitrary degree polynomial variable lin method newton method occur special case | luther, h. a.
1112 | technique computer detection correction spelling error | method assumes word found dictionary error wrong missing extra letter single transposition unidentified input word compared dictionary testing time word match assuming error occurred test run garbled text correct identification made percent error type | damerau, f. j.
1113 | computer made perspective movie scientific communication tool | easy program basic transformation required perspective drawing fact advent high speed microfilm printer general dynamic electronics make perspective movie direct output computer programming movie briefly studying angular motion satellite attitude control system movie domino shaped box represents satellite sphere circle latitude longitude represents earth cost approximately minute ibm time minute movie | zajac, e. e.
1114 | generating canonical prefix encoding | computer program generating minimum redundancy exhaustive prefix encoding program generates huffman frequency tree determines structure function encoding program assigns code | schwartz, e. s. kallick, b.
1115 | randomized binary searching tree structure | efficient method tree structure proposed utilizer minus branch search path significant gain result search key includes alphabetic character | clampett jr., h. a.
1116 | test computer method constructing school timetable | previously proposed computer method constructing timetable based iteration involving boolean matrix limited test method successfully produced timetable trial reference relate timetable problem theorem matrix zero theorem bipartite graph problem applying method constructing timetable real situation noted | csima, j. gotlieb, c. c.
1117 | polyphase sorting overlapped rewind | variation polyphase merge technique sorting permit tape time rewound merge continued remaining tape result overlapping major portion rewind time technique considered sort written operate tape read backwards saving overlap method increase number tape increased | mcalester, r. l.
1118 | fortran subroutine time series data reduction | macgowan, r. a.
1119 | open letter x3 fortran standard american association
1120 | alcor group representation algol symbol comm acm corrigenda
1121 | comment continued operation notation | note intended clarify correct point recent paper describing notation symbol manipulation barnett comm acm august | barnett, m. p. gerard, j. m. sambles, a. w.
1122 | note compiling algorithm | compiling generator arithmetic expression discussed presently experimental compiler improvement suggested speierman burroughs | anderson, j. p.
1123 | gauss algorithm | gladfelter, g. w.
1124 | matrix division algorithm | wells, m.
1125 | syminv2 algorithm | naur, p.
1126 | erf algorithm | barton, s. p. wagner, j. f.
1127 | tridiagonal matrix algorithm | naur, p.
1128 | evaluation determinant algorithm | rotenberg, l. j.
1129 | incomplete beta function ratio algorithm | gautschi, w.
1130 | gamma function althm | gautschi, w.
1131 | context ambiguity parsing | ross, d. t.
1132 | extension algol manipulating formula | perlis, a. j. iturriaga, r.
1133 | programming package general mode arithmetic | brooker, r. a.
1134 | effect computer language structure | problem compiling efficient code prompted development intermediate language reflecting structure machine easily manipulated improving object program efficiency subject paper intermediate language method manipulating compilation series arithmetic statement discussed assumed function exponential removed statement replaced simple variable purpose simplicity treatment subscript simplified structure presented illustrate compiling method assumption made purpose simplification case assumption violated actual machine | allard, r. w. wolf, k. a. zemlin, r. a.
1135 | general business oriented language based decision expression | structure digital compute programming language cover wide class business processing application presented structure based identifying incorporating compiler aspect common process class permit writing extremely compact program comparatively complex application term table control expression express information characteristic application local process affecting output involved effected local modification program modification entry table structure inexpensive preparation loading speed compiler translate source program efficient machine code approach adopted departs conventional mechanical language design philosophy stress structural analysis class process represented language opposed emphasizing formal content independent syntactical definition relies exclusively nonprocedural representation process set table relation data result control statement procedure description translation flowchart invariant pattern procedure identified characteristic class batch process philosophy potential overcome known deficiency business oriented language fully meet requirement set codasyl language including machine independence | lombardi, l. a.
1136 | beginning theory information handling | steel jr., t. b.
1137 | format language | perlis, a. j.
1138 | formalism programming language | iverson, k. e.
1139 | fortran iv syntax language | leavenworth, b. m.
1140 | structural connection formal language | irons, e. t.
1141 | bounded context syntactic analysis | floyd, r. w.
1142 | extension algol language | rose, g. f.
1143 | analysis decay type data | comparative study made variety numerical technique fitting experimental data decay type form involving sum exponential statistical error fitted parameter calculated method applied artificially generated set data result experiment radioactive tracer human animal subject result show value fitted parameter sensitive variation fitting procedure great care sensitive variation fitting procedure great care exercised identifying value physical constant value function derived fitted parameter definitely physical entity generally stable variation fitting technique error bound large great confidence select uniform technique running experiment analyzing data consider significant relative result subject | worsley, b. h.
1144 | digital computer determination alpha source activity | technique determining activity homogeneity alpha source believed technique digital computer application field nuclear physic technique involves computer manipulation digital image nuclear source experimental detail | robbins, d. taylor, w. e.
1145 | git heuristic program testing pair directed line graph isomorphism | pair directed line graph problem ascertaining isomorphic efficient algorithmic solution known straightforward enumerative algorithm require year running time high speed computer order compare node graph sophisticated approach called situation similar prevailing area game playing theorem proving practical algorithm unknown interesting case practical partially successful technique git graph isomorphism tester incorporates variety process attempt narrow search isomorphism demonstrate exists scheme relied exclusively solution program designed avoid excessive computation fruitless line git written comit language successfully tested ibm | unger, s. h.
1146 | efficient composite formula multidimensional quadrature | 2 point degree quadrature formula integration dimensional hyper rectangle presented point lie surface weight opposite sign attached point opposite face large volume subdivided congruent rectangular subdivision point required interior subdivision achieve degree accuracy | thacher jr., h. c.
1147 | numerical solution boundary problem linear ordinary differential equation | numerical method presented solution boundary problem involving linear ordinary differential equation method noniterative make step numerical integration scheme reduce problem boundary value initial value comment made concerning numerical result applying method specific problem addition extension algorithm general problem discussed | day, j. t. collins ii, g. w.
1148 | significant digit arithmetic | method handling summing process geometric series shown give result indicating widely differing significance carried machine incorporating significant digit arithmetic | miller, r. h.
1149 | gargoyle language compiler writing | garwick, j. v.
1150 | fortran post mortem procedure | kahan, w. leppik, j. j.
1151 | note multiplying boolean matrix ii | comstock, d. r.
1152 | floating point arithmetic bit number | classic straightforward technique presented limited size type number representation multiple precision arithmetic | gregory, r. t. raney, j. l.
1153 | fast procedure generating normal random variable | technique generating distributed random number faster general readily applicable binary decimal computer | marsaglia, g. maclaren, m. d. bray, t. a.
1154 | multi tape infinite state automaton survey | survey machine powerful finite automaton powerful general turing machine presented felt machine category closely related digital computer finite automaton unrestricted turing machine intermediate machine created adjoining infinite state memory finite state machine performing restrict manner unbounded portion memory accessed bound number step allowed computation increasing recursive function length input restrict total amount memory manner example class property discussed | fischer, p. c.
1155 | experiment deductive question answering program | investigation artificial intelligence computer experiment deductive question answering run lisp program called deducom acronym deductive communicator fact deducom answered question answerable fact fact tell deducom specific information method answering general kind question conclusion drawn article deducom answer wide variety question human increase deductive power deducom telling fact deducom write simple program hoped ability forerunner ability program learn deducom search procedure present bad defect question answerable fact answered answerable question answered relevant fact order present deducom method making logical deduction predicate calculus bad defect fact changed logically equivalent deducom redundant fact deducom | slagle, j. r.
1156 | hankel function algorithm s17 | reilly, g. a.
1157 | procedure normal distribution function algorithm s15 | maclaren, m. d.
1158 | program structure parallel processing | construct organizing explicating parallel program segment discussed extension algol construct serve meta command motivated equipment multiprocessing capability | anderson, j. p.
1159 | machine independence technology economics | survey offered technique transferring program especially compiler computer method examined bootstrap technique singled detailed discussion emphasis economics consideration determine applicability bootstrapping specific case discussed attempt made assign qualitative weight finally reason believing machine independence problem substantially diminished trend computer design process convergence hardware design foreseeable software development lead satisfactory resolution | halpern, m. i.
1160 | cat computer aided translation | semi automatic translation system implemented convert fap language program assembly language input system fap program deck specially prepared translation user output consists translated compass language program comprehensive diagnostic listing user analyze order verify questionable area translation translation processor consists distinct phase assembly fap program comprehensive analysis assembled code regard action instruction instruction data finally output pas generates compass program form macro instruction | wilson, d. m.  moss, d. j.
1161 | compatibility feature ibm system model | generation stored program computer ibm series part brought edp mass market time large scale era unfolded rapid technology led rapid obsolescence data processing equipment program written system required tedious conversion incompatible machine came ibm system designed conversion problem specifically mind conversion aid model compatibility feature feature conjunction aid permit smooth inexpensive transition optimum system | mccormack, m. a. schansman, t. t. womack, k. k.
1162 | assembly language reprogramming | complete reprogramming compiler language program seldom assembly language program present greatest difficulty assembly language generally provide translation symbolic numeric version program assembly language machine language meta language presented mapping language conforms canonical list form arbitrary stream bit bit stream treated machine language program character stream user desire meta language map assembly language assembly language machine machine language | graham, m. l. ingerman, p. z.
1163 | philco ibm translation problem oriented symbolic binary level | translation system developed eliminate effort required reprogram philco series code ibm operation experience system limited highly successful encouraging application technique source object language | olsen, t. m.
1164 | emulation large system | conversion problem technique called emulation discussed technique emulation developed includes section central processing unit cpu input output unit general treatment section describe greater detail implementation compatibility feature emulation technique ibm system ibm system | tucker, s. g.
1165 | spectrum emulator rca | rca emulator system supplied spectrum reprogramming aid rca object program run spectrum necessitating rca object code execution rate considerably traditional simulation emulator increase throughput capacity user spectrum emulator make hardware micro program routine software routine accomplish function | benjamin, r. i.
1166 | macro translation symbolic assembly language computer | set macro operation prepared assist translating ibm symbolic assembly language program ibm machine language program set inserted beginning symbolic deck treat incompatible instruction mnemonic macro instruction produce equivalent instruction set incompatible instruction categorized basic operational class expressed single basic skeleton level macro call required supply argument basic skeleton instruction modification execution time address tag incompatible instruction requires incorporation address tag equivalent handled generating call simulation subroutine | dellert jr., g. t.
1167 | translation machine language program | automatic translation machine language program highly desirable goal advent large scale computer pitfall make difficult achieve completely automatic translation analyzed shown primarily semantic nature semi automatic procedure resolving semantic problem suggested | gaines, r. s.
1168 | machine line cobol | production large maintenance retrieval program system written cobol cobol language specifically enable system operate ibm computer | fredericks, d. s. warburtin, c. r.
1169 | algorithm minimizing backboard wiring function | partially exhaustive algorithm presented solving problem arising automatic layout computer ordered set e1 e2 en computer component permutation element e1 e2 en attached integer function algorithm find local minimum evaluating set delta increment set exchange element exchange negative increment delta performed process iterated stopped set increment positive empty set proved corresponds minimum procedure similar downhill method finding minimum real function applied placement problem experimental result presented backboard formed element initial placement | pomentale, t.
1170 | analyzing english syntax pattern learning parser | dependency analysis system based pattern recognition learning logic developed infer word class rule syntactic combination experience text analyzed characteristic form word class depth dependency tree word direction governor feature neighbor syntactic rule combination show relation word governor depth pattern sentence system tested elementary basic english sentence including earlier knowlton learning parser sentence experience sentence able generalize percent accuracy accumulative learning trial sentence averaged probability accurately parsing sentence encountered concluded system adequate learning parse bulk basic english development required conclusion application ordinary english stored system operational arpa sdc time shared computing system | mcconlogue, k. simmons, r. f.
1171 | comparison primal simplex primal dual algorithm linear programming | statistical comparison primal dual commonly primal simplex algorithm solving linear programming problem made assumption starting full artificial basis condition primal dual method show statistically significant superiority randomly generated problem found regression analysis relevant parameter determining difference number iteration algorithm number constraint number variable ratio | mueller, r. k. cooper, l.
1172 | conversion limited entry decision table computer program | decision table describing set complex decision rule based set condition algorithm efficiently convert table computer program extend usefulness decision table computer user algorithm based work montalbano extended handle dash decision rule algorithm minimizes computer storage space required resultant program minimizes computer running time conversion process pinpoint contradiction redundancy rule table | pollack, s. l.
1173 | performance system automatic segmentation program algol compiler gier algol | gier algol compiler make automatic system handling transfer program segment drum store core store program execution time logic system performance system discussed primarily basis execution time related specific program discussion concludes assessment potential gain way improving system | naur, p.
1174 | inverse permutation algorithm g6 | medlock, c. w.
1175 | quickersort algorithm m1 | scowen, r. s.
1176 | finding eigenvectors gaussian elimination algorithm f2 | newhouse, a.
1177 | determinant evaluation algorithm f3 | pfann, j.
1178 | algol reference language editor algorithm r2 | mckeeman, w. m.
1179 | pufft purdue university fast fortran translator | core resident compile system designed ibm computer half 32k word core memory pufft monitor job sequencing translator full fortran iv language fortran subroutine library input output system compile time execute time elaborate diagnostic message writing routine batch small medium sized fortran iv source language program processed high speed language compatibility maintained program debugged pufft system recompiled run ibjob ibftc system supplied manufacturer | rosen, s. spurgeon, a. donnelly, j. k.
1180 | axle axiomatic language string transformation | axle language designed data manipulation data arranged linear form workspace transformed according table axiom called imperative transformation consists matching procedure decides imperative applicable replacement procedure modifies part workspace imperative applied accordance definition symbolic term presented systematically assertion table process definition includes special case recursive assertion complete program imperative show application language | cohen, i. wegstein, j. h.
1181 | simple data transmission system office telephone | method evolved transmitting data type originating laboratory situation direct central computer method requires specialized equipment ordinary telephone callup basis present application include cardiac output calculation radio activity tracer study neurophysiology time sequence study nerve impulse | neilsen, i. r.
1182 | contextual correlate synonymy | experimental corroboration obtained hypothesis proportion word common context word context word function degree similar meaning shape function similarity context reliable criterion detecting pair word similar meaning | rubenstein, h. goodenough, j. b.
1183 | note digital computer tedious algebra programming | special purpose compiler written fortran ii language made writing long program computer procedure based straight forward format statement generating machine written program | veronis, g.
1184 | fast storage allocator | fast storage bookkeeping method list structure operation situation involving size block fixed size location scheme llllll l6 bell telephone laboratory low level list language make block computer register size smaller block obtained successively splitting larger half larger block reconstituted part simultaneously free | knowlton, k.c.
1185 | program solve pentomino problem recursive macro | coding technique macro instruction list argument recursively discussion cover primarily technique solve pentomino problem problem fitting pentominos overlapping plane area formed elemental square | fletcher, j. g.
1186 | recursive solution class combinatorial problem | combinatorial problem requiring selection element set element solved recursion process analogous computing binomial coefficient specific problem analyzed general technique exposed algol program developed problem | lynch,w. c.
1187 | note ascii octal code table standard | crosby, w. s.
1188 | algol computer design language | idea constructing computer design language making algol programming language presented computer designer benefit design language higher level computer user benefit higher level programming language purpose requirement design language enumerated achieve purpose translator required translate design computer logic set boolean equation design language presented term vocabulary statement sequence microprogram included example identifier expression unary binary operator declaration statement transfer statement terminal statement exchange statement statement statement statement sequence microprogram | chu, y.
1189 | random normal deviate algorithm g5 | pike, m. c.
1190 | pseudo random number algorithm g5 | pike, m. c. hill, i. d.
1191 | find precedence function algorithm l2 | wirth, n.
1192 | interpolation table algorithm e1 | stafford, j.
1193 | gomory algorithm | langmaack, h.
1194 | establishment acm repository principle ir system applied operation | history establishment acm repository moore school university pennsylvania reviewed briefly principle presented paramount provision information service easy accessibility information user unfamiliar organization service exceeding user cost principle serve guide mechanizing acm repository main feature information system direct user access line teletypewriter console direct user access detail system organization unrestricted expandable search vocabulary user access facet document indexing stochastic search linked index term relationship contribution acm repository consisted document relating primarily early research compiler document cataloged indexed catalog scheduled computing review indexing system detail main catalog describe document inverted list provided repository system retrieval concept coordination | rubinoff, m. white jr., j. f.
1195 | uplift university pittsburgh linear tandem system | series computer program developed operational processing national aeronautics space administration linear system ibm combined data processing system program note worthy create fixed length logical record fixed length block variable length source data format output optimization processing ibm system program completely checking test validity accuracy input material provided national aeronautics space administration | canter, j. d. donaghey, c. e.
1196 | application differential equation general problem solving | large class problem leading digital computer processing formulated term numerical solution system ordinary differential equation powerful method existence solution system good general purpose routine solution system furnishes powerful tool processing problem true point view ease programming ease debugging minimization computer time number example discussed detail | klopfenstein, r. w.
1197 | finding zero polynomial algorithm | method find simultaneously zero polynomial developed rutishauser tested number polynomial real coefficient slowly converging method quotient difference algorithm starting value newton bairstow algorithm rapid convergence sufficient condition existence scheme completely known failure occur zero equal nearly equal magnitude success achieved case tried failure traceable equal magnitude difficulty case computer roundoff result error spoil scheme algorithm give zero find majority | henrich, p. watkins, b. o.
1198 | solution problem concurrent programming control | number mainly independent sequential cyclic process restricted mean communication made moment engaged critical section cycle | dijkstra, e. w.
1199 | computer center simulation project | today computation center based rapidly changing technology hardware software system difficult base decision experience instance benefit comparable experience problem situation paper mathematical model lockheed central computer center formulated describes operation computation center term information net decision process control function experiment performed model result experiment application result discussed | hutchinson, g. k.
1200 | reversible subroutine computer run backwards | computer design describe permit subroutine executed backward forward instruction unchanged replaced conjugate instruction shown concept number subroutine type developed unusual property property analogous matrix operation parallel nomenclature suggested classification | reily, e. d. federighi, f. d.
1201 | generation permutation lexico graphical order algorithm g6 | elliott, r. w.
1202 | normal random algorithm g5 | pike, m. c.
1203 | normdey algorithm g5 | pike, m. c.
1204 | character structure character parity sense serial bit data communication american standard code information interchange proposed american standard
1205 | undergraduate program computer science preliminary recommendation | a report from the acm curriculum committee on computer science
1206 | judgment method curve fitting | computer oriented method processing communicating numerical data instrument reliability factor irf exactly define limit reliability measured item information compute maximum permitted error mpe value ordinate judgment principle sjp discard wrong information compute mean value parameter mpe term irf data compatibility test number equation made quickly intractable problem easily solved design experiment greatly simplified computational mathematical technique reduce bias sjp discussed inadequacy statistical graphical method curve fitting noted | demaine, p. a. d.
1207 | remark simulation boolean function | dodd, g. g.
1208 | simulation computer logic fortran arithmetic | weingarten, f. w.
1209 | negative subscript fortran ii programming ibm | garber, m. s.
1210 | handling fortran | note describes fortran subroutine facilitate handling tape allow symbolic naming information violating casual scientific programmer idea simplicity comment year subroutine | harrison, m. c.
1211 | note storage string | method storing string block indefinite size completely dynamic relation similar scheme discussed | berztiss, a. t.
1212 | non linear extrapolation point boundary problem | suggested convergence property usual picard successive approximation scheme improved non linrar extrapolation technique numerical provided | bellman, r. kagiada, h. kalba, r.
1213 | dynamic format specification | implementation fortran format conversion discussed format type give fortran programmer control input output specification execution time | ranelletti, j. e.
1214 | experiment algebraic manipulation computer | set subroutine allow algebraic manipulation ibm computer written list processor slip series problem increasing difficulty solved routine | lapidus, a. goldstein, m.
1215 | technique alcor illinois | algol compiler written alcor group ibm known significant technique compiler writing organizational detail compiler timing estimate indication compiler requirement | gries, d. paul, m. wiehle, h. r.
1216 | symbolic derivative list processing subroutine recursion | routine developed computes print symbolic derivative absolutely continuous elementary function variable made list processing language chain rule applied result edited produce result elegant efficient obtained hand computation subset imbeded formula translator introduce differentiation operator algebraic programming language | smith, p. j.
1217 | map partition integer algorithm a1 | mckay, j. k. s.
1218 | partition generator algorithm a1 | mckay, j. k. s.
1219 | number restricted partition algorithm a1 | mckay,j. k. s.
1220 | symbol algorithm | gunn, j. h.
1221 | symbol algorithm | gunn, j. h.
1222 | legendre function argument larger algorithm s16 | gautschi, w.
1223 | high speed compilation efficient object code | pas compiler property briefly pass scan intermediate language produced preceding pas essentially reverse order generated pas hasto read bulky problem oriented input double scan direction performed pass compiler remove locally constant expression recursively calculable expression loop important part common subexpression recognition optimization effective index register important discussed object code efficient highly machine dependent discussion term fortran language technique applicable algebraic language | gear, c. w.
1224 | determining computing center environment | investigation generally unavailable parameter descriptive computing center environment obtained actual data collection reduction result month collection tabulated summarized | rosin, r. f.
1225 | predictive analyzer path elimination technique | characteristic feature predictive analyzer system syntactic analysis operational harvard ibm delineated advantage disadvantage system discussed comparison constituent analyzer developed rand corporation robinson english grammar addition technique repetitive path elimination predictive analyzer claim efficiency processing time core storage requirement | kuno, s.
1226 | organization structured | data integral part data processing system system selection organization data critical system operating efficiency paper system designer information source describes ten technique employed organizing structured data characteristic organization application independent providing designer reference limit number organization consider system | dzubak, b. j. warburton, c. r.
1227 | transport algorithm | bayer, g.
1228 | treesort algorithm m1 | abrams, p. s.
1229 | random permutation algorithm g6 | pike, m. c.
1230 | method hyphenating end printed line | description method hyphenation presented result application general rule character set considered routine method briefly outlined | rich, r. p. stone, a. g.
1231 | peephole optimization | redundant instruction discarded final stage compilation simple optimizing technique called peephole optimization method examplesare | mckeeman, w. m.
1232 | representation standard ecma bit code punched card ecma standard
1233 | convention symbol preparation flowchart information processing system standard working paper | this paper is intended as an outline of the various conventions which are being considered  for the use of flowcharts for information processing systems.  the conventions are applied to the use  of the symbols appearing in the proposed american standard flowchart symbols and not with the symbols  per se.
1234 | structure algol compiler | high speed top method syntax analysis completely eliminates back source string implemented convenient macro language technique simulation compile time conventional run time stack enables generation code expression minimizes store fetch stack pointer motion run time properly trating recursion side effect procedure block structure recursion handled need interpretive method run time context problem transmission recursive procedure parameter called solved manner permit handling common case simple expression array identifier efficiency | kanner, h. kosinski, p. robinson, c. l.
1235 | stochastic approach grammatical coding english | computer program assign word english text form class part speech program operates high speed limited storage space half word event corpus identified small dictionary function word frequently occurring lexical word suffix test logical decision rule employed code additional word finally remaining word assigned class basis probable form class occur identified context conditional probability basis coding empirically derived separate hand coded corpus preliminary trial accuracy coder obvious way improving algorithm suggested analysis result | stolz, w. s. tannenbaum, h. carstensen, f. v.
1236 | smart automatic document retrieval system illustration | fully automatic document retrieval system operating ibm system characterized fact hundred method analyze document search request feature retrieval process leaving exact sequence operation initially unspecified adapting search strategy need individual user system simulate actual operating environment test effectiveness processing method result obtained combination analysis procedure general relied retrieve wanted information typical search request present report illustrate system operation evaluation procedure | salton, g. lesk, m. e.
1237 | conversion decision table computer program | translation procedure conversion decision table program presented evaluated term storage requirement execution time compile time procedure valuable hand coding guide algorithm compiler limited entry extended entry table analyzed addition table analysis nature table oriented programming language feature discussed presumed reader familiar nature decision table conventional definition | press, l. i.
1238 | technique integrated report multi run system | requirement requisition accounting system san francisco overseas supply agency osa included exception reporting osa simultaneous satisfaction reporting requirement accounting requirement posed definite problem system design handling reporting function practical satisfactory solution developed expanding basic system tailored service run report production run permitted final system easier debug easy maintain efficient production responsive changing requirement osa | budea, n. kamena, j. g. kamena, r. m.
1239 | graycode algorithm | allen, w. d.
1240 | transport algorithm | bayer, g.
1241 | havie integrator algorithm d1 | kubik, r. n.
1242 | modified graeffe method algorithm c2 | grau, a. a.
1243 | testing understanding difference call call algol | weil, r. l.
1244 | bit manipulation fortran language | tobey, g. d.
1245 | fortran ary counter | kent, w.
1246 | deeply nested iteration | korphage, r. r.
1247 | operating environment dynamic recursive computer programming system | presented paper nontechnical introduction oedipus computer programming system serve operating environment dynamic recursive program programming system service include dynamic allocation storage contiguous block arbitrary size input output hierarchy data type public pushdown list automatic recursive programming rudimentary compiler subroutine communication bookkeeping debugging aid | brown, w. s.
1248 | automatic simplification computer program | presented paper problem writing program examine program perform simplification detected argument program form knowledge supposed | nievergelt, j.
1249 | recorded magnetic tape information interchange cpi nrzi revised proposed american standard
1250 | graphic symbol problem definition analysis standard working paper
1251 | american standard ifip icc vocabulary compared | proposed american standard vocabulary information processing ifip icc vocabulary term information processing analyzed compared | traub, j. f.
1252 | symbolic notation statistical table approach automatic system design | preparation statistical table important function data processing system organization symbolic notation description table shown aid documentation notation step making automatic tedious time consuming part system design programming computer application notation suggestion made implementation larger goal | smith, b. w.
1253 | quikscript simscript language | quikscript simulation language based simscript programmed entirely algebraic language gate quikscript language internal implementation major difference quikscript simscript presented paper programming guide language attempt present flavor description simscript included sufficient description gate render material understandable reader familiar algebraic language | tonge, f. m. keller, p. newell, a.
1254 | iteration element | recent addition mad language made iteration structure mad statement algol statement fortran statement expression | galler, b. a. fischer, m. j.
1255 | method data list processing application eeg analysis | set subroutine discussed designed aid programming computation indexed list number machine language symbolic assembly system commonly performed list operation outlined logically arranged group computation power spectral density autocovariance function discussed class eeg signal | philpott, c. m. lago, g. v.
1256 | dynamic variable formatting | king, d. r.
1257 | debug extension line debugging technique | method linr assembly language debugging greatly simplifies bookkeeping task characteristically process developed implemented program univac computer air force cambridge research laboratory program online user insert delete symbolic assembly language number line point previously assembled program core remainder program relocated appropriately | evans, t. g. darley, d. l.
1258 | extended arithmetic package | field algebraic number theory arithmetic carried degree precision exceeds normal hardware capacity machine case extended arithmetic package comprehensive easy performing arithmetic package coded ibm discussing general problem design extended arithmetic package specific reference made program | blum, b. i.
1259 | application binary number computer routine | binary number thought alternate form expression set letter decimal number equivalent expression easily translatable characteristic example form expression changed equivalent expression save space gain power | weldon, r. j. baker, r. l.
1260 | square analysis resonance spectrum small computer | problem analyzing data mossbauer effect experiment discussed cut step procedure convergence imposing physical constraint functional form calculation make analysis small computer analysis carried ibm computer bcd core memory | marshall, s. w. nelson, j. a. wilenzick, r. m.
1261 | modeling simulation digital network | simulation digital network digital computer engineer effective mean analyzing time quantized logical behavior digital network modeled set time dependent time independent boolean transformation transformation describing input output relationship model element comprising network mode simplicity utilizing fortran iv programming system digital network simulator discussed illustrated simplicity derived common modeling technique applicable combinational sequential digital network systematic programming approach | larsen, r. p. mano, m. m.
1262 | procedure oriented language statement facilitate parallel processing | statement suggested allow programmer writing procedure oriented language section program executed parallel statement hold serve partly bracket establishing range parallel operation partly define parallel path range togethers nested statement effective computing device capable attaining degree compute compute overlap | opler, a.
1263 | metalanguage syntax specification | metalanguage sufficient table specification algol syntax additional metaoperators adequate formal table description basic fortran | burkhardt, w. h.
1264 | blnsys operating system braille capability | blnsys operating system designed 4k common optional feature attached tape drive printed output system executing program english braille system written small machine minimal peripheral equipment job batched card handling lost processing time minimum system perform user function assemble sps source deck post list produce condensed uncondensed object deck execute user program list card input program list punched output provide storage dump execute program submitted execution uncondensed object deck debugging trace control card braille conversion brailled listing ibsys batch output update duplicate system tape input ouput subroutine included system | landwehr, j. b. mclaughlin, c. mueller, h. lichstein, m. pollack, s. v.
1265 | relative efficiency context free grammar recognizers | number diverse recognition procedure proposed parsing sentence respect context free grammar paper mean common device procedure defined giving algorithm obtaining nondeterministic turing machine recognizer equivalent context free grammar formalization turing machine chosen make simple description parsing procedure considered attempt made compare recognition efficiency procedure defined simple grammar sentence formal comparison made empirical comparison recognition realistic programming language lisp algol made mean program simulates turing machine univac computer algorithm producing grammar equivalent context free grammar considered increase recognition efficiency afford empirically investigated | griffiths, t. v. petrick, s. r.
1266 | consideration relating purpose fortran standardization appendix asa fortran standard
1267 | performance system data transmission transfer rate information bit asa tutorial standard | information thruput as a characteristic of systems performance is discussed.  this discussion  includes the pertinent aspects of information transfer, of determination of transfer rate of information  bits (trib), of residual errors, and of standard measurement conditions.  the paper also presents an  orderly arrangement of characteristics and parameters that affect information thruput, and some examples  on procedures for determining a thruput rate in terms of trib.  it concludes that a performance characteristic  involving information rate can best be expressed as the trib in conjunction with the residual error rate.
1268 | logarithm complex number algorithm b3 | boothroyd, j.
1269 | computation fourier coefficient algorithm c6 | teijelo, l.
1270 | algol education automatic grading program | algol grader program presented computer evaluation student algol program beginner program furnishes random data check answer searching test reliability efficiency integration procedure statement essential property computer system order grader program effectively | forsythe, g. e. wirth, n.
1271 | secondary key retrieval ibm system | secondary key retrieval method involves preparation secondary storage list primary data record search request satisfied logical operation list producing complete set address primary record relevant request experimental result presented comparative analysis | davis, d. r. lin, a. d.
1272 | expanding editing function language data processing | automatic abstracting citation indexing mechanical translation procedure editing required automatic method leaf desired paper discus economy editing function amount condensation text language processing operation contends editing regarded opportunity unwelcome necessity heavy editing go mere correction improvement computer output exemplified concordance preparing survey article lecture opportunity heavy editing chief interpretation expansion computer output process factor analysis application process factor analysis application quick unbiased evaluation large volume incoming mail telegram yielding summary report human computer produce | doule, l. b.
1273 | remark romberg quadrature | modified form romberg quadrature sensitive accumulation rounding error customary | krasun, a. m. prager, w.
1274 | numerical solution point boundary problem linear ordinary differential equation | method numerical solution point boundary problem homogeneous linear ordinary differential equation developed method requires runge kutta integration interval consideration solution linear system equation unknown | day, j. t.
1275 | code structure protection manipulation variable length item corrigendum | ramamoorthy, c. v.
1276 | fortran ii chaining
1277 | cobol subroutine fortran main program | tajiri, k.
1278 | wengert numerical method partial derivative orbit determination quasilinearization | recent article communication acm wengert suggested technique machine evaluation partial derivative function analytical form solving non linear boundary problem quasilinearization partial derivative formed analytically evaluated numerically wengert method appears attractive programming viewpoint equation undertaken | bellman, r. e. kagiwada, h. kalaba, r. e.
1279 | conditional base number system encoding sequence correlated character | procedure efficient encoding sequence character predecessor successor selection rule procedure shown assign unique integer sequence generate reasonably compact set value | brown, r. m.
1280 | numerical integration differential difference equation decreasing time lag | system variable time lag present common occurrence biology variable flow rate common variable lag present extensive body knowledge exists concerning effect variable lag shown method reducing differential difference equation ordinary differential equation studied numerically ease subsequent study deal situation multiple lag lag dependent solution present | bellman, r. e. buell, j. d. kalaba, r. e.
1281 | data input question answer | data input scheme time sharing computer paper format statement determine input computer asks user required value time computer converse user input process check error standard data editing value input | pyle, i. c.
1282 | fortran subroutine cobol main program | proper cobol coding technique accounting difference storage allocation library routine language write fortran iv subroutine called cobol main program technique enables programmer take advantage property language minimizing respective disadvantage | shavell, z. a.
1283 | matrix inversion algorithm f1 | ferring, m.
1284 | bessel function set integer order | stafford, j.
1285 | eigenvalue eigenvectors real symmetric matrix qr method algorithm f2 | businger, p. a.
1286 | eigenvalue real symmetric matrix qr method algorithm f2 | businger, p. a.
1287 | vector coupling clebsch gordan coefficient algorithm | gunn, j. h.
1288 | clp cornell list processor | presented paper highlight clp teaching language employed cornell university constructed serve mean introducing simulation list processing concept advantage clp discussed example | conway, r. w. delfausse, j. j. maxwell, w. l. walker, w. e.
1289 | proposed revised american standard code information interchange
1290 | transparent mode control procedure data communication american standard code information interchange tutorial | this paper gives the considerations of task group x3.3.4 in the area of transparent-mode data  communication control philosophy.  the appearance of this paper was forecast (underthe name of "second-level  control") in the earlier tutorial paper, "control procedures for data communications," task group document  x3.3.4.44, dated may 1964.  the present paper elaborates upon solutions to the problems of transparency  to the basic ascii communication control characters as outlined in the previous paper mentioned above.   moreover, it goes on to cover the additional control problems of handling material such as off line encrypted  data or non-ascii codes by means of systems providing complete character transparency.  it does not cover  concepts of transparency in which the normal character structure or modulation rate of a system may be  abandoned.  in conjunction with the earlier tutorial paper, this paper is expected to lead to a proposal  for stand ardizationof data communication control procedures using the american stand ard code for information  interchange.
1291 | tabular input data | george, r.
1292 | divide correct method variable precision division | paper divide correct method variable precision division digital computer unlike earlier method stein pope present method suitably rounded form normalized divisor getting estimate quotient character result correction minus estimate obtain exact quotient character believed method widely applicable division operation variable word length character oriented machine | krishnamurthy, e. v.
1293 | method randomness | nonrandom property commonly random number generator analyzed | greenberger, m.
1294 | note triple precision floating point arithmetic bit number | recent paper gregory raney technique double precision floating point arithmetic similar technique developed triple precision floating point arithmetic purpose note describe technique multiplication division algorithm addition subtraction algorithm obtained trivial modification algorithm gregory raney paper | ikebe, y.
1295 | pert time calculation topological ordering | simplified technique presented pert time calculation topological ordering event assigned unique memory location activity represented link link defined memory location address memory location time information activity carried link typical net majority activity bit cell remainder bit cell link unidirectional forward calculation expected completion time activity backward calculation time latest allowable completion activity calculation progress net topologically net represented topologically core | lass, s. e.
1296 | ative algorithm e4 | wasscher, e. j.
1297 | steep1 algorithm e4 | varah, j. m.
1298 | adaptive numerical integration simpson rule algorithm d1 | pike, m. c.
1299 | solution diophantine equation algorithm a1 | bowlden, h. j.
1300 | function minimization algorithm e4 | wells, m.
1301 | algol convention | zaremba, w. a.
1302 | parallel signaling speed data transmission proposed american stand ard
1303 | correspondence algol church lambda notation part ii | landin, p. j.
1304 | rapid turnaround multi programming system | paper basic feature system characteristic control algorithm multi programming system rapid turnaround time | irons, e. t.
1305 | internal structure fortran cep translator | fortran cep translator convert source program written fortran cep language object program written language cep computer paper outline cep computer internal structure translator emphasis compilation expression input output list subscripted variable | mancino, o. g. cecchi, m. m.
1306 | class unambiguous computer language | discussed paper concept fully nested computer language mean designing computer language completely free ambiguity suggestion redefinition algol fully nested language | johnston, j. b.
1307 | lightpen controlled program line data analysis | paper describes technique designed ease data processing system person scientist intimately primarily concerned interpreting significance data handled system person unable spend time master programming language essential aided composing command computer system user required learn remember vocabulary language vocabulary displayed menu mean computer drive scope selects vocabulary element required pointing light pen small unordered set rewriting rule applied result light pen selection user generates syntactically correct command system learn remember grammar program restricts user severely language method communicating program make restriction natural unconstraining program successfully ten month | goodenough, j. b.
1308 | mathematical model mechanical part description | flexibility mathematical model take advantage common information requirement computer aided engineering drawing numerical control tape generation physical characteristic computation judicious control man machine communication requirement improved result conventional engineering design process english input language tailored draftsman designer describe part output desired approach mathematical model consists group surface defining quadric equation created system modular subprogram subprogram convert mathematical model instruction driving automatic drafting machine numerical controlled machine tool physical part characteristic center gravity computed subprogram dynamic analysis work proposed system presented experiment demonstration discussed | luh, j. y. s. krolak, r. j.
1309 | computer user oriented system | computer language system developed make fast preparation management report regardless computational complexity format variety cost sufficiently low individually tailored report prepared manager system requires initial preparation large data bank data elementary form special language extract matran permit selective extraction data subset efficient processing computational sequence flexible presentation result tabular graphical form matrix algebra fundamental vehicle accomplishing manipulation computation | montillon, g. d.
1310 | rapid braille transliteration technique ibm machine | weiler, w. j. klema, v. c.
1311 | efficient autocorrelation | schmid, l. p.
1312 | recursion iteration | rice, h. g.
1313 | construction nonlinear programming test problem | rosen, j. b. suzuki, s.
1314 | organization symbol table | efficient symbol table organization important feature design compiler construction virginia algol compiler burroughs b205 primary consideration symbol table design recognition identifier reserved word rapid general feature technique | batson, a.
1315 | automation radioisotope accountability system | radioisotope service veteran administration hospital omaha nebraska system radioisotope accountability year procedure satisfactory time consuming converted fully automated computer system january program purchased radioisotope written format fortran ibm computer program maintaining accountability reactor created radioisotope written forcom programming language minimum amount bookkeeping required reactor operating staff united state atomic energy commission regulation record system detailed record container radioactive material purchased created triga reactor indicating amount received transferred health physicist disposal consolidated record total amount received disposed period time purchased radioisotope reported millicurie reactor created radioisotope microcuries | lahners, e. l.
1316 | bessel function kind algorithm s17 | gautschi, w.
1317 | poisson charlier polynomial algorithm s23 | samet, p.a.
1318 | arccossin algorithm b1 | bowlden, h. j.
1319 | crout equilibration iteration algorithm f4 | meissner, l. p.
1320 | inverse permutation algorithm g6 | boonstra, b. h.
1321 | outreal algorithm i5 | wirth, n. e.
1322 | netflow algorithm | briggs, w. a.
1323 | correspondence algol church lambda notation part | paper describes semantics algol formalized establishing correspondence expression algol expression modified form church notation model computer language compute behavior based notion functional application functional abstraction analogue imperative language feature model abstract object language algol mapped algol feature emerge arrangement small number structural rule suggesting classification generalization correspondence informally mainly illustration part paper formal description abstract compiler abstract objct language presented purely functional notation application abstraction | landin, p. j.
1324 | answering english question computer survey | fifteen experimental english language question answering system programmed operating reviewed system range conversation machine program make sentence picture system translate english logical calculus system classified list structured data based graphic data based text based inferential principle method operation detailed discussed concluded data base question answer passed initial research early developmental phase difficult important research question advancement general purpose language processor seen concerned measuring dealing ambiguity translating formal language searching large tree structure | simmons, r. f.
1325 | remote line real time computer diagnosis clinical electrocardiogram | presented paper report hardware software system configuration function system remote online real time digital computer diagnosis clinical electrocardiogram likely effort sort lead satisfactory solution problem automatic diagnosis electrocardiogram attempt author extend diagnostic capability present system concerned increasing fidelity adaptive matched filter development dimensional pattern analysis analysis parallel electrocardiographer computer diagnostic interaction study possibility introducing major tree branching decision early diagnostic process | whipple, g. h. dickson, j. f. horibe, h. stark, l.
1326 | boundary network | feasible computer procedure determining total partial inclusion arbitrarily point line respect set general polygonal domain partition plane bounded region scheme computer representation boundary domain algorithm based scheme evaluating inclusion relation detail method employ level selection criterion purpose reducing number access auxiliary storage device amount boundary data processing required | loomis, r. g.
1327 | decision table computer programming | decision table tabular form displaying decision logic decision table inherent advantage technique illustrated put advantage enables program directly decision table technique based creation binary image limited entry decision table computer memory binary image set input condition created data image scan decision table image arrive proper course action advantage gained programming point view amount computer memory drastically reduced programming simplified documentation clear | kirk, h. w.
1328 | remark reducing truncation error | kahan, w.
1329 | simulation boolean function decimal computer | mano, m. m.
1330 | automated plotting flow chart small computer | anderson, h. e.
1331 | code structure protection manipulation variable length item | item made variable number character number bit control information partition symbol inserted mark separation error identification control character lead trouble method protecting symbol bit code assignment alphanumeric character fixed word length computer suitability error detection variable length item manipulation shown flexibility arithmetic operation | ramamoorthy, c. v.
1332 | subroutine assembly | description assembly system requires pas maintain table information subroutine library | samet, p. a.
1333 | reducing truncation error cascading accumulator | accumulating large number quantity numerical integration sum larger individual addend result truncation error error eliminated cascading accumulator noted recent article wolfe simpler slightly flexible algorithm presented deal case negative addend | ross, d. r.
1334 | mechanization tedious algebra newcomb operator planetary theory | computer program written generate table formula newcomb operator planetary theory newcomb operator expressed polynomial variable stand simple differential operator arbitrary integer polynomial generated recurrence scheme program coded fortran simple array manipulation technique perform algebraic operation formula newcomb operator produced program typeset photographically photon system | gerard, j. m. izsak, i. g. barnett, m. p.
1335 | character set optical character recognition proposed american stand ard
1336 | npl highlight programming language | radin, g. rogoway, h. p.
1337 | euler generalization algol formal definition | wirth, n. weber, h.
1338 | additional comment problem concurrent progamming control | knuth, d. e.
1339 | contribution development algol | wirth, n. hoare, c. a. r.
1340 | multiplexing slow peripheral | philosophy monitor slow output device multiplexed presented | abraham, c. lance, g. n. pearcey, t.
1341 | level computer system | building computer system tend break level control command communication system break problem correspondingly continued structure raise question effect usefulness future system regard trend time sharing parallel programming eventually system learn essay question posed general attitude take pursuing problem discussed | bryant, p.
1342 | transportation problem algorithm | bayer, g.
1343 | havie integrator algorithm d1 | farkas, i.
1344 | statistical computation based algebraically model | based machine readable statistical model related symbolic specification efficient method performing calculation statistical model balanced complete nature presented fix mixed random analysis variance model considered procedure obtaining variance component calculated statistic model term included | schlater, j. e. hemerle, w. j.
1345 | tensor calculation computer | formac program written capable calculating quantity interest tensor calculus code christoffel symbol calculated basic orthogonal coordinate system | waltons, j. j.
1346 | application process equalization maximum obtain rational approximation modified bessel function | remes algorithm originally established polynomial converge approximating function rational result known domain show efficient algorithm obtain approximation small error polynomial case approximation nearly approached directly series development aim paper investigate limitation applicability extension algorithm case approximation rational present numerical result | gargantini, l.
1347 | general time varying system error sensitivity program | evaluation propagation variance technique sensitivity time varying system initial condition parameter error involves determination system dependent partial derivative matrix requirement led separate program system investigation program utilization wengert differentiation technique determines required matrix specific system equation supplied subroutine form execution time eliminating need individualized program presaging development extremely general computer program | wilkins, r. d.
1348 | flowtrace computer program flowcharting program | flowtrace system produce flowchart program written programming language describe syntax control statement language purpose metalanguage resultant object deck flowchart program language example fap snobol flowchart confine scope existing language define language structured manner feature desirable chart comment program approach permit documentation descriptive remark avoids inclusion coding detail | sherman, p. m.
1349 | computing capability western european university | report author trip university western europe summer description computing activity institution visited present equipment capability vary moderate large scale institution plan acquire complex time shared system future author opinion state art lag continent lag attributed principal factor handicapping organization academic procedure university government financial relationship subordinated organization computing facility paucity professional interchange knowledge effect constraint explicated | finerman, a.
1350 | augmented predictive analyzer context free language relative efficiency | proven greibach context free grammar standard form grammar g constructed generates language generated rule form cy intermediate symbol terminal symbol predictive analyzer harvard standard form grammar accept language context free grammar equivalent standard form grammar g structural description sd g assigned sentence predictive analyzer structural description sd assigned sentence original context free grammar g derived section algorithm originally due abbott standard form grammar rule standard form supplemented additional information describing derivation original context free grammar technique performing sd g sd transformation effectively section augmented predictive analyzer parsing algorithm arbitrary context free language compared parsing algorithm selective top bottom algorithm similar iron error correcting parse algorithm constituent analyzer extension sakai cocke algorithm normal grammar comparison based criterion efficiency covering core storage requirement complexity program processing time | kuno,s.
1351 | automatic error bound real zero rational function | procedure implementing interval arithmetic version newton raphson method proposed procedure require starting interval zero rational function located method bound roundoff error | dargel, r. h. loscalzo, f. r. witt, t. h.
1352 | automatic integration function parameter | efficient method automatic numerical integration romberg integration adaptive simpson integration integrands form parameter shown romberg method efficient fortran program show achieve greater efficiency | rabinowitz, p.
1353 | technique automatic tolerance control linear programming | technical note numerical step simplex method linear programming reviewed tolerance needed numerical procedure defined objective criterion accomplishing numerical step method calculation tolerance | clasen, r. j.
1354 | conversion decision table computer program rule mark technique | rule mask technique method converting limited entry decision table computer program recent discussion suggest circumstance preferred technique constructing network tree drawback technique hitherto presented liability produce object program longer run time paper modification technique discussed take account rule frequency relative time evaluating condition materially improve object program run time | king, p. j. h.
1355 | regular coulomb wave function algorithm | gautschi, w.
1356 | havie integrator algorithm d1 | hillstrom, k.
1357 | examination scheduling algorithm | williams, r.
1358 | syntax macro extended translation | translation approach extended syntax semantics high level base language formalism called syntax macro syntax macro define string transformation based syntactic element base language type macro discussed example conditional generation macro based option alternative recognized scan | leavenworth, b. m.
1359 | data filtering applied information storage retrieval application | manipulation data string complex processing function information storage retrieval application data string manipulation discussed context interpretive processing environment controlled procedural directive sequence procedural directive derived job assumed expressed user oriented source language data string structured data environment data bank explicitly implicitly related format declaration residing format library processing mechanic data string manipulation developed accordance generalized data filtering concept result implementation part data filter module satisfies internal processing function filtering data string format declaration input output port | larsen, r. p.
1360 | description system data transmission asa tutorial
1361 | rectangular hole twelve row punched card proposed american standard
1362 | code extension ascii asa tutorial | the american standard code for information interchange (ascii) contains a number of control  characters associated with the principle of code extension, that is, with the representation of information  which cannot be directly represented by means of the characters in the code.  the manner of use of these  characters has not previously been completely described.  this paper presents a set of mutually consistent  philosophies regarding code extension applications, and suggests a corollary set of doctrines for the  application of the code extension characters.  distinctions are drawn between code extension and such  other concepts as "graphic substitution" or "syntactic representation" which are often used to meet similar  requirements.  also covered are certain topics which are not truly concerned with code extension but  which are often linked with it in discussion on code applications.  the material in this paper is equally  applicable in principle to the (proposed) iso international 7-bit code for information interchange.
1363 | general method systematic interval computation numerical integration initial problem | procedure continuously computing monitoring step size starting th order numerical integration method solve initial problem procedure estimate truncation error calculate step size | martin, w. c. paulson, k. c. sashkin, l.
1364 | mathematical experimentation time lag modulation | equation form du dt arise number scientific context author point interesting property solution sin wt sin property obtained mean numerical solution | bellman, r. buell, j. kalaba, r.
1365 | eliminating monotonous mathematics formac | formac formula manipulation compiler programming system powerful tool performing mathematical analysis extension fortran iv permit computer perform tedious algebraic computation arise field area successfully differentiation complicated expression expansion truncated power series solution simultaneous equation literal coefficient nonlinear maximum likelihood estimation tensor analysis generation coefficient equation keplerian motion type analysis arose solution specific practical problem physic engineering astronomy statistic astronautics discussed paper addition usage specific problem solution formac automate analysis phase production programming application presented | tobey, r. g.
1366 | computer simulation discussion technique comparison language | purpose paper present comparison computer simulation language involved comparing software package digital computer discussed part issue obvious user digital computer choose language write substantial cost occur training implementation computer time inappropriate language chosen computer simulation language developed comparison evaluation existing language designer implementers user part devoted computer simulation simulation language computational characteristic simulation discussed special attention paid distinction continuous discrete change model part iii present detailed comparison simulation language package simscript clp csl gasp cps sol characteristic summarized series table implication analysis designer language user implementers developed conclusion paper package computer simulation offer feature general purpose package analysis strength weakness suggests way future simulation language package improved | teichroew, d. lubin, j. f.
1367 | character structure character parity sense parallel bit data communication ascii proposed american standard
1368 | systematic generation hamiltonian circuit | combinatorial matrix directed nondirected arc paper describes computer program generates systematically exhaustively hamiltonian circuit specific application made traveling salesman problem | roberts, s. m.
1369 | half rotation dimensional euclidean space | iterative procedure determining half rotation dimensional euclidean space method variant cyclic jacobi procedure utilizer elementary plane rotation obtain half rotation matrix numerical example | mccamon, r. b.
1370 | linear equation exact solution algorithm f4 | boothroyd, j.
1371 | logarithm gamma function algorithm s14 | pike, m. c. hill, i. d.
1372 | direct search algorithm e4 | bell, m. pike, m. c.
1373 | gamma function gamma function range reciprocal gamma function real argument gamma function logarithm gamma function algorithm s14 s14 s14 s14 s14 | pike, m. c. hill, i. d.
1374 | evaluation determinant determinant evaluation algorithm f3 f3 | bergson, a.
1375 | function minimization algorithm e4 | fletcher, r.
1376 | modified graeffee method algorithm c2 | stern, g.
1377 | pseudo random number algorithm g5 | hansson, l.
1378 | pseudo random number algorithm g5 | hill, i. d. pike, m. c.
1379 | final solution dangling algol related language | dangling problem consists class potential ambiguity algol conditional statement basic form b1 b2 s1 s2 b1 b2 boolean expression s1 s2 basic statement difficulty lie attach existing solution problem ambiguous unnecessarily restrictive let sand s1 statement define closed s1 statement open s1 statement unconditional statement closed statement open closed conditional statement defined syntax equation preserve openness closure case preceded closed statement shown syntax equation unambiguous change statement type required syntax equation lead ambiguity unnecessary restriction | abrahams, p. w.
1380 | simula algol based simulation language | paper introduction simula programming language designed provide system analyst unified concept facilitate concise description discrete event system system description serf source language simulation program simula extension algol important concept quasi parallel processing | dahl, o. j. nygaard, k.
1381 | impact computer undergraduate mathematics curriculum | computer permit widespread application mathematical idea requiring computation science technology extremely significant understanding society student interest development intense properly utilized yield understanding mathematical concept idea programming logical structure introduced field computer present paper suggests portion undergraduate mathematical curriculum preparation mathematics person professional mathematician modified include extension clarification computer early introduction programming desirable permit continuing automatic computation illustrate clarify mathematical concept calculus equation stage intensive introduction numerical analysis added curriculum addition providing competence computing technique permit sophisticated utilization advanced mathematical idea complex variable transform theory | murray, f. j.
1382 | desired computer impact undergraduate mathematics | matter relating theme symposium discussed author examines projection concerning supply demand mathematician united state mid 1970s comment briefly factor influence professional activity applied mathematician year discus broad term information relate undergraduate training mathematician | macon, n.
1383 | implication digital computer education mathematical science | digital computer profoundly altered definition interesting mathematics importance applied logic human affair changed existence logical engine result longer think term single discipline mathematics term complex mathematical science | givens, w.
1384 | mathematics undergraduate computer scientist | mathematical requirement undergraduate program computer science subject debate association computing machinery curriculum committee belief requirement essentially mathematical content physical science undergraduate program committee belief requirement assure student broad mathematical background enable take wide variety course scientific discipline committee concern develop solid scientific approach computer science | atchison, w. f.
1385 | computer technology communist china | based information translation communist chinese news item periodical literature period computer technology china reviewed heading initial planning organization educational aspect computer technology automation machine development progress major specific machine soviet aid vacuum due withdrawal soviet aid presumably chinese made machine present computer application trend automation control production process data processing yun ch ou hsueh science operation programming campaign attempt made bring concept linear programming ordinary chinese worker peasant communist china adjudged marginal computer capability machine binary nature turning point reached mid | audette, d. g.
1386 | symbolic factoring polynomial variable | algorithm finding symbolic factor multi variate polynomial integer coefficient presented algorithm extension technique kronecker proof prime factoring polynomial found finite number step algorithm consists factoring single variable instance polynomial kronecker method introducing remaining variable interpolation technique implementing algorithm example discussed algorithm promise sufficient power efficiently online system symbolic mathematics | jordan, d. e. kain, r. y. clapp, l. c.
1387 | solution system polynomial equation elimination | elimination procedure williams coded lisp formac solving system polynomial equation found method effective case small system yield solution need initial estimate method appears solution large system equation due explosive growth intermediate equation hazard arise coefficient truncated comparison made difficulty found problem non numerical mathematics symbolic integration simplification | moses, j.
1388 | automast automatic mathematical analysis symbolic translation | procedure numerically solving system ordinary differential equation shown generate symbolic solution procedure based finite taylor series expansion includes estimate error final result computer program read system equation generates expansion dependent variable expansion determined symbolically non numeric parameter original equation carried final expansion exact influence parameter problem solution easily displayed | ball, w. e. berns, r. i.
1389 | programmer description | bell telephone laboratory low linked list language pronounced programming language list structure manipulation facility underlie list processor ipl lisp comit ad snobol permit user closer machine code order write faster running program storage efficiently build wider variety linked data structure | knowlton, k. c.
1390 | convert | programming language applicable problem conveniently transformation rule meant pattern prescribed skeleton series pair searched pattern found match expression transformed condition match governed code subexpressions identified eventually substituted skeleton primitive pattern primitive skeleton principle allow elaboration complicated pattern skeleton advantage language apply transformation rule list array easily string pattern skeleton defined recursively consequence program stated concisely | guzman, a. mcintosh, h. v.
1391 | computer experiment finite algebra | medium scale programming system written mad fap ibm manipulate object modern algebra finite group map set map subset set subset constant integer truth value designed operate time sharing environment system serve teacher aid undergraduate student modern algebra working scientist engineer wishing familiarize subset | maurer, w. d.
1392 | experience formac algorithm design | facet design implementation mathematical expression manipulation algorithm discussed concrete example provided formac expand differentiation algorithm basic formac utility routine experiment extraction skeletal structure expression recurrent theme need avoid excessive intermediate expression swell order minimize core storage requirement detail formac implementation presented attempt made stress principle idea general relevance design algorithm manipulating mathematical expression | tobey, r. g.
1393 | pm system polynomial manipulation | pm ibm program system formal manipulation polynomial number variable integral coefficient unrestricted size formal operation performed system sum difference product quotient derivative substitution greater common divisor pm based refco iii list processing system compared lisp slip system pm subroutine arithmetic large integer constituting independently subsystem pm compared alpak system respect including choice canonical form polynomial algorithm polynomial greatest common divisor calculation mentioned exaples included illustrate superiority | collins, g. e.
1394 | computation algebraic property elementary particle reaction digital computer | large number calculation high energy elementary particle physic involve manipulation complicated algebraic expression tensor noncommutative matrix quantity calculation take month complete operation involved follow straightforward rule paper program developed lisp solving problem manner problem encountered outlined representation computer discussed present month human work take fifteen minute ibm limitation present system future plan outlined | hearn, a. c.
1395 | implementation ambit language symbol manipulation | description implementation technique replacement rule ambit programming language algorithm ambit scan application algorithm applicable member family string transformation language ambit member rationale design ambit language | christensen, c.
1396 | survey formula manipulation | field formula manipulation surveyed attention specific capability differentiation integration supporting capability simplification display input output editing precision arithmetic general system batch online finally program solve specific application discussed | sammet, j. e.
1397 | proceeding acm symposium symbolic algebraic manipulation | the acm symposium on symbolic and algebraic manipulation brought together over four hundred  people interested in programming languages designed for manipulation of algebraic formulas and symbol  strings, in their applications, and in algorithms for their implementation.  twenty-eight papers were  presented, followed by a lively panel discussion of future directions.  evening meetings were arranged  for several interest groups.  the conference was sponsored by the acm special interest committee on symbolic  and algebraic manipulation.  the program committee consisted of chairman jean e. sammet, paul abrahams,  thomas e. cheatham, max goldstein, and douglas mcllroy.  conference arrangements were made by lewis c.  clapp, daniel bobrow and james h. griesmer.-robert w. floyd, editor
1398 | robot data screening solution multivariate type problem biological social science | approach outlined solution type multivariate problem found biological social science medicine approach logical statistical criterion variable grouped deterministic model algorithm developed variable analysis eliminated criterion acceptance variable termination searching process derived information theory | sterling, t. gleser, m. haberman, s. pollack, s.
1399 | top bottom recognition left recursion | procedure obtaining structural description context free grammar performing recognition according strongly equivalent left recursion freegrammar effect allowing null string rewriting rule discussed | kurki-suonio, r.
1400 | free text input utility routine | simple technique frequently produce program accept free text input technique discussed related general tape manipulation routine | blum, r. i.
1401 | quasilinearization calculation eigenvalue | eigenvalue problem system ordinary differential equation considered resolved computationally quasilinerization technique quadratically convergent successive approximation scheme related newton raphson kantorovich method | bellman, r., kagiwada, h. kalaba, r.
1402 | partial step integration | partial step integration equation derived adam adam bashforth method integration differential equation method obtaining functional value point intermediate integration point yield accuracy comparable integration require storing additional information interpolation method | glauz, r. d.
1403 | method finding smallest value monotonic function defined ordered set positive integer | minimum monotonic increasing function defined partially ordered set assumed set minimal point observation devise efficient method finding smallest functional value monotonic function defined ordered pair positive integer method easily extended include monotonic function defined ordered tuples included fortran program written implement procedure important case | sigillito, v. g.
1404 | computational aspect multiple covariance analysis multifactor structure | computational procedure analysis multiple covariance statistic discussed reference analysis variance special operator calculus developed hartly programming analysis variance multifactor experiment extended cover analysis covariance extension accomplished utilizing connection analysis covariance analysis variance introducing operator result illustrated numerical analysis covariance basic computation shown carried analysis variance program | peng, k. c.
1405 | matrix triangulation integer arithmetic algorithm f1 | blankinship, w. a.
1406 | solution simultaneous linear diophantine equation algorithm f4 | blankinship, w. a.
1407 | confidence interval ratio algorithm g1 | hill, i. d. pike, m. c.
1408 | eschenbach drum scheme | prime function drum operating real time perform access quickly usual mean increasing capacity incorporate engineering hardware improvement paper problem attacked changing drum modifying manner operates outset drum functional definition simple design scheme eschenbach introduced enormously increase rate accessing drum defined shown enable system perform job employing fewer expensive drum suggested design scheme specific method underlying general applicability question efficacy drum scheme raised deal standard efficiency developed light realistic real time circumstance drum scheme modelled manner permit analyzed problem queueing theory enabled ascertain drum scheme efficient application analysis drum scheme specific method underlying general applicability | weingarten, a.
1409 | nebula digital computer mc glass delay line memory | oregon state university designed constructed medium speed serial digital computer glass delay line circulating mc memory design objective originally conceived special seminar research project computer design usable educational machine easily modifiable hardware basic research computer system design unusual arrangement information mc memory simple interface kc arithmetic unit result effective latency time possibility associative memory arithmetic unit command structure similar large parallel machine flip flop arithmetic control register hardware development aimed concept easy modification elaborate console control effective man machine interaction low cost | boles, j. a. rux, p. t. weingarten jr., f. w.
1410 | interarrival statistic time sharing system | optimization time shared system performance requires description stochastic process governing user input program activity paper statistical description user input process sdc arpa general purpose time sharing system tss input process assumed stationary defined interarrival time distribution data obtained justify satisfactorily common assumption interarrival time serially independent data justify rough approximation usual assumption exponential distribution interarrival time satisfactory approximation data obtained biphase triphase hyperexponential distribution | coffman, e. g. wood, r. c.
1411 | comparison algorithm computation mean standard deviation correlation coefficient | algorithm computation basic statistic compared performance systematically generated test data statistic calculated mean standard deviation correlation coefficient statistic algorithm included usual computing formula correction due accumulated error term recursive computation statistic usual computing formula evaluated double precision large error noted calculation usual computing formula reliable technique correction initial estimate accumulated error term eliminate need making pass data suggested initial estimate mean obtained subset data | neely, p. m.
1412 | banking information system concept | large commercial bank progressed point major accounting application automated sophisticated usage data processing equipment sought coupled availability equipment suited real time direct access processing led development bank central data base approach banking information system banking information system serf fold purpose providing real time response inquires individual account stasus providing complex combination information management kind processing draw common store data contained direct access central data base includes index facilitate cross referencing account information relationship bank customer discerned introducing banking information system concept gradual approach account cross referencing conversion prudent generally system interface computer application existing bank | head, r. v.
1413 | vision technology education | educational technology fashionable branch aspect technology generation known idea discovery invention unknown potential actual time scale ignorance stem largely ignorance social response potential technological change object paper present vision potential educational technology raise question mode social response adaptation likely evoked vision | oettinger, a. g.
1414 | twelve row punched card code information interchange proposed american standard
1415 | automatic derivation microsentences | decomposition long complex english sentence shorter kernel constituent sentence microsentences suggested avenue conducting automatic retrieval natural language message explore prospect step author attempted prepare general program deriving microsentences longer sentence syntactically analyzed harvard multipath analysis program basic idea extract subject verb object clause reassemble material grammatical microsentence program paper designed operate tree structure output analyzer microsentences produced exhibited author conclude microsentences quality achieved open prospect improving performance automatic message retrieval system practical man machine system human monitor select preferred syntactic interpretation sentence | carmody, b. t jones jr., p. e.
1416 | fortran technique simplifying input report generator | typical report generator allow production standard form tabulating magnetic tape extraction nonstandard set information suitable annotation involves troublesome form design method information extraction involving calculation suitable fortran format statement combat problem | cleary, j. g.
1417 | economy scale ibm system | cost function system model analyzed examination instruction time program kernel typical instruction mix comparison made data developed grosch law applicable data sizable economy scale unquestionably present computing equipment | solomon jr., m. b.
1418 | examination scheduling algorithm zh | peck, j. e. l. williams, m. r.
1419 | chebyshev quadrature algorithm d1 | hopgood, f. r. a. litherland, c.
1420 | uniform pseudorandom number generator | multiplicative congruential pseudorandom number generator discussed modulus largest prime accumulator capacity multiplier primitive root prime generator pass usual statistical test addition significant bit random significant bit property generator modulus posse | hutchinson, d. w.
1421 | contribution development algol | programming language similar respect algol incorporating large number improvement based year experience language detail part consists introduction language summary made algol discussion motif vision part ii rigorous definition proposed language part iii describes set proposed standard procedure language including facility input output | wirth, n. hoare, c. a. r.
1422 | eleven sixteenth inch perforated paper tape proposed american standard
1423 | simple algorithm computing generalized inverse matrix | generalized inverse matrix important analysis extension concept inverse applies matrix application numerical analysis widely existing algorithm fairly complicated require considerable storage space simple extension found conventional orthogonalization method inverting non singular matrix generalized inverse extra effort additional storage requirement algorithm generalized inverse matrix including special case non singular case rank case algorithm ordinary inverse case algorithm yield ordinary square transformation matrix inv advantage avoiding loss significance result forming product explicitly | rust, r. burrus, w. r. schneeberger, c.
1424 | automatic analysis electronic digital circuit list processing | mapping black diagram digital circuit list structure list processing program written control data mapping carry circuit analysis | shalla, l.
1425 | flow diagram turing machine language formation rule | part paper flow diagram introduced represent inter al mapping set diagram decomposable finite number base diagram true semantical level due suitable extension set basic mapping defined normalization method flow diagram base diagram part paper method applied theory turing machine turing machine provided half tape similar machine essentially job working tape obtained interspersing alternate blank square machine belongs family introduced generated composition iteration machine family proper subfamily family turing machine | bohm, c. jacopini, g.
1426 | simulation hospital admission policy | study simulates admission policy large specialized hospital objective determine policy stabilization admission census rate maintaining reasonably full hospital type policy examined admission based percentage discharge rate discharge rate minus constant fixed authorization independent discharge rate type policy produced stable simulated result put practice improvement realized | smith, w. g. solomon jr., m. b.
1427 | simulation radioisotope scan computer | radioisotope scanning field assuming increasing importance medical diagnosis scan dimensional pattern made dot area increased source activity represented scan area increased dot density study output scanner characteristic program simulates radioisotope scan written pdp computer auxiliary disk storage cathode ray tube display past present research output simulator shown flexibility system important structure program simulation output quantum limited system | pizer, s. m.
1428 | shock iii computer system aid management critically iii patient | shock iii online digital computer system assist physician nurse paramedical personnel monitoring reporting critically ill patient | rockwell jr., m. a. shubin, h. weil, m. h. meagher, p. f.
1429 | matrix reduction hungarian method generation school timetable | application kuhn hungarian method problem matrix reduction needed gotlieb method timetable generation method suited hand computer calculation device improve efficiency basic algorithm discussed | lions, j.
1430 | multiple precision floating point conversion decimal binary vice versa | decimal binary binary decimal floating point conversion performed table power ia positive integer converting base base table coefficient polynomial approximation converting base base table occupy large storage region case nonsingle precision conversion paper show single small table suffices floating point conversion decimal binary vice versa precision | mancino, o. g.
1431 | storage mapping function data structure | basic fact data structure reviewed efficient algorithm presented constructing storage mapping function structure structure definition | deuel, p.
1432 | incorporation nonstandard input output device fortran system | fortran system readily modified handle input output nonstandard medium basis handle standard medium providing character handling subroutine suited nonstandard medium arranged called unused output statement type unit number method control output alphanumeric information digital graph plotter | cohn, c. e.
1433 | note linear programming algorithm design combinatorial problem | linear programming model grow bigger bigger size actual data memorized put magnetic tape disk improportionality fast rise consumption computer time cut expense increasing effort made design efficient algorithm paper meant support effort attempted find characteristic pivot column found number repetition transfer data tape core memory considered simplification problem restated general generating function probability distribution moment generating function number repetition found asymptotic formula moment result paper narumi result applied write efficient routine search extreme table formula provide mean calculating computer timing case | roes, p. b. m.
1434 | monte carlo algorithm assigning student class | technique random choice illustrated application problem assigning student fixed schedule course technique reduce eliminate difficulty result popular section filled closed student requesting requiring scheduled effectiveness automatic scheduling retained loss student privilege picking favorite instructor | macon, n. walker, e. e.
1435 | design computer simulation experiment industrial system | aim paper provide background information existing literature experimental design technique applicable design computer simulation experiment industrial system major emphasis analysis variance technique technique data analysis considered multiple ranking procedure sequential sampling spectral analysis paper treat specific experimental design problem technique solving experimental design problem problem stochastic convergence problem factor selection problem motive response problem | burdick, d. s. naylor, t. h.
1436 | interchange block data algorithm k2 | fletcher, w.
1437 | mutual primal dual method algorithm | aird, t. j.
1438 | method locating zero complex function | method computing index winding number developed applied problem finding zero function plane plane | cain jr., g. l.
1439 | mechanization curve fitting process datan | process fitting curve approximate data problem creates engineer programmer defined approach defined system written sru mechanize major portion process technique developed accomplish mechanization largely empirical dependent information actual data point | simonsen, r. h. anketell, d. l.
1440 | starting approximation square root calculation ibm system | starting approximation square root calculation newton method presented form facilitate ibm system square root routine approximation include range interval primary interest ibm system | fike, c. t.
1441 | method numerical integration applied system trivial function evaluation | study made determine method numerical integration require computation time amount truncation error applied system ordinary differential equation function evaluation trivial recent method due butcher gear compared classic runge kutta kutta nystrom adam method newer step method due butcher found slightly superior method found great advantage application problem | waters, j.
1442 | recorded magnetic tape information interchange cpi nrzi proposed american standard
1443 | method finding square estimate intersection point helix space | helical trajectory charged particle moving common point magnetic field reconstructed measurement track reconstructed track perturbed measurement error general intersect method adjusting reconstructed track square manner intersect | royston, r. j. gregory, j.
1444 | algorithm generating projective reduction formula matrix element electron wavefunctions | algol procedure generating formula matrix element arising variational solution schrodinger equation electron system | reeves, c. m.
1445 | computer teach introductory statistic | obvious aid calculation offered computer force change curriculum mathematics statistic physic engineering course obvious pedagogic aid computer offer teaching subject matter possibility giving student technical conceptual understanding statistic explored number year college medicine university cincinnati reported | sterling, t. d. pollack, s. v.
1446 | chebyshev quadrature algorithm d1 | hopgood, f. r. a. litherland, c.
1447 | abscissa weight gregory quadrature d1 | welsch, j. h.
1448 | abscissa weight romberg quadrature algorithm d1 | welsch, j. h.
1449 | derivative algorithm s22 | gautschi, w.
1450 | simultaneous displacement polynomial root real simple algorithm c2 | kerner, i. o.
1451 | runge kutta integration algorithm d2 | thacher jr., h. c.
1452 | kutta merson algorithm d2 | bayer, g.
1453 | nonrecursive method syntax specification | kleene regular expression notation describing algebraic language syntax algol paper fortran ii computer program carrying elimination algorithm gorn similar gaussian elimination linear system algebraic equation applied numerous smaller language including sublanguage algol hand calculation result application algorithm algol expressing revised algol syntax completely nonrecursive term context free portion concerned description way intuitively understood previous recursive description suggested paper includes result machine program include simplification algorithm | carr iii, j. w. weiland, j.
1454 | simple user oriented compiler source language programming automatic test equipment | nonprogrammer difficulty language increase rapidly number nonproblem oriented convention simple language inelegant considers user background part problem effective source language subtle powerful capability language paper write computer program test electronic equipment testing process complex idea need elegance redundancy highly syntax oriented language simple direct language suffice problem eventual user language military depot personnel expected computer programming skill significant programming training nonprogramming oriented user essential create language familiar engineering statement programming oriented convention unnecessarily complicated task | scheff, b. h.
1455 | trac procedure describing language reactive typewriter | description trac text reckoning compiling language processing algorithm trac language developed basis software package reactive typewriter trac language write procedure accepting naming storing character string typewriter modifying string treating string time executable procedure text printing string trac language based extension generalization character string programming concept macro ability trac accept store definition procedure capability language indefinitely extended deal character string integer boolean vector variable | mooers, c. n.
1456 | storage retrieval aspect meaning directed graph structure | experimental system lisp make conceptual dictionary dictionary associate english word syntactic information definitional material reference context define word relation class inclusion possession active passive action definitional material resulting structure serf powerful vehicle research logic question answering example method inputting information answering simple english question important conclusion lisp list processing language ideally suited producing complex associative structure inadequate vehicle language processing large scale east auxiliary memory continuous extension core memory | simmons, r. f.
1457 | data manipulation programming problem automatic information retrieval | automatic information retrieval program require manipulation variety data structure including linear text sparse matrix tree list structure main data manipulation performed automatic information system briefly reviewed variety data representation describe structured information examined characteristic processing language outlined light procedure requiring implementation advantage programming language retrieval application examined suggestion made design programming facility aid information retrieval | salton, g.
1458 | online programming | transition made line online programming number working condition noted environment make process related producing checking program main programming language changed provide facility online user system surrounding programming language paper online environment effect programming discussed | schwartz, j. i.
1459 | requirement real time language | real time language requirement programming language special nature application environment object program executed environment compiled language extension ultimately advance development field progress made attacking special compiling executing system problem solved | opler, a.
1460 | evolution meta assembly program | generalized assembler called meta assembler meta assembler defined factor contributed evolution presented meta assembler made function assembly program finally implication meta assembler compiler design discussed | ferguson, d. e.
1461 | discussion summary operating system
1462 | multilevel operating system | basic software newer computer built established need standard operating system implies application matter large complex time consuming operate precisely top standard system large application require supervisory monitor handle problem similar operating system level fourth level required desirable lead naturally concept multilevel system similar vertically horizontally proper division responsibility level lead greater efficiency logical complexity actually enhancing capability | orchard-hays, w.
1463 | extensible machine | salient characteristic extensible machine em facility providing system control program program program data linkage address connection intent paper expand clarify remark concerning program program program data linkage embodied author previous paper em concept finally trace employment linkage mechanism level programming language | leonard, g. f. goodroe, j. r.
1464 | algol compiler construction relation elaborate operating system | algol translator prepared integrated ibsys operating system assembly feature ibsys permit execution optional listing deck debugging information chain feature ibsys link written map fortran algol called algol main program addition procedure coded map included algol program assembly loading time exceeds compilation time total time satisfactory user ease facility fully compensating | boussard, j. c.
1465 | program translation viewed general data processing problem | efficiency dictate effectiveness compiler increased mean compiler substantial life need clear logical structure reliability sound data processing technique compiler based fixed convention preserve efficiency reliability empty option default convention violate dictum structure associate part program economy feature promote clarity reliability | naur, p.
1466 | discussion summary graphical language
1467 | graphical servicesystem variable syntax | man machine interaction field endeavor greatly facilitated future interactive graphical language provide variety display scope communication procedure graphic service system function generalized graphical language translator developed aid definition graphical language | roberts, l. g.
1468 | syntax directed interpretation class picture | descriptive scheme class picture based labeling technique parallel processing algorithm proposed author year ago work applying bubble chamber picture parallel processing simulator originally written ibm system rewritten cdc system paper descriptive model considering specific application bubble chamber picture description generated phase embedded larger conversation program explained mean specific worked partial generative grammar handwritten english letter computer generated output grammar parallel processing simulator mentioned earlier | narasimhan, r.
1469 | programming language | family unimplemented computing language intended span difference application area unified framework framework dictate rule user coined name convention characterizing functional relationship framework design specific language split independent part choice written appearance program generally physical representation choice abstract entity number character string list functional relation referred language system biased expression statement includes nonprocedural purely functional subsystem aim expand class user need met single print instruction sacrificing important property make conventional hand side expression easy construct understand | landin, p. j.
1470 | structure programming language | identified major component programming language elementary program statement mechanism linking elementary statement mean program obtain data input alternative form component compared evaluated example frequently list processing language illustrate form elementary program statement take form command requirement implicit specification command imperative statement command action requirement describes effect achieved saying action implicit specification similar requirement programmer understand action achieve desired effect subroutine entered explicitly execute call function composition explicitly called subroutine generally require special linkage convention execute subroutine call syntactically indistinguishable basic instruction programming language function composition convenient alternative explicit call principal way getting input routine referring data referring data referring implicitly mean variable function name entry point permanent data structure error causing distraction context author discus advantage disadvantage factor influencing choice form component language concludes suggesting evolution programming language permit convenient way structuring program organizing system referencing data | raphael, b.
1471 | programming semantics multiprogrammed computation | semantics defined number meta instruction perform operation essential writing program multiprogrammed computer system meta instruction relate parallel processing protection separate computation program debugging sharing user memory segment computing object name hierarchically structured language sophistication contemplated midway assembly language advanced algebraic language | dennis,j. b. vanhorn, e. c.
1472 | description high capacity fast turnaround university computing center | operating system univac case institute reviewed system interest low turnaround time achieved high throughput achieved lack operating staff turnaround time minute job volume quarter year reported | lynch, w.c.
1473 | stability fourth order runge kutta method solution system differential equation | problem region stability fourth order runge kutta method solution system differential equation studied region characterized mean linear transformation closed form paper region determined electronic digital computer z22 | karim, a. i. a.
1474 | test probabilistic model propagation roundoff error | prolonged computation generally assumed accumulated effect roundoff error sense statistical purpose paper give precise description probabilistic model roundoff error describe series experiment testing validity model concluded model general good discrepancy rare mild test technique experiment type special arithmetic | hull, t. e. swenson, j. r.
1475 | dribble posting master | business application employ sequential magnetic tape random access storage technique process small number transaction voluminous master situation prove economical avoid creating master updating run producing dribble ledger master account experienced activity | head, r. v.
1476 | control procedure data communication asa progress report | sectional committee x.3 of the american standards association, has charged one of its task  groups, x3.3.4, with the responsibility to "define and specify functional control requirements and characteristics  governing the operation of digital data generating and receiving systems interconnected by communication  system."  this effort is primarily directed toward systems employing the american standard code for information  interchange (ascii).  this paper represents a progress report on the work of this group toward a proposal  for national and international standardization in the field of control procedures.  it describes both  the old and new work of the task group.  the new work is presented in detail, while the work that has  been presented in earlier papers ["control procedures for data communication," task group document x3.3.4/44,  may 1964: "transparent-mode control procedures for data communication," task group document x3.3.4/58,  december, 1964: comm. acm 8 (apr. 1965), 203-206; "control procedures for data communications," task  group document x3.3.4/60, march, 1965] is retained here in summary form.  many of the concepts and principles  described herein have been submitted to the international organization for standardization via earlier  papers and are now embodied in working papers of that organization. 
1477 | euler generalization algol formal definition part ii | wirth, n. weber, h.
1478 | exponential curve fit algorithm e2 | deily, g. r.
1479 | constrained exponential curve fit algorithm e2 | deily, g. r.
1480 | computation chebyshev series coefficient algorithm c6 | smith, l. b.
1481 | graph plotter algorithm j6 | lloyd, p.
1482 | bugsys programming system picture processing debugging | bugsys picture processing measuring system depends pictorial input computer memory bugsys type application author system analysis linear graph main concept system collection programmable pointer visualized family bug | ledley, r. s. jacobsen, j. belson, m.
1483 | comparison fortran language implementation computer | feature feature comparison made implementation fortran iv representing manufacturer table constructed showing feature implementation item added fortran ii shown | wright, d. l.
1484 | language describing function synchronous system | design system started exact function desired suggested computer oriented language purpose inadequacy standard programming language description system discussed dialect algol suitable describing synchronous system introduced description simulation automatic design system addition communicating system specification | parnas, d. l.
1485 | structure programming language | paper major component programming language identified elementary program statement mechanism linking elementary statement mean program obtain data input alternative form component compared evaluated example frequently list processing language illustrate form advantage disadvantage factor influencing choice form component language discussed paper concludes suggestion programming language evolve permit convenient way structuring program organizing system referencing data | raphael, b.
1486 | reprogramming machine | paper description model programming system directed programming language library storing user item rule transforming program written language rearranging item library share common part speculation made mechanical detection common part pattern library item help user solve problem relationship behavior reprogramming machine human intelligent behavior | burge, w. h.
1487 | eliza computer program study ofnatural language communication man machine | eliza program operating mac time sharing system mit make kind natural language conversation man computer input sentence analyzed basis decomposition rule triggered key word appearing input text response generated reassembly rule selected decomposition rule fundamental technical problem eliza concerned identification key word discovery minimal context choice transformation generation response absence key word provision editing capability eliza script discussion psychological issue relevant eliza approach future development concludes paper | weizenbaum, j.
1488 | programming decision table fortran cobol algol | simple broad based approach programming decision table fortran cobol developed presented input standard form defined paper programming decision table fortran statement cobol statement compute verb cobol processor shown method applicable mutually exclusive state table condition shown multi state condition decision table simplify programming method outlined advantage combination condition considered shown suggested procedure easily implemented algol | veinott, c. g.
1489 | data documentation decision table | business data processing system able define document data program decision rule adequately represents changing information content continuous interaction tabular description make notably objective economical cost time system analyzed program prepared modified show quickly tabular technique make unfamiliar system manageable detailed test provided | fisher, d. l.
1490 | inch perforated paper tape information interchange proposed american standard
1491 | euler generalization algol formal definition part | method defining programming language developed introduces rigorous relationship structure meaning structure language defined phrase structure syntax meaning term effect execution sequence interpretation rule exerts fixed set variable called environment exists correspondence syntactic rule interpretation rule determined sequence syntactic reduction constitute parse individual interpretation rule explained term elementary obvious algorithmic notation constructive method evaluating text provided decidable class language unambiguity proved generalization algol full detail demonstrate concept block structure procedure parameter defined adequately precisely method | wirth, n. weber, h.
1492 | serrev algorithm c1 | thacher jr., h. c.
1493 | generation hilbert derived test matrix algorithm f1 | boothroyd, j.
1494 | complete elliptic integral kind algorithm s21 | larssen, g. m.
1495 | solution transcendental equation series reversion | algorithm developed expressing solution equation power series x0 power series root y0 known x0 algorithm illustrated equation ln ln | thacher jr., h. c.
1496 | formal semantics computer language application compiler compiler | semantic meta language developed representing meaning statement large class computer language meta language basis construction efficient functioning compiler compiler informal discussion meta language based complete translator small language presented | feldman, j. a.
1497 | normalization requirement divisor divide correct method | paper present analysis normalization requirement divisor divide correct method analysis made subject condition correction required obtain true quotient character trial estimate division precision segment partial remainder suitably rounded single precision divisor segmented division denoted precision basic division found normalization requirement narrowed smaller range divisor provided magnitude character leading character divisor known normalization eliminated choose proper higher precision segment operand basic division considered possibility eliminating normalization increase number correction quotient estimate precision basic division shown scheme economical small radix | krishnamurthy, e. v. nandi, s. k.
1498 | alcor illinois post mortem dump | dump technique program written algol technique intelligible analysis unsuccessful computation process term original source program | bayer, r. gries, d. paul, m. wiehle, h. r.
1499 | chebyschev curve fit revised algorithm e2 | boothroyd, j.
1500 | chebyschev curve fit algorithm e2 | boothroyd, j.
1501 | eigenvectors 2n 2n matrix | known eigenvalue 2n 2n matrix obtained smaller matrix order easily constructed algorithm obtain eigenvectors 2n 2n matrix eigenvectors smaller matrix | charmonman, s.
1502 | online editor | online interactive system test editing detail remark theoretical experimental justification form emphasis system providing maximum convenience power user notable feature ability handle piece text content searching facility character character editing operation editor programmed limited extent | deutsch, l. p. lampson, b. w.
1503 | simscript fortran case study | program vehicle dispatching model written simscript fortran iv compared comparison made term basic program design decision storage requirement computer time ease making simscript program primary design consideration center choice model variable model changing event model testing fortran program basic design problem relate representation passage time allocation storage organization input data comparison differently designed program show simscript program computer storage computer time requires fewer program introduce model revision | weinert, a. e.
1504 | algorithm finding fundamental set cycle undirected linear graph | adjacency matrix graph algorithm presented paper find spanning tree construct set fundamental cycle algorithm slower algorithm presented welch ratio number node requires storage graph large number node edge storage limited algorithm superior welch graph small machine storage large welch algorithm superior timing estimate storage requirement method presented | gotlieb, c. c. corneil, d. g.
1505 | system organization resource allocation | paper introduces system resource management concept process facility event processor attempt made give suggestion policy resource allocation basic framework provided system analyst express solution resource management problem paper divided tutorial presentation description system primitive small collection example primitive | dahm, d. m. gerbstadt, f. h. pacelli, m. m.
1506 | laconiq monitor time sharing online dialogue | laconiq laboratory computer online inquiry monitor developed primarily support non numerical application retrieval large mean dialogue system user retrieval application monitor designed work small computer ibm system technique resource allocation important reason core storage computational facility input output scheduled unusual feature system event driven clock driven program segment called execution remote crt console invariably run completion rolled brought back later time | drew, d. l.
1507 | multiprogramming environment online data acquis ition analysis | experimental system acquis ition analysis large body data derived scientific experiment architecture implementation largely based objective characteristic general data analysis scheme early application oriented investigation data obtained biological research problem encountered chosen approach discussed | lockemann, p. c. knutsen, w. d.
1508 | magnetic tape label information interchange proposed usa standard
1509 | recorded magnetic tape information interchange cpi nrzi proposed usa standard
1510 | finding solution functional equation unknown algorithm c5 | dulley, d.b. pitteway, l. v.
1511 | damped taylor series method minimizing sum square solving system nonlinear equation | spath, h.
1512 | solution simultaneous non linear equation algorithm c5 | brown, k. m.
1513 | permutation algorithm g6 | robinson, c. l.
1514 | expected gain adjust ing matched term retrieval system | adjustment procedure based maximizing bayes expected gain proposed matched term retrieval system expected gain probability distribution derived function prior proportion omitted term coefficient separation distribution value adjustment statistic evaluates gain parameter typical information retrieval system | shumway, r. h.
1515 | computer system inference execution data retrieval | paper present rand project concerned computer assistant logical analysis large collection factual data system called relational data developed purpose relational data briefly detailed problem arising implementation discussed | levien, r. e.
1516 | automatic data compression | information explosion noted recent year make essential storage requirement information minimum fully automatic rapid part compressor body information greatly reduce slow external storage requirement increase rate information transmission computer paper system decode compressed information item item basis required component compressor separately accomplish specific task discussed nupak automatic compression numerical data anpak automatic compression information iopak compression information stored tape card | marron, b. a. demaine, p. a. d.
1517 | method analyzing data computer simulation experiment | paper address problem analyzing data generated computer simulation economic system turn hypothetical firm operation represented single channel multistation queueing model firm seek maximize total expected profit coming period selecting operating plan plan incorporates marketing strategy allocation productive input total cost result simulated activity plan subjected test multiple comparison method multiple ranking method illustrate compare evaluate technique paper adopts position technique analysis possibly chosen experimenter expression experimental objective test test homogeneity plan multiple comparison method quantify difference multiple ranking method directly identify plan plan | naylor, t. h. wertz, k. wonnacott, t. h.
1518 | experimental model system | problem predicting performance modern computer system formidable general technique ease problem macroscopic simulation paper report applicability technique system paper describes experimental model system hardware software environment measure system performance produced model consist statistic relating turnaround time throughput hardware utilization software utilization queueing process model mechanized simscript consists statement auxiliary program job generator creates property system job simulated | katz, j. h.
1519 | george general purpose time sharing operating system | operating system run wide variety configuration handle large number online console user time running line background job system oriented mode batch processing system atlas supervisor ibsys gecos multiaccess system resembling user ct multics simultaneously depending installation adjust scheduler online user line job common command language system includes multilevel device independent store | oestreicher, m. d. bailey, m. j. strauss, j. i.
1520 | absolute square root complex number algorithm a2 | friedland, p.
1521 | multi dimensional partition generator algorithm a1 | bratley, p. mckay, j. k. s.
1522 | chebyschev quadrature algorithm d1 | hillstrom, k.
1523 | sharer time sharing system cdc | time sharing system embedded standard batch processing system cdc system general purpose based providing facility input manipulation editing compilation conversational execution simple scheme system extension machine relocation memory bound register attempt made reentrant code simulate segmentation paging implementation time approximately man year majority code written fortran | harrison, m. c. schwartz, j. t.
1524 | stopping criterion polynomial root finding | searching root polynomial generally difficult know accept number adequate approximation root paper algorithm presented terminate iteration process basis calculated bound roundoff error occurs evaluating polynomial stopping criterion tested numerous example found serve satisfactory mean accepting complex number real polynomial | adams, d. a.
1525 | computing fast fourier transform | cooley tukey proposed fast algorithm computing complex fourier transform shown major time saving compute large transforms digital computer power computing time algorithm proportional log2 major improvement method computing time proportional paper fast fourier transform algorithm briefly reviewed fast difference equation method accurately computing needed trigonometric function value problem computing large fourier transform system virtual memory considered solution proposed method compute complex fourier transforms size computer word core storage exceeds factor maximum radix transform size fixed allocation amount core storage method compute large mixed radix transforms scaling plan computing fast fourier transform fixed point arithmetic | singleton, r. c.
1526 | multiprogramming page demand strategy | model multiprogramming computer system page demand strategy developed analysis model predict performance measured average usage cpu user program typical arising interactive time sharing environment effect hardware modification analyzed parameter readily calculated hardware characteristic program statistic proposed gauging effect multiprogramming | smith, j. l.
1527 | grammar base question answering procedure | subject paper procedure automatic retrieval segment stored information explicitly implicitly represented question posed natural language sentence procedure make sentence recognition device class grammar correctly decide grammatical ungrammatical sentence natural language make recognition device sort reason data fully expressible set sentence natural language set exhaustively exclusively generated grammar based rule grammar sentence recognizer evaluate sentence question normal situation recognition function succeeds case posed question drawn set sentence expressing data correctly grammatical term grammar set sentence sentence recognition procedure retrieving information recognition function succeeds represents requested information | rosenbaum, p.
1528 | font computer drawn letter | detailed description font letter letter shape entirely number basic vector general form font easily drawn variety computer cathode ray tube font include upper lower case roman letter mathematical sign upper lower case greek letter design font principal contribution paper concern font | mathews, m. v. lochbaum, c. moss, j. a.
1529 | decomposition programming analysis matrix substructure | petroleum blending problem analyzed order compare primal primal dual decomposition algorithm course analysis substructure discovered relevance relative performance algorithm absolute performance compared standard primal simplex solution decomposition | bell, e. j.
1530 | ml macro processor | general purpose macro processor called ml ml implemented pdp atlas computer intended tool allow user extend existing programming language incorporating statement syntactic form choosing notation complete user oriented language built relative ease | brown, p. j.
1531 | remaining trouble spot algol | paper list ambiguity remaining language algol noticed publication revised algol report | knuth, d. e.
1532 | hardware software complementarity | oettinger, a. g.
1533 | marovian model university michigan executive system | mathematical model computer executive system postulated parameter estimated aid extensive data system operation simplifying assumption made result predicted model agree reasonable actual result model study effect executive system compiler application model discussed | foley, j. d.
1534 | dad operating system | design implementation operating system dad detail system designed control data large drum backing store intended allow integration remote console display subsystem conventional job stack environment drum buffering input output slow peripheral execution normal job stack work display subsystem integrates rest system technique found development dad assessment made validity design decision performance figure based month operation tabulated | austin, b. j. holden, t. s. hudson, r. h.
1535 | comment index register allocation | technique presented reduce enumeration required known procedure optimal index register allocation straight line program technique based construction link diagram show step future occurrence index loaded index register diagram determines advance required register configuration step program program subdivided separate portion allocation procedure applied independently | luccio, f.
1536 | dynamic computation derivative | shown wengert procedure computation derivative implemented conveniently compiler generated complex addition subtraction linkage complex arithmetic subroutine evaluation function derivative proceed parallel wengert procedure imaginary part variable declared complex bearing value derivative real part technique simple compute derivative function need deriving programming evaluation explicit formula derivative | lesk, a. m.
1537 | prime number generator algorithm a1 | chartres, b. a.
1538 | prime number generator algorithm a1 | chartres, b. a.
1539 | prime number generator prime number generator algorithm a1 algorithm a1 algorithm a1 | chartres, b. a.
1540 | algorithm class scheduling section preference | algorithm assignment student class fixed time schedule student give preference section course consistent objective balanced section preference honored algorithm stochastic monte carlo nature result compare nonpreference assignment algorithm | busam, v. a.
1541 | language modeling simulating dynamic system | general objective language facilitate modeling experimental aspect simulation study ability represent system highly interactive process essential feature nature language role process concept presented mean extended | parente, r. j. krasnow, h. s.
1542 | microprogrammed implementation euler ibm system model | experimental processing system algorithmic language euler implemented microprogramming ibm system model read storage unit system consists microprogrammed compiler microprogrammed string language interpreter control program written machine language system result term microprogram main storage space required compiler interpreter performance obtained role microprogramming stressed open dimension processing interpretive code structure content higher level language matched interpretive language executed efficiently microprograms existing computer hardware | weber, h.
1543 | computer formulation equation motion tensor notation | mean extending area application digital computer numerical data processing stage reducing need human participation formulation type computer problem tensor calculus computer language designed facilitate symbolic mathematical computation method devised digital computer non numeric work symbolic algebraic manipulation differentiation illustrate technique involved digital computer derive equation motion point mass general orthogonal curvilinear coordinate system operation involves formulation term order differential coefficient good demonstration computer capability non numeric work assist formulation process precedes numerical data processing stage problem serf illustrate advantage mathematical technique employed program prepared purpose computer derive equation motion coordinate system requested user result presented coordinate system cylindrical polar spherical polar prolate spheroidal | howard, j. c.
1544 | tele cupl telephone time sharing system | general purpose remote access computing system employ twelve key keyboard telephone terminal audio output provided directly telephone terminal system conjunction remotely located high speed printing device system compatible extension existing batch processing system significant element system scheme transmitting alphanumeric information single stroke numeric keyboard programmed scanner context eliminate ambiguity transmission | conway, r. w. morgan, h. l.
1545 | legal safeguard insure privacy computer society | westin, a. f.
1546 | standard handwritten | bemer, r. w.
1547 | gamma function arbitrary precision algorithm s14 | filho, a. m.s. schwachheim, g.
1548 | parsing decision table | reduction size decision table accomplished technique technique considered paper parsing decision table regard horizontal vertical data structure job identity hardware job priority context relationship parsing rest convention linkage decision table | chapin, n.
1549 | efficient machine independent procedure garbage collection list structure | method returning register free list essential part list processing system paper past solution recovery problem reviewed compared algorithm presented offer significant advantage speed storage utilization routine implementing algorithm written list language insuring degree machine independence finally application algorithm number list structure appearing literature | schorr, h. waite, w. m.
1550 | comparison batch processing instant turnaround | study programming effort student introductory programming course presented effect instant turnaround minute opposed conventional batch processing turnaround time hour examined item compared number computer run trip computation center program preparation time keypunching time debugging time number run elapsed time run run problem result influenced fact bonus point completion programming problem number run evidence support instant batch | smith, l. b.
1551 | compiling algorithm arithmetic expression | paper deal algorithm concerning arithmetic expression fortran iv compiler hitac computer accumulator algorithm generate object code minimizes frequency storing recovering partial result arithmetic expression case accumulator | nakata, i.
1552 | aed free storage package | fundamental underlying problem sophisticated software system involving elaborate changing data structure dynamic storage allocation flexible problem modeling free storage package aed compiler system block storage obtained reuse total space partitioned hierarchy free storage zone characteristic block size special provision allow efficient handling selected size control shattering garbage collection sharing physical space zone routine package perform high level function allow access control fine internal detail | ross, d. t.
1553 | contextual understanding computer | development computer program eliza capable conversing natural language discussed importance context human machine understanding stressed argued adequacy level understanding achieved conversation depends purpose conversation absolute understanding part human machine impossible | weizenbaum, j.
1554 | computer technique displaying dimensional hyperobjects | digital computer automatic plotter generate dimensional stereoscopic movie dimensional parallel perspective projection dimensional hyperobjects rotating dimensional space observed projection motion direct extension dimensional experience profound feeling insight fourth spatial dimension obtained technique generalized dimension applied dimensional hyperobject hypersurface | noll, a. m.
1555 | symmetric polynomial algorithm c1 | bratley, p. mckay, j. k. s.
1556 | permutation repetition algorithm g6 | bratley, p.
1557 | symmetric group character algorithm a1 | mckay, j. k. s.
1558 | generation permutation pseudo lexicographic order algorithm g6 | ord-smith, r. j.
1559 | permutation generator permutation lexicographical order permute generation permutation lexicographical order algorithm g6 algorithm g6 algorithm g6 algorithm g6 | ord-smith, r. j.
1560 | transport transportation problem algorithm algorithm | sims, l. s.
1561 | mutual primal dual method algorithm | spath, h.
1562 | airy function algorithm s20 | pitteway, m. l. v.
1563 | method finding hamilton path knight tour | warnsdorff rule finding knight tour generalized applied problem finding hamilton path graph graph theoretic justification method | pohl, i.
1564 | description basic algorithm detab preprocessor | basic algorithm conversion decision table cobol code contained generator portion detab preprocessor generator analyzes decision table produce simple cobol conditional statement core storage saved queueing technique extensive indexing outputting code generated line time optimization attempted elimination obviously unnecessary test condition decision table preprocessor language developed cobol user preprocessor written modular form required cobol | callahan, m. d. chapman, a. e.
1565 | language independent macro processor | macro processor source language feature macro facility ability make arbitrary transformation argument string program basser computing department university sydney sydney australia process text compiler | waite, w. m.
1566 | optimal starting value newton raphson calculation sqrt | problem obtaining starting value newton raphson calculation sqrt digital computer considered shown conventionally uniform approximation sqrt provide optimal starting value problem obtaining optimal starting value problem obtaining optimal starting value stated basic result proved table optimal polynomial starting value | moursund, d. g.
1567 | representation symmetric polynomial | relation symmetric polynomial light theory symmetric group approach unifies earlier work lends insight previously published work aaron booker generalization graeffe root squaring technique determination root polynomial suggested | mckay, j. k. s.
1568 | plotting function independent variable | method developed constructing approximate plot function independent variable plot similar conventional contour map scale represent independent variable scale value independent variable added vectorially function read value nearby contour | stineman, r. w.
1569 | implementing phrase structure production pl | method implementing production context free phrase structure grammar pl procedure structure statement parallel structure notation grammar | irwin, l.
1570 | string processing technique | internal organization string processing system discussed technique data structure presented evaluated basis creation string examination string alteration string speed operation storage requirement effect paging programmer convenience considered technique single word linked block demonstrating implementation snobol string processing language ibm system | madnick, s. e.
1571 | user oriented time shared online system | existing system planned addition data processing laboratory brain research institute ucla system represents attempt provide research worker institute ability interact directly highly sophisticated digital computing complex direct simple fashion anticipated accumulation experience present system significant advance system design determination interface parameter biological scientist digital computer | betyar, l.
1572 | simulation time sharing system | development large scale time sharing system raised number problem computation center management develop hardware configuration system software adjustment made unfortunately system respond manner intuition suggest guide assist analysis performance characteristic development comprehensive simulation model assist investigation question paper resulting model general purpose design study variety time sharing system assist design development time sharing algorithm technique sake efficiency greater applicability model implemented limited fortran subset compatible fortran iv compiler simulation demonstrated study ibm time sharing system | nielsen, n. r.
1573 | adaptive quadrature procedure random panel size algorithm d1 | gallaher, l. j.
1574 | normal curve integral algorithm s15 | hill, i. d. joyce, s. a.
1575 | incomplete beta ratio algorithm s14 | pike, m. c. hill, i. d.
1576 | eigenvalue real symmetric matrix qr method algorithm f2 | welsch, j. h.
1577 | eigenvalue eigenvectors real symmetric matrix qr method algorithm f2 | welsch, j. h.
1578 | generalized square fit orthogonal polynomial algorithm e2 | makinson, g. j.
1579 | real error function erf algorithm s15 | hill, i. d. joyce, s. a.
1580 | error function large algorithm s15 | hill, i. d. joyce, s. a.
1581 | complementary error function large algorithm s15 | hill, i. d. joyce, s. a.
1582 | gauss algorithm s15 | hill, i. d. joyce, s. a.
1583 | normal distribution function algorithm s15 | hill, i. d. joyce, s. a.
1584 | procedure normal distribution function algorithm s15 | hill, i. d. joyce, s. a.
1585 | normal curve integral algorithm s15 | hill, i. d. joyce, s. a.
1586 | generalized bairstow algorithm | bairstow algorithm generalized case polynomial linear combination polynomial satisfying term recursion convergence property method derived | golub, g. h. robertson, t. n.
1587 | storage allocation iterative process | method core storage allocation iterative process estimate machine time required method applicable iterative process input data item chosen needed method input data continuously relocated space made apportioned output table overflow occurs important special case considered considerable simplification occurs | abramowich, j.
1588 | pl list processing | concept list processing introduced pl language facility write pl procedure operate simple complex data list organization list processing language suffered inability deal directly complex data structure inability perform complete range programming language operation data list structure problem eliminated list processing facility pl basic concept list processing philosophy pl language extension discussed addition detailed list processing example provided | lawson jr., h. w.
1589 | dialog conversational programming system graphical orientation | dialog algebraic language online graphical input output console device computational aid casual user basic facility graphical numeric input display online line program preparation storage hard copy presentation result system requires minimum experience instruction growth overlaying system control language prevented processor oriented statement variable type dimension declaration online situation processor interacts graphical keyboard character character basis restrict programmer choice input symbol syntactically correct dialog daily operation iit research institute february | cameron, s. h. ewing, d. liveright, m.
1590 | pitch period determination speech sound | computer procedure determines pitch period recognition peak structure speech waveform speech sound sampled microphone analog digital converter attached interconnected ibm pdp system utterance recorded normal noise level computer room band compressed phase distorted manner sequence operation defined speech wave selects list point waveform candidate pitch marker marker validated error detection correction procedure percent pitch period recognized correctly time real time ibm | reddy, d. r.
1591 | model multifunctional teaching system | teaching system model incorporated operating system large computer model transferred control operating system execute function teaching recovered control order resume teaching teaching system abac ii written run operating system ibsys ibm graphic system teaching system terminated rescheduled student studying course presented cathode ray display terminal switch readily student mode programmer mode full resource operating system language processor compiler library user program disposal write assemble debug execute terminal program written language processed operating system course include text material interleaved programming problem student solve leaving terminal exercise simulation gaming provided implication teaching system degree flexibility industrial executive training academic education discussed addition advantage type system computer programming operation considered | engvold, k. j. hughes, j. l.
1592 | string similarity misspelling | problem programming computer determine string character misspelling word considered numberof algorithm evaluated proposed writer author technique tested collection misspelling made student grade level method clearly unsatisfactory gave percent incorrect determination | alberga, c. n.
1593 | simple technique digital division | simple economical method digital division method suitable divisor leading character radix unity character equal method direct need half number arithmetic operation needed variant harvard iterative method gilman suitable similar divisor | nandi, s. k. krishnamurthy, e. v.
1594 | algorithm generating permutation | algorithm repeated application generates permutation element previously generated permutation constant temporary index needed starting ordering element abcd repeated application algorithm generate additional permutation successive rotation initial circular ordering object circular ordering obtained rotating lowest element circular ordering obtained rotating lowest element continuing manner application algorithm generate circular ordering circular ordering yield permutation algorithm generates permutation | langdon jr., g. g.
1595 | computer enumeration finite topology | problem enumerating number topology formed finite point set considered theoretically computationally fundamental result established leading algorithm enumerating finite topology computed result interesting side result computational work unearthing theoretical error induced literature computer combinatorics represents chronologically early application side result underscore continuing usefulness area | evans, j. w. harary, f. lynn, m. s.
1596 | airy function algorithm s20 | bond, g. pitteway, m. l. v.
1597 | transpose vector stored array algorithm k2 | boothroyd, j.
1598 | square fit orthogonal polynomial algorithm e2 | makinson, g. j.
1599 | numerical solution polynomial equation algorithm c2 | kohfeld, j. j.
1600 | chebyshev quadrature algorithm d1 | hillstrom, k.
1601 | parallel numerical method solution equation | classical iterative procedure numerical solution equation provide stage single approximation root question technique development numerical procedure provide stage approximation solution equation s8everal approximation obtained iteration computationally independent making method interest parallel processing environment convergence insured extracting information iteration family numerical procedure technique procedure parallel processing environment developed measurement statistic reported measurement interpreted parallel processing environment environment procedure obtained superior standard algorithm | shedler, g. s.
1602 | pose language posing problem computer | language pose drastic departure fortran algol type utilize fortran formula logic representation actually fortran vi subset language user need describe problem equation form method solution provided conjunction translation equation form computer instruction pose language user solve difficult computational problem solution differential equation requiring knowledge numerical method intricacy computer subroutine logic essentially clerical operation required fortran programming automated pose programmer need concerned detail | schlesinger, s. sashkin, l.
1603 | multiprogramming monitor small machine | int combination hardware software monitor designed control wide variety real time input output device simple hardware addition provide uniform device machine interface element keyboard graphic input device interval timer software relief user program detail input output timing buffering task scheduling parallel processing capability user program communicate monitor small set meta instruction consists machine language subroutine call | hornbuckle, g. d.
1604 | analysis computing center environment | empirical distribution program length execution time processing time loading time job serviced university computing center environment presented data subdivided according characteristic user job obtain selected empirical conditional distribution time property statistical measure interesting property result interpreted term property system studied | walter, e. s. wallace, v. l.
1605 | experimental comparison time sharing batch processing | effectiveness program development mit compatible time sharing system ct compared ibm ibsys batch processing system mean statistically designed experiment identical set programming problem assigned group programming subject influence external system sequence problem solution programmer problem characteristic design factor experiment data obtained variable programmer time computer time elapsed time considered definitive system effectiveness analysis variance technique employed estimate system difference variable difference due design factor eliminated statistical analysis experimental result provided strong evidence important system difference critique experimental design implication experimentation | schatzoff, m. tsao, r. wiig, r.
1606 | chi squared integral algorithm s15 | hill, i. d. pike, m. c.
1607 | coulomb wave function algorithm s22 | gunn, j. h.
1608 | numerical integration function pole | common need integrate numerically function diverge range integration divergence occurs integration formula simpson depend fitting polynomial inaccurate pole bad method formula integrate function kind accurately order position pole known explicit formula easy automatic computer shown singularity pole integral converges integration carried singularity accuracy integration pole order discussed formula compared simpson formula pole pole advantage overwhelming | eisner, e.
1609 | scheduling university course examination computer | approach problem scheduling course examination presented principle examination schedule requires minimum number examination period satisfies constraint student required take examination simultaneously found step course examination scheduled period grouped way minimum number group course included selected removing multiple occurrence course scheduling group period minimal schedule obtained known algorithm carrying procedure prohibitively expensive approximation ideal procedure outlined yield nonminimal feasible schedule small expenditure time result experiment technique encouraging experimentation worthwhile | hall jr., a. d. acton, f. s.
1610 | method solution transportation problem tall matrix | method presented solution transportation problem cost matrix column computer implementation method show fast efficient application indicted personnel classification problem classical transportation problem worked detail | dwyer, p. s. galler, b. a.
1611 | scheduling project network | basic concept terminology project networking developed critical path algorithm incorporated proprietary scheduling system ramp resource allocation multi project scheduling error detection network analysis feature algorithm | klein, m. m.
1612 | top bottom parsing rehabilitated | note concerned efficiency top bottom parsing algorithm connection programming language grammar shown instance retracing unprofitable path eliminated suitable rearrangement production defining grammar essential weakness method dealing complicated syntactic structure practice sparsely occupied arithmetic expression | brooker, r. a.
1613 | pas compilation arithmetic expression parallel processor | assumption processor multiplicity arithmetic unit compiler processor produce object code take advantage parallelism operation presently known compilation technique inadequate processor produce expression structure evaluated serially technique presented compiling arithmetic expression structure evaluated high degree parallelism algorithm variant called top analysis technique requires pas input text | stone, h. s.
1614 | proposal definition algol | extension algol proposed adding data type operator language definition occur block heading terminate block integral part program fixed language behavior existing operator redefined processing text defined context feature replacement rule eliminates unnecessary iteration temporary storage example definition set real complex matrix complex number processing list manipulation | galler, b. a. perlis, a. j.
1615 | algorithm generating root locus diagram | technique digital computer draw ordinary time lag root locus diagram ordinary diagram drawn faster accurately time lag diagram impossible obtain drawn speed accuracy ordinary diagram | krall, a. m. fornaro, r.
1616 | tensor calculation computer appendix | main text paper comm acm dec formac program discussed capable calculating quantity interest tensor calculus appendix intended program output chrisoffel symbol calculated basic orthogonal coordinate system listed | walton, j. j.
1617 | eigenvalue eigenvectors symmetric system algorithm f2 | boothroyd, j.
1618 | determination square root positive definite matrix algorithm f1 | spath, h.
1619 | error free method statistical computation | neely discussed computational error generated algorithm compute statistic present paper method error free simple concept costly machine time mentioned neely | rodden, b. e.
1620 | method evaluating polynomial approximation function evaluation routine | method nested multiplication commonly function evaluation routine evaluate approximation polynomial polynomial evaluation method developed recent year require fewer multiplication nested multiplication preferable function evaluation routine method practically rounding error difficulty method evaluating low degree polynomial found satisfactory method illustrated | file, c. t.
1621 | computer typesetting algol | application computer aided typesetting introduced working method publishing algol computerized translation hardware reference representation computerized planning typographical lay computerized control typesetting machine point made expert science technology programming guaranteed correct algol documentation spending valuable time power typographic consideration proofreading | sydow, l. v.
1622 | efficient procedure generation closed subset | efficient algorithm generating subset set satisfy constraint form member subset member subset algorithm programmed wisp language successfully run ibm connection routine detect feedback multidimensional iterative network | waite, w. m.
1623 | application formac | nonlinear circuit analysis problem stated solved formac solution problem formac notable method tried failed problem straightforward untenable hand involved elaborate formac language program fairly large utilized practically command made extensive part command trick order circumvent shortcoming formac system paper concerned programming technique formac actual engineering problem reader interested problem stated general mathematical sense interest area circuit analysis | neidleman, l. d.
1624 | automatic dimensioning | example algorithm accomplish automatic storage reservation need explicit array declaration | klerer, m. may, j.
1625 | automatic simplification source language program | method simplification applied program written algol language discussed simplification based form program knowledge obtained processor understanding program supposed method implemented processor called sure accepts program written jovial output equivalent jovial program shorter executed faster original sure problem encountered automatic improvement source language level discussed type automatic program improvement suggested | clark, e. r.
1626 | structure lisp system level storage | ideal list processing system core memory data program paper number technique build lisp system utilizing drum principal storage medium surprisingly low time penalty slow storage device technique include careful segmentation system program allocation virtual memory allow address arithmetic type determination special algorithm building reasonably linearized list scheme binding variable good environment complete compatibility compiled interpreted program special declaration | bobrow, d. g. murphy, d. l.
1627 | application level changing multilevel storage organization | technique organizing device computer storage system technique called multilevel store mean economically satisfying requirement large storage capacity data management information retrieval system concept level changing introduced application multilevel store discussed mean physically organizing information efficient multilevel store presented | morenoff, e. mclean, j. b.
1628 | emergence profession | computer programming deal enormous variety activity carried people great variety background clear part activity evolving distinct professional field scope emerging profession economic social educational characteristic mean defined paper issue examined opinion expressed | orden, a.
1629 | stat pack biostatistical programming package | package fortran statistical program small medium size 40k character 8k word fortran ii compiler exists availability announced major design criterion ease ease modification flexibility input detail output | shannon, s. henschke, c.
1630 | computer representation planar region skeleton | region regarded union maximal neighborhood point center radius neighborhood set sort skeleton region storage required represent region comparable required represented encoding boundary skeleton representation advantage determine repeatedly point inside region perform set theoretic operation region | pfaltz, j. l. rosenfeld, a.
1631 | testing random number generator | number produced random number generator general purpose system simulator gps subjected statistical test test result test presented test number satisfactory recommended suitable test applied random number computer simulation | gorenstein, s.
1632 | programming tabular method analysis variance factorial experiment | ease programming tabular method analysis variance complete factorial experiment fortran language demonstrated method total sum square partitioned orthogonal single degree freedom sum square main effect interaction sum square obtained pooling single degree freedom sum square program segment accomplish procedure presented modification handle hierarchical design replicated experiment mentioned fortran ii program ibm briefly | carmer, s. g.
1633 | modified newton method polynomial | modified newton method polynomial discussed assumed approximation root polynomial variation root simple shown condition variation cubically convergent | ehrlich, l. w.
1634 | bit digit accuracy | inequality likely conclude represent digit decimal floating point number accurately bit floating point number need significant bit represent digit number accurately general show significant bit digit decimal accuracy finally define compact bit floating point representation give significant bit number practical importance | goldberg, i. b.
1635 | parameter pseudo runge kutta method | object note present choice free parameter fourth order pseudo runge kutta method involving point choice parameter bound principal part truncation error term minimum fourth order method minimum order method | byrne, g. d.
1636 | invariant imbeding numerical integration boundary problem unstable linear system ordinary differential equation | diverse area radiative transfer planetary atmosphere optimal guidance control point boundary problem unstable system arise greatly complicating numerical solution invariant imbeding technique presented overcoming frequently encountered instability result numerical experiment | belman, r. e. kagiwada, h. h. kalaba, r. e.
1637 | problem statistical analysis simulation experiment comparison mean length sample record | research continued statistical analysis simulation experiment autocorrelated time series shown estimate length sample record needed large sample result measuring stability analogy autocorrelated data independent observation test difference mean experiment suggested shown variance sample mean relates spectrum generating process estimation quantity interest result expand possibility statistical spectral analysis applied simulation experiment | fishman, g. s.
1638 | sorting replacement selecting | sorting replacement selecting expected length sequence beginning th element proved 2f accordance conjecture friend number memory cell expected length th sequence determined time th degree polynomial polynomial approach approach infinity recursive formula obtained mean standard deviation length th sequence mathematical proof result based assumption number item sorted infinite shown error due finiteness approach rapidly increase | gasner, b. j.
1639 | exponential curve fit algorithm e2 | spath, h.
1640 | generalized squared fit orthogonal polynomial algorithm e2 | makinson, g. j.
1641 | fast slow memory list processing language | scheme permitting substantial increase memory space utilized store list structured data consists reducing level nonhomogeneous store composed fast core slow disk drum memory space slow memory divided page number machine word reduction level memory performed program leaf called page fast memory page slow store requested page core longest period inactivity transferred back slow store complete scheme implemented connection lisp embedding algol ibm 32k core memory disk gain memory space fold happens programming application price additional space computer time disk access time time slower core test actual slow varied depending number page fast store | cohen, j.
1642 | time sharing computer small memory | technique make time sharing attractive computer small central memory presented small mean user program monitor fit memory time technique depend level secondary storage level time larger main memory fast level time larger slower level | fisher, r. o. shepard, c. d.
1643 | improvement iterative method polynomial factorization | method polynomial factorization find zero time require division polynomial accepted factor shown accuracy division increased dividing order ascending descending power variable choosing crossover point minimizes simply calculated error criterion | bingham, j. a. c.
1644 | computation square polynomial | rounding error accumulated digital computation square polynomial make computed polynomial approximation true square polynomial simple method adjust ing constant term computed polynomial approximation true square polynomial | goldberg, m.
1645 | note computing approximation exponential function | method discussed result minimax rational approximation exponential function time retain desirable property approximation negative value argument reciprocal approximation positive value method lead approximation superior commonly convergents gaussian continued fraction exponential coefficient error interval ln ln ln ln | cody, w. j. ralston, a.
1646 | ditran compiler emphasizing diagnostics | ditran diagnostic fortran implementation asa basic fortran extensive error checking capability compilation time execution program need improved diagnostic capability objective met compiler discussed attention design implementation ditran technique employed provide diagnostic feature handling error message general macro approach special feature provide teaching aid instructor noted | moulton, p. g. muller, m. e.
1647 | watfor university waterloo fortran iv compiler | watfor core load compiler implemented ibm operating system fortran iv selected source language order achieve maximum language compatibility compiling system ibm fortran iv system principal advantage watfor compiler translates fortran iv program speed statement compiler resides core virtually system overhead large batch student program processed efficiently compiler extensive error diagnostics compilation execution phase program run feature make system attractive learner learned user alike | shantz, p. w. german, r. a. mitchell, j. g.
1648 | uniform random algorithm g5 | strome, w. m.
1649 | data directed input output fortran | statement similar namelist statement fortran iv incorporated fortran compiler fortran implementation greater flexibility simplicity fortran iv feature hollerith name location mode dimension variable discovered mean standard fortran statement method information illustrated relation general purpose data directed input output routine matrix manipulation discussed | hassitt, a.
1650 | unifying computational method analysis complete factorial experiment | computational method calculation sum square analysis variance complete factorial experiment computation main effect interaction mean method elucidated unifying method variety purpose previously requiring method programming advantage method obvious variant discussed standard analysis variance analysis omitting level factor separate analysis level factor combination level factor performed simultaneously calculation main effect interaction mean mean expects data standard order leaf data order analysis data performed rearrangement total sum square excluding replication sum square partitioned polynomial partition interaction degree freedom factor unequally spaced factor level | cooper, b. e.
1651 | interpretive input routine linear programming | descriptive article input code presented greatly simplifies data input linear programming solution routine subsequent pedagogical device solving small lp problem limited derives inherent limitation code efficiency evaluation large lp problem doubtless benefit input system suited bulk data handling input code user standpoint input appears exactly textbook presentation lp problem limited keypunch inability write subscript input interpreter scan column wise fixed format data preparation required user general requirement liberally editorial comment input deck aid identification row constraint article includes example input output solution routine presently skeleton flowchart input interpreter | aigner, d. j.
1652 | code non numeric information processing application online system | code specifically designed simplify internal information processing operation online computer system respect non numeric application maximize transfer rate information channel linking system system user code direct application problem area information retrieval document classification computer aided teaching text editing code called ipc information processing code bit code set constructed bit subset easily derived basic set code set organized simple binary operation distinguish numeric alphabetic special symbol control character code number usable character basic set size expanded escape code included set suitable interpretation unassigned code basis requirement local environment | morenoff, e. mclean, j. b.
1653 | system performance evaluation survey appraisal | state art system performance evaluation reviewed evaluation goal problem examined throughput turnaround availability defined fundamental measure performance overhead cpu speed perspective appropriateness instruction mix kernel simulator tool discussed pitfall encountered analysis simulation synthesis presented level approach evaluation requiring successively greater amount information central role measurement performance evaluation development evaluation method explored | calingaert, p.
1654 | university educational program computer science | review power contemporary computer computer science defined way objective computer science education stated asserted north american university achieved computer science department program stanford university reviewed appendix include syllabic ph qualifying examination stanford computer science department | forsythe, g. e.
1655 | code extension procedure information interchange proposed usa standard
1656 | procedure standardization process proposed usa standard
1657 | implementation sharer2 time sharing system | simple mechanism execution part program memory protection program act suboperating system improved version sharer time sharing system feature | harrison, m. c. .k operating system, memory protection, time-sharing, multiprogramming, monitor, submonitor, suboperating  system .c 4.32 4.31 4.32
1658 | analysis algorithm programming problem | paper concerned review examination existing algorithm programming problem computational experience summarized machine time storage requirement algorithm compared test problem small intermediate size computer experiment provide hope solving problem variable reasonable amount machine time | gue, r. l. liggett, j. c. cain, k. c. .k operations research, optimization theory, integer programming, zero-one variables, algorithms .c 5.39 5.41
1659 | computational linguistics ph computer science program | report recommendation course curriculum computational linguistics ph computer science program classification subject area contained computational linguistics presented ten course area basic bibliography computational linguistics appended | kuno, s. oettinger, a. g. .k computational linguistics, mathematical linguistics, language and computer, language data processing,  computational linguistics course curriculum, computational linguistics graduate program, computational  linguistics bibliography, computer science curriculum .c 1.52 3.42 3.43
1660 | index subject algorithm
1661 | multint algorithm d1 | kolbig, k. s. .k numerical integration, multidimensional integration, gaussian integration .c 5.16
1662 | eigenvalue eigenvectors real general matrix f2 | grad, j. brebner, m. a. .k eigenvalues, eigenvectors, latent roots, latent vectors, householder's method, qr algorithm, inverse  iteration .c 5.14
1663 | generator random number satisfying poisson distribution g5 | snow, r. h. .k poisson distribution, random number generator, monte carlo .c 5.12 5.5
1664 | algorithm deriving equation mathematical physic symbolic manipulation | method digital computer derive equation mathematical physic curvilinear coordinate system requested user effectiveness technique demonstrated derive navier stokes equation fluid motion continuity equation derive equation method user need know coordinate transformation equation relating curvilinear coordinate interest orthogonal cartesian triad program coordinate transformation equation supplied input computer derive navier stokes equation continuity equation equation obtained relative curvilinear coordinate system transformation equation input paper emphasis theoretical consideration methodology programming detail result presented cylindrical polar spherical polar coordinate system | howard, j. c. tashjian, h. .k formac, navier-strokes equations, continuity equation, tensor, tensor equation, curvilinear coordinate  systems, fortran, symbolic manipulation .c 3.21 3.25 3.29 4.12 4.29
1665 | automatic generation efficient lexical processor finite state technique | practical application theory finite state automaton generate lexical processor dealt tutorial article aed rword system developed part aed system system accepts input description multicharacter item word allowable language term subset regular expression output system lexical processor read string character combine item defined regular expression output item identified code number pointer block storage character character count item processor produced system based finite state machine state machine corresponds unique condition lexical processing character string state character read machine state transition action based character read system operation processor generated compared favorably speed carefully hand coded program accomplish task lexical processor aed mad produced technique employed independent nature item evaluated word event substituted character string processor generalized decision making mechanism based ordered sequence event system range application area lexical processing convenient advantage speed important consideration designing system automatic generation lexical processor goal processor completely eliminated backup rereading nearly fast hand coded processor analyze language detect error convenient easy | johnson, w. l. porter, j. h. ackley, s. i. ross, d. t. .k character string, compiler, finite-state automata, finite-state machine, lexical processor, nondeterministic  machine, parsing, plex structure, regular expressions,sequential machine, syntactic analysis .c 3.63 3.75 4.12 5.22 5.24 5.31
1666 | solution linear program variable implicit enumeration algorithm | byrne, j. l. proll, l. g. .k linear programming, zero-one variables, partial enumeration .c 5.41
1667 | root polynomial root squaring resultant routine algorithm c2 | noltemeier, a. .k root finders, roots of polynomial equations, polynomial zeros, root-squaring operations, graeffe  method, resultant procedure, subresultant procedure, testing of roots, acceptance criteria .c 5.15
1668 | algol procedure fast fourier transform arbitrary factor algorithm c6 | singleton, r. c. .k fast fourier transform, multivariate fourier transform, fourier series, harmonic analysis, spectral  analysis, orthogonal polynomials, orthogonal transformation, virtual core memory, permutation .c 3.15 3.83 5.12 5.14
1669 | algol procedure fast fourier transform algorithm c6 | singleton, r. c. .k fast fourier transform, complex fourier transform, multivariate fourier transform, fourier series,  harmonic analysis, spectral analysis, orthogonal polynomials, orthogonal transformation, virtual core  memory, permutation .c 3.15 3.83 5.12 5.14
1670 | correspondence bit hollerith code computer environment usasi tutorial standard
1671 | phonological rule tester | design implementation system alleviate problem rule evaluation linguist area phonology presented permit user define line set rule statable framework presented sound pattern english chomsky halle define phoneme bundle distinctive feature define data string phoneme grammatical structure test effect applying rule data store definition result rule application facility detail implemented translating linguistic rule rule flip format directed list processor embedded lisp made system construction easy providing sophisticated capability linguist system written bbn lisp scientific data system computer designed line interactive fashion control user command executed | borrow, d. g. fraser, j. b. .k phonology, rule tester, linguistics, transformational grammar, lisp, format-directed list processing,  on-line systems .c 3.42 4.13 4.22
1672 | practical error coefficient integration periodic analytic function trapezoidal rule | theoretical practical value error coefficient bounding error integrating periodic analytic function trapezoidal rule tabulated range parameter | rabinowitz, p. .k theoretical error coefficients, practical error coefficients, numerical integration, periodic analytic  functions, trapezoidal rule, roundoff error, truncation error, integration algorithm .c 5.11 5.16
1673 | approximate solution initial boundary wave equation problem boundary technique | boundary technique proposed treatment initial boundary problem linear mildly nonlinear wave equation illustrative example offered demonstrate ease method applied | greenspan, d. .k initial-boundary-value problem, wave equation, boundary-value technique .c 5.15 5.17
1674 | line random number generator combination | line random number generator generator requiring single fortran instruction discussed short fortran program mix generator aim provide method incorporating random number generator directly fortran program mean line instruction advantage speed avoiding linkage subroutine convenience versatility wishing experiment generator congruential generator mixing generator provide composite potentially statistical property library generator wish consider simple fortran program discussed | marsaglia, g. bray, t. a. .k random number generation, monte carlo, simulation .c 5.5
1675 | note relevance estimate improvement | paper effect iterating improvement procedure examined shown application improvement factor time ineffectual factor scale factor | korfhage, r. r. .k information retrieval, relevance, indexing, classification .c 3.70 3.71 3.74
1676 | lrltran compiler | extensive software problem confront organization posse number computer frequently acquires maintain cohesion system developed written high level language minimizes machine dependency isolates language compiler language discussed language called lrltran heavily augmented fortran tree pas compiler make internally postfix polish notation pas pas ii tree representation referred composite blocking table pas pas iii machine independent optimization occurs pas ii loop machine dependent optimization pas iii | mendicino, s. f. martin, j. t. ranelletti, j. e. zwakenberg, r. g. .k compiler, compiler-compiler, machine independence, scatter storage technique, polish processor,  common subsegments, tree representation, optimization .c 4.12 4.20
1677 | storage organization programming system | system program data representation rice university computer year logical entity storage occupies block consecutive memory location block labeled codeword program data vector codewords turn label block form array storage arrangement discussed realized advantage programming system simplicity programmed addressing flexibility data structure efficiency memory utilization variability system composition execution mean linkage program program data basis storage protection application labeled block extended area time sharing multimedia storage control basis experience rice idea extension presented | jodeit, j. g. .k storage allocation, storage organization, storage control, codewords, data representation, program  representation, data structures, storage protection, addressing mechanisms, paging, segmentation, file  handling .c 4.30 4.40 6.20
1678 | automaton formal language abstract switching computability ph computer science program | number course listed area describe automaton formal language abstract switching computability ph student computer science catalog description course applied role course graduate program discussed | mcnaughton, r. .k ph.d. computer-science curriculum, ph.d. computer science program, automata, formal languages,  switching theory, theory of computability .c 1.5 5.2 6.1
1679 | fast fourier transform algorithm real valued series | procedure presented calculating complex discrete fourier transform real valued time series procedure number point series integral power algorithm preserve order symmetry cooley turkey fast fourier transform algorithm effecting reduction computation storage achieved series real discussed hardware software implementation algorithm perform log2 complex multiply add operation require real storage location analyzing point record | bergland, g. d. .k fast fourier transform, time series analysis, digital filtering, spectral analysis, real-time spectrum  analyzers, fourier analysis, discrete fourier transform, digital spectrum analysis, fourier analysis  algorithm, fourier synthesis algorithm .c 3.80 3.81 4.9 5.49 6.22
1680 | general purpose display processing tutorial system | adept display expedited processing tutorial system system designed improve man computer communication employing display unit interleave tutoring computer operation simulation programming information retrieval written fortran iv ibm system model ibm display unit operating system adept cataloged program control standard operating system terminating rescheduling relinquishing computer resource allocated surrendering control operating system perform job expands power flexibility computer assisted instruction making immediately student teacher user full resource system cataloged program operating system language processor compiler simulation model mathematical solution technique stored data library user program incorporated instructional material reprogramming illustration application presented implication discussed | engvold, k. j. hughes, j. l. .k computer-assisted instruction, tutorial systems, programming, simulation, modeling, information  retrieval operating systems, graphics, displays, man-machine interface, on-line computing, graphic programming .c 1.5 3.3 3.5 3.8 4.0 4.3
1681 | easy english language information retrieval remote typewriter console | easy english natural command language designed simplify communication man machine remote typewriter console developed retrieval document computerized data base moore school information system laboratory request formulated standardized syntactical form example presented form transformed equivalent query expressed retrieval system original symbolic command language briefly operation easy english detailed illustration transformation performed sample request point request string system macro flowchart easy english included appendix printout retrieval demonstration | rubinoff, m. bergman, s. cautin, h. rapp, f. .k natural language communication, on-line searching, remote console communication, information retrieval,  man-machine communication, remote terminal communication, translator, document retrieval, conversational  mode, information retrieval language, symbolic command language .c 3.74 3.81 4.19
1682 | implementation basic system multiprogramming environment | implementation remote terminal basic system context existing multiprogramming computer system burroughs b5500 implementation combine unique mixture machine language interpretive technique incremental compiler | braden, h. v. wulf, w. a. .k multiprogramming, incremental compilation, compilers, interpreters .c 4.1 4.12 4.2 4.22 4.3 4.32
1683 | boolean matrix method detection simple precedence grammar | mechanical procedure derived determining context free phrase structure grammar simple precedence grammar procedure consists elementary operation suitably defined boolean matrix application procedure operator grammar | martin, d. f. .k syntax analysis, precedence analysis, simple precedence grammar, simple precedence language, operator  grammar, operator precedence, compilers, bounded-context syntactic analysis, boolean matrices, relations .c 4.12 5.23
1684 | ambiguity limited entry decision table | decision table tool system analysis program specification accepted rule redundancy contradiction completeness limited entry table published checking preceded conversion extended limited entry form processor translate table conventional program base diagnostic facility rule paper suggested rule unsatisfactory important aspect checking eliminate ambiguity table ambiguity defined discussed procedure producing checked decision table proposed theoretical basis algorithm established importance designed diagnostic facility decision table processor emphasized | king, p. j. h. .k decision tables, detab-65, systems analysis  .c 3.50 4.19 4.49
1685 | gan system generating analyzing activity network | gan system generating activity network designed save time preparation activity network deal conveniently network program defining description programming language designed generating activity network set standard network presented general idea language performing calculation activity network scheduling activity network | schurmann, a. .k activity network, management project, standard network, network generator, network assembler, activity  network analysis, network calculation, network program .c 3.50 3.53 4.11 4.12 4.29
1686 | computer synthesis hologram display | optical digital holography reviewed mathematical model computational technique author digital holographic process discussed application computer holography suggested computer hologram made dimensional object give faithful reconstruction white light approach based point aperture image discussed photograph image reconstructed digital hologram presented | lesem, l. b. hirsch, p. m. .k holography, optics, fourier transforms, computer applications, display device, photography, physics,  mathematics, image processing .c 3.17 3.19 5.19
1687 | netflow algorithm | bray, t. a. witzgall, c. .k capacitated network, linear programming, minimum-cost flow, network flow, out-of-kilter .c 5.32 5.41
1688 | netflow algorithm | henderson, j. h. .k capacitated network, linear programming, minimum-cost flow, network flow, out-of-kilter .c 5.32 5.41
1689 | calculation polynomial derivative value horner scheme algorithm c1 | pankiewicz, w. .k function evaluation, polynomial evaluation, algol procedure, horner's scheme .c 5.12 4.22
1690 | netflow algorithm | bray, t. a. witzgall, c. .k capacitated network, linear programming, minimum-cost flow, network flow, out-of-kilter .c 5.32 5.41
1691 | comparison correlational behavior random number generator ibm | hutchinson state prime modulo multiplicative congruential pseudorandom generator attributed lehmer passed usual statistical test random number generator empirically shown generator type produce sequence autocorrelation function lag exhibit evidence nonrandomness multiplicative constant alternative generator proposed tausworthe irreducible polynomial field characteristic shown free defect applicability generator ibm discussed computer word size affect generator statistical behavior older mixed simple congruential generator extensively tested computer bit word optimum generator ibm | whittlesey, j. r. .k random numbers, pseudorandom number generators, autocorrelation function, serial correlation, digital  shift-register generators, linear recurrence modulo two, irreducible polynomials, primitive trinomials  modulo two, congruential generators, prime numbers, statistical tests for randomness, ibm 360, 32-bit  versus 36-bit word size .c 5.5
1692 | numerical solution thin plate heat transfer problem | numerical solution system linear equation resulting discrete approximation thin plate heat transfer problem considered slow convergence point iterative method analyzed shown caused boundary condition difficulty removed standard line iterative technique | stewart iii, g.w. lick, d. w. .k heat transfer problem, poisson equation, boundary value problem, thin domain, successive overrelaxation  (sor), block sor .c 3.20 5.17
1693 | gpl truly general purpose language | truly general purpose programming language gpl facility constructing language data type facility operation performed basic language minimal sense basic element derived high efficiency object program construct algol statement statement basic special type procedure symbol underlined word algol implicitly defined usage declaration part word definable packed word handled easily full word address variable pointer included full generality | garwick, j. v. .k programming language, general purpose, self-extending, macro, algol .c 4.20
1694 | algorithm probability union large number event | algorithm presented efficiently evaluates probability union independent mutually exclusive event problem evaluating sum product combination variable minimum time storage space | miller, g. d. .k algorithm, probability, optimum, storage vs. time compromise, set union, mutually exclusive events .c 5.12 5.5 5.6
1695 | plexus line system modeling neural network | description presented plexus system enables user construct neural network analyze output data produced network store retrieve network data library system operated entirely digital display unit interacts directly user permit easy rapid transition phase modeling process plexus designed complement neurophysiological research systematic development neural model coordinated experimental work plexus network built component representing individual neuron external stimulus interconnecting fiber component detailed nature provision made experimental data input network convenient mean specification modification network extensive error checking capability provided data resulting simulation network analyzed variety technique ranging examination gross characteristic data determination detailed statistical property | dill, j. c. randall, d. l. richer, i. .k biological modeling, data analysis, discrete system simulation, library systems, modeling, network  simulation, neural networks, neurophysiological models, on-line simulation, simulation .c 3.12 3.19 3.29 3.65
1696 | algorithm identifying ergodic subchains transient state stochastic matrix | algorithm identifying ergodic subchains transient state stochastic matrix presented application markov renewal programming construction variable length code reviewed updating procedure dealing sequence stochastic matrix discussed computation time investigated experimentally compared recently propose method | fox, b. l. landi, d. m. .k stochastic matrix, ergodic, chain identification .c 5.39 5.5
1697 | graphical input output nonstandard character | system developed harvard graphically inputting outputting nonstandard character computer printed principle system deal orthography present limited chinese character mathematical symbol character added repertoire system graphical input display scope text inputting accomplished display scope rand tablet organization operation system discussion relative merit system illustration computer input output chinese character included | hayashl, h. duncan, s. kuno, s. .k chinese characters, input/output, orthography, rand tablet, pdp-1, automatic typesetting, man-machine  communication, computer graphics, graphical input, on-line editing .c 3.40 4.41
1698 | statistical model console behavior multiuser computer | ability computer system communicate world efficiently important ability perform computation efficiently difficult characterize user easy characterize entire user community based property community postulated hypothetical virtual console claim made virtual console behaves actual console entire collection virtual console model collection actual console model answer question process suspended waiting console input maximum rate process execute bound set buffer requirement answer similar question needed aspect operating system design | denning, p. j. .k statistical models for input-output, operating system design, input-output design .c 4.30 4.41 5.5
1699 | experimental evaluation information retrieval teletypewriter | experiment designed evaluate capability mechanized information retrieval system emphasis interactive man machine language mechanical psychological limitation design conducted moore school information system laboratory basic assumption research information retrieval system man machine dialogue remote inquiry terminal provide searcher tool actually performing search library repository document factor involved evaluation system include ease learning time effectiveness actual retrieval experiment conclusion resulting detailed | rubinoff, m. bergman, s. franks, w. rubinoff, e.r. .k information retrieval testing,  information system evaluation, experimental document retrieval,  document retrieval, document perusal, man-machine communication, remote console communication, teletypewriter  communication, remote terminal communication, retrieval command language, symbolic command language,  interactive systems, user learning factors, on-line searching .c 3.72 3.74 3.79 3.81
1700 | peekabit computer offspring punched card peekaboo natural language searching | peekaboo idea punched card information retrieval method mated idea superimposed punching produce programming technique cut computer run time half test search subject index entry search program device operational late item entered store byte mask created item meaningful word inclusive operation search time logical product operation mask similarly constructed question mask equal question mask question word present store item equality conclusive word store item unpacked compared question word present store made subject index entry estimated average character longer text abstract handled multiple mask | hutton, f. c. .k peekaboo, superimposed coding, natural language searching text searching, information compaction,  computer search technique .c 3.74
1701 | synchronous signaling rate data transmission proposed usa standard
1702 | commentary mr mooers paper | steel jr., t. b.
1703 | accommodating standard identification programming language | user public want standardization reliable identification programming language related service achieving goal illustrated method adopted trac interactive language related family language oppressive rigidity standardization avoided accommodation technique accessible user allow local variation language explicit standardization language undertaken organizational source language organizational trademark trac published standard service relying reliable public identification method usefully applied programming language computer service | mooers, c. n. .k standardization, programming languages, trac t-64 language, tranemark, public identification of  programming languages, standards which accommodate .c 2.12 4.2 2.9
1704 | minimum excess cost curve algorithm | muth, j. f. .k critical path scheduling, pert, cost/time tradeoffs, network flows .c 3.59 5.41
1705 | set basic input output procedure algorithm | mean primitive symbol outsymbol length requested journal algorithm policy comm acm nov basic set input output procedure defined aiming quality flexibility outreal instance written derived procedure output fixed point floating point representation round properly variant easily written explicit call procedure decompose integer decompose real highly recommended practice echoing input made easy subset derived procedure ioi ior iob ioa documentation output form equivalent algol statement provided made subset oti otr otb ota berkeley style providing information form output prior call procedure real format defined parameter outchannel provide information simultaneous output channel suggested interrelationship declared procedure furnished tabular form | de vogelaere, r. .k input output, transput, input output procedures, input echo, quality output, decompose integer,  decompose real, style, berkeley style, procedures relationship, output documentation, equivalent algol  statements, algol, algol 60, integer format, real format,out integer, read real, input output boolean,  input output array, fixed point representation, floating point representation, output channel interpretation .c 4.0 4.41
1706 | champ character manipulation procedure | programming language facility symbol manipulation string procedure declared called standard algol context algol procedure turn called string procedure numeric symbolic process conveniently programmed concatenation variant snobol pattern matching make set primitive command assembled conditional expression provide alternative computational pattern array string processed quantifier class thing assigned identifier restricted procedure expressed notation language facility implemented algol compiler burroughs b5500 | storm, e. f. .k symbol manipulation, string handling, character manipulation, conditional expressions, procedures,  structure matching, recursive programming, quantifiers .c 4.22 4.13
1707 | generation positive test matrix known positive spectrum | sufficient condition real matrix similar positive matrix result construct similarity transformation applied upper triangular matrix yield positive matrix preassigned positive spectrum | hall, c. a. porsching, t. a. .k test matrices, positive matrices, similarity transformation, positive eigenvalues .c 5.1 5.14
1708 | note efficiency lisp computation paged machine | problem level storage program explored context lisp system core memory buffer large virtual memory stored drum detail timing problem | borrow, d. g. murphy, d. l. .k storage management, list processor implementation, lisp, paging, secondary storage utilization,  efficiency of paged computation .c 3.7 4.1 4.2
1709 | modification efroymson technique stepwise regression analysis | computational technique conventionally stepwise multiple linear regression requires storage matrix data number variable large requirement tax storage capacity presently machinery symmetry matrix involved permit modification requiring half storage computation conventional algorithm additional storage analysis problem variable alternatively permit analysis problem number variable computation performed double precision | breaux, h. j. .k multiple linear regression, statistical recurrence formulas, correlation, linear statistical models,  statistical computer programs, curve fitting .c 4.0 4.40 5.0 5.5 5.10 5.13
1710 | asp ring implemented associative structure package | asp general purpose associative data structure package arbitrary number data item arbitrary number relationship data item represented special picture language proved drawing asp structure paper asp structure built manipulated mean series macro call outlined appendix emphasis philosophy system implementation sufficient information included enable reader produce implementation asp | lang, c. a. gray, j. c. .k associative, data structure, ring structure lists, list structure, set languages, modeling, graphics .c 4.20 4.22
1711 | computer need lawyer | liability negligence tort slander credit liability theory express implied warranty guarantee discussed legal complication explained user operator owner leasors computer alerted potential legal problem focus trouble spot contracting data processing service automating record keeping operation deciding automate operation complying statute regulation relating record keeping information patent copyright trade secret protection program problem copyrighted material information storage retrieval system including pending copyright patent revision bill | banzhaf iii, j. f. .k law, legal, lawyer, liability, torts, negligence, contracts, warrantees, guarantees, accounting,  regulations, simulation, income tax, copyrights, patents, trade secrets, standard of care, slander of  credit, crime, criminals, record keeping records, evidence, copying .c 1.3 2.11 2.12 2.2 3.33
1712 | recovery disk content system failure | method discussed system malfunction content disk restored status time failure | lockemann, p. c. knutsen, w. d. .k data acquisitition, disk file organization, error recovery, file organization .c 3.73
1713 | overcoming high priority paralysis multiprogramming system case tory | high priority paralysis degradation occur multiprogramming system scheduling based primarily preassigned priority alleviated modifying scheduling algorithm maximize number program active time case tory paper general method simultaneity increased refinement scheduling algorithm future improvement considered briefly | stevens, d. f. .k multiprogram scheduling, dynamic priority assignment scheduling .c 4.30 4.32 4.39
1714 | procedure normal distribution algorithm s15 | maclaren, m. d. .k normal distribution function, error function, normal function, normal curve integral .c 5.5 5.12
1715 | direct search algorithm e4 | de vogelaere, r. .k function minimization, search, direct search .c 5.19
1716 | normal random deviate algorithm g5 | bell, j. r. .k normal deviates, normal distribution, random number, random number generator, simulation, probability  distribution, frequency distribution, random .c 5.5 5.13
1717 | generating prime implicants ternary encoding decimal arithmetic | decimal arithmetic ternary encoding cube topological consideration algorithm obtain extremals prime implicants boolean function algorithm programmed fortran language generally requires memory minimization procedure treat don care term efficient manner | dietmeyer, d. l. duley, j. r. .k prime implicants, extremal, switching function, minimization, cubical complexes, ternary encoding .c 3.24 6.1
1718 | logical arithmetic computer complement binary arithmetic | algorithm presented multiplication division unsigned integer operand digit reserved sign participate significant arithmetic digit positive weight | ehrman, j. r. .k binary arithmetic, unsigned operand arithmetic, maximum significance arithmetic, full-precision  arithmetic .c 3.15 5.11
1719 | methodology calculating optimizing real time system performance | continually increasing size complexity number type cost data processing system causing re examination government industry criterion method calculating optimizing data processing system cost performance real time data processing system typified automated airline reservation system discussed paper criterion evaluating performance methodology calculating optimizing outlined method illustrated carrying portion performance calculation optimization drum oriented message switching system | stimler, s. brons, k. a. .k real-time system analysis, real-time system design, real-time system performance criteria, real-time  system cost performance ratio .c 3.27 3.80 3.81 3.89 6.9
1720 | master level computer science curriculum | result survey course work master degree candidate university presented general comment concerning emphasis program | elliott, r. w. .k surveys, education, computer science curricula .c 1.52
1721 | determination intersection point plane curve mean differential equation | method proposed calculate intersection point plane curve theory singular point system differential equation developing method intersection point determined identified singular point modification applied system ensure singular point stable integral start neighborhood singular point approach point integral parameter tends infinity addition method systematically searching intersection point prescribed rectangular area | kuiken, h. k. .k plane curves, intersection points, intersections plane curves, integration, differential equations,  matrix iteration, singular points, nonlinear differential equations, eigenvalues, complex roots, roots,  stationary points, runge kutta, stable singularity, unstable singularity .c 2.0 3.10 3.20 3.50 5.10
1722 | method convergence improvement improper integral | numerical integration improper integral kind customary truncate integral change yielded iteration predetermined constant efficiency integration scheme improved recent advance theory nonlinear transformation important integral integral integrands rational polynomial transformation fail yield improvement paper method convergence improvement developed greatly improve convergence improper integral including integral rational polynomial | mcwilliams, g. v. thompson, r. w. .k approximation, nonlinear, improper integral, convergence improvement, numerical integration, rational  polynomials, truncation .c 3.15 5.13 5.16 5.19
1723 | computer construction project network | project network pert cpm algorithm constructing project network directly project precedence relation algorithm creates dummy activity topologically order arc node number node created minimal precedence relation experimentally programmed fortran ii ibm | fisher, a. c. liebman, j. s. nemhauser, g. l. .k project networks, pert, cpm, topological ordering, network construction by computer .c 5.32
1724 | generalized partial pas block sort | design partial pas block sort arbitrary range key number work design generalization partial pas column sort ashenhurst amphisbaenic sort nagler power sort tabulated size input number work consideration problem combining block sort internal sort direct access storage device | bayes, a. .k block sort, partial pass sort, direct access devices, column sort, chaining, reverse chaining,  sort, amphisbaenic .c 5.31
1725 | simple proof lewin ordered retrieval theorem associative memory | efficient method ordered retrieval binary word associative memory lewin based special readout circuit digit value present individual digit column memory circuit individual digit column digit value digit memory empty circuit paper termed column indicator reduces considerably number memory access retrieve order number distinct word memory lewin prof readout method distinct binary word 2m memory access prof number memory access method unlike method independent word length paper simple proof theorem derived elementary aspect structure set binary number presented | wolinsky, a. .k associative memories, content-addressed memories, ordered lists, ordered information retrieval,  ordered retrieval theorem, column digit values, digit value variety, column sensing arrangement, digit  value readout, digit variety readout, memory access, memory access frequency, ordered retrieval efficiency,  access frequency proof, retrieval theorem proof .c 3.74 3.79 5.29 5.31 6.31 6.36
1726 | preliminary investigation technique automated reading unformatted text | method converting unstructured printed material computer code experimentally investigated operator controlled mode depending human demarcation region page guiding scanner implemented mean joystick crt display mode performance figure obtained thought suitable processing complicated material technical journal simpler material instance claim section patent application utmost accuracy unsupervised mode advocated textual portion page located rapid prescan rudimentary form frequency analysis area rescanned higher resolution suitable character recognition error rate order percent obtained simple problem involving photograph telephone company meter board matter related design general purpose page reader segmentation printed text possibility time sharing scanner interactive man machine operation facsimile reproduction illustration discussed | nagy, g. .k pattern recognition, character recognition, text reading, information retrieval, unformatted text  operator-controlled reader, online reader, text-image discrimination, reading machine .c 3.63 3.79 3.89 6.29 6.35
1727 | estimating frequency jump program | segmentation program reasonable estimation value ij ij mean number jump th instruction th instruction run time case ij estimated directly structure program generally account difficult programmer translator obtain good estimation ij easier estimate ij quantity ij ij sum ij arbitrary positive constant ij proportional ij estimation ij easier estimate probability event instruction executed instruction estimation considering structure program part paper theory markov chain algorithm computation ij ij found way obtaining estimate ij part variant algorithm derived avoiding necessity computation involving large matrix | kral, j. .k object program reduction, supervisor calls decreasing, jump frequencies estimation, control transfers  estimation, optimal program segmentation, markov chain program correspondence, program graph, one-entry  subgraph, locally estimated jump frequencies, supervisor overhead decreasing, program segmentation algorithm,  jump frequencies, program segmentation problem .c 4.11 4.19 4.39 4.49
1728 | experimental data behavior program paging environment | result summarized empirical study directed measurement program operating behavior multiprogramming system program organized fixed length page data collected interpretive execution number paged program describe frequency page fault frequency instant executing program requires page data instruction main core memory data evaluation page replacement algorithm assessing effect performance amount storage allocated executing program | coffman, e. g. varian, l. c. .k paging systems, paging, dynamic program behavior, program behavior, virtual memory systems, single-level  storage, one-level storage, operating system simulation, operating systems, supervisor simulation, machine  language program interpretation .c 4.13 4.32 4.39 4.9
1729 | minit algorithm linear programming algorithm | salazar, r. c. sen, s.k. .k linear programming, dual simplex method, primal problem, dual problem .c 5.41
1730 | jacobi polynomial algorithm s22 | witte, b. f. w. .k jacobi polynomials, orthogonal polynomials, three-term recurrences, special functions .c 5.12
1731 | gaussian quadrature formula algorithm d1 | gautschi, w. .k quadrature, gaussian quadrature, numerical integration, weight function, orthogonal polynomials .c 5.16
1732 | factorial analysis variance algorithm g1 | oliver,i. .k factorial variance analysis, variance, statistical analysis .c 5.5
1733 | distribution indistinguishable object distinguishable slot algorithm g6 | fenichel, r. r. .k object distributions, combinations, distribution numbers .c 5.39
1734 | chebyshev solution overdetermined linear system algorithm f4 | bartels, r. h. goulub, h. g. .k chebyshev solutions, overdetermined linear systems, linear equations, exchange algorithm .c 5.13 5.14 5.41
1735 | future market computer time | auction method allocating computer time price computer time fluctuate demand relative priority user controlled important project access auction free periodic fluctuation computer monthly time allocation scheme | sutherland, i. e. .k computer scheduling, auction, time allocation, operating efficiency .c 2.40
1736 | heading format data transmission usaai tutorial standard
1737 | global parser context free phrase structure grammar | unger, s. h.
1738 | writing outline debugging program experienced user | presently online debugging routine unsatisfactory experienced user require unnecessarily rigid complicated typing format make difficult user correct typing error consume excessive memory intricate feature debugging program prime importance program simple flexible highly efficient communication user debugging program improved technique applicable online debugging program technique presented illustrated opak octal package debugging program coded pdp sd compromise economy utility program core storage incorporation elegant debugging feature discussed | brady, p. t. .k debugging, utility program, programming languages .c 4.42
1739 | regular expression search algorithm | method locating specific character string embedded character text implementation method form compiler discussed compiler accepts regular expression source language produce ibm program object language object program accepts text searched input produce signal time embedded string text match regular expression example problem solution presented | thompson, k. .k search, match, regular expression .c 3.74 4.49 5.32
1740 | inexpensive braille terminal device | active time shared facility blind programmer requires braille terminal system detail construction brailler model teletype modifying print head increasing resiliency platen description programming needed drive brailler presented | anderson, g. b. rogers, d. w. .k blind communication, blind programming aid, braille, braille computer communication, braille output,  braille teletype, braille terminal, braille type head, embosser, tactile computer communication, tactile  teletype, tactile terminal .c 4.41 6.35
1741 | brad brookhaven raster display | multiconsole computer display system designed rich display low unit cost brad brookhaven raster display console plot ten thousand point character frame initial display system investment display teletype cost technique employed programmatically generating binary image desired display computer image written rotating drum memory independent read head continuously display picture generated swept horizontal line standard tv monitor serf display device technique drawback computer compute image displayed pointing interaction difficult pointing function coordinate point screen inverse map generation process required calculate coordinate point screen inverse map generation process required calculate coordinate selected point input space | ophir, d. rankowitz, s. shepherd, b. j. spinrad, r. j. .k computer display, computer graphics, computer raster display, tv display console, digital tv display,  swept raster computer display, swept raster tv computer display, tv graphics terminal, multiconsole computer  graphics, inexpensive graphic terminal .c 2.0 4.49 6.35
1742 | design display processor | flexibility power needed data channel computer display considered work efficiently channel sufficient number instruction understood small processor powerful channel found successive improvement display processor design lie circular path making improvement original simple design general purpose computer trip degree physical separation display parent computer key factor display processor design | myer, t. h. .k display processor design, display system, computer graphics, graphic terminal, displays, graphics,  display generator, display channel, display programming, graphical interaction, remote displays .c 2.44 6.22 6.29 6.35
1743 | reliable full duplex transmission half duplex telephone line | field proven scheme achieving reliable duplex transmission half duplex communication line presented demonstrate difficulty problem similar scheme slightly unreliable presented flowchart reliable scheme interesting example | lynch, w. c. .k telephone communication, half duplex, transmission, error correction, full duplex, telephone errors .c 3.81 4.41 6.35
1744 | stable numerical method obtaining chebyshev solution overdetermined system equation | implementation stiefel exchange algorithm determining chebyshev solution overdetermined system linear equation presented gaussian lu decomposition row interchange implementation computationally stable literature generalization stiefel algorithm developed permit occasional exchange equation simultaneously | bartels, r. h. golub, g. h. .k chebyshev solutions, overdetermined linear systems, linear equations,exchange algorithm .c 5.13 5.14 5.41
1745 | position paper computing communication | effective operation free enterprise creating envisioned information service industry dependent accomplishment restructuring information processing industry clear division cost made computing communication development information service wide multiaccess system concept information service share computer installation cost construction reasonable development public message switched communication service adequate provision made information security | dennis, j. b. .k information networks, information systems, computing and free enterprise, computing economics,  computer installation management, government regulation, communications services, distributed data base,  program leasing .c 2.3 2.40 3.80 4.30
1746 | protection information processing utility | critical problem design information processing utility permit flexible sharing user information privacy solution problem discussed | graham, r.m. .k protection, privacy, information processing utility, time-sharing, multi-user, multiprogramming,  multiprocessing, security, shared information, controlled access, reliable operation, segmentation .c 4.32 4.39
1747 | criterion designing computing system facilitate debugging | designer computing system adopt explicit criterion accepting rejecting proposed system feature criterion kind input recordability input specifiability asynchronous reproducibility output criterion imply user desire know control influence affecting content extent computer output define scope criterion notion abstract machine programming language notion virtual computer explained example application criterion concern reading time day clock synchronization parallel process protection multiprogrammed system assignment capability index | van horn, e. c. .k computer design, computer design criteria, computer systems, computer systems design, input equipment,  input equipment design, operating systems, operating systems design, multiprogramming, multiprogrammed  systems, multiprogrammed system design, virtual computers, programming languages, programming language  design, program semantics, programming language semantics, determinism, reproducibility, repeatability,  deterministic computers, protection, memory protection, information security, information privacy, computing  reliability, debugging, program debugging, program testing, parallel processing, parallel programming,  multiprocessing .c 2.11 4.12 4.13 4.20 4.30 4.42 4.43 5.24 6.20 6.35
1748 | scheduling philosophy multiprocessing system | collection basic idea presented evolved worker past year provide suitable framework design analysis multiprocessing system notion process state vector discussed nature basic operation process considered connection process protection analyzed general approach priority oriented scheduling relationship conventional interrupt system explained aspect time oriented scheduling considered implementation scheduling mechanism analyzed detail feasibility embodying hardware established finally method interlocking execution independent process presented compared | lampson, b. w. .k time-sharing, multiprocessing, process, scheduling, interlocks, protection, priority, interrupt  systems .c 4.31 4.32 6.21
1749 | structure multiprogramming system | multiprogramming system activity divided number sequential process sequential process hierarchical level independent abstraction implemented hierarchical structure proved vital verification logical soundness design correctness implementation | dijkstra, e. w. .k operating system, multiprogramming system, system hierarchy, system structure, real-time debugging,  program verification, synchronizing primitives, cooperating sequential processes, system levels, input-output  buffering, multiprogramming, processor sharing, multiprocessing .c 4.30 4.32
1750 | consideration design multiple computer system extended core storage | large quantity addressable executable fast random access memory heighten multiprogramming performance multicomputer system discussed general design hardware arrangement software component function system based planned configuration dual cdc share million word extended core storage generalization design special emphasis estimating expected gain compared traditional configuration separate independent computer extended core storage observation made conventional slower speed random access storage device place faster memory | fuchel, k. heller, s. .k multiple computer systems, extended core storage, multiprogrammed operating systems, multiprocessor  operating systems, control data corporation 6600, operating system with ecs .c 4.30 4.32
1751 | working set model program behavior | basic reason absence general treatment resource allocation modern computer system adequate model program behavior paper model working set model developed working set page process defined collection recently page knowledge vital dynamic management paged memory process working set shown manifestation ongoing computational activity processor demand memory demand defined resource allocation formulated problem balancing demand equipment | denning, p. j. .k general operating system concepts, multiprocessing, multiprogramming, operating systems, program  behavior, program models, resource allocation, scheduling, storage allocation .c 4.30 4.32
1752 | resource management medium scale time sharing operating system | task scheduling resource balancing medium size virtual memory paging machine discussed relation combined batch processing time sharing environment synopsis task scheduling paging algorithm implemented result comparative simulation tracing development algorithm predecessor version discussion emphasis balancing system performance relative characteristic system resource simulation result relative alternate hardware characteristic effect program mix loading variation presented | oppenheimer, g. weizer, n. .k time-sharing, operating systems, resource management, task scheduling, paging, system simulation,  memory management, virtual memories .c 4.30 4.31 4.32
1753 | virtual memory process sharing multics | basic concept involved design multics operating system introduced multics concept process address space virtual memory defined paging segmentation explained mean user share procedure data discussed mechanism symbolic reference dynamically transformed virtual machine address detail | daley, r. c. dennis, j. b. .k virtual memory, information sharing, shared procedures, data sharing, dynamic linking, segmentation,  paging, multiprogramming, storage management, storage hierarchies, file maintenance .c 3.73 4.32
1754 | dynamic storage allocation system | recent computer system design hardware facility provided easing problem storage allocation method characterizing dynamic storage allocation system according functional capability provided underlying technique presented basic purpose paper provide perspective utility hardware facility assessed survey storage allocation facility representative computer system included appendix | randell, b. kuehner, c. j. .k segmentation, paging, multiprogramming, storage allocation, storage management, virtual memories,  storage fragmentation, storage hierarchies, addressing mechanisms .c 4.30 6.20
1755 | proceeding acm symposium operating system principle | acm special interest committee
1756 | hollerith punched card code proposed usa standard
1757 | data code calendar date machine machine data interchange proposed usa standard
1758 | symmetric polynomial algorithm c1 | mckay, s. .k symmetric polynomials, symmetric sum, unitary symmetric functions, schur functions .c 5.39
1759 | transportation problem algorithm | bayer, g. .k transportation problem, linear programming .c 5.41
1760 | normal curve integral algorithm s15 | bergson, a. .k normal curve integral, probability, special functions .c 5.5 5.12
1761 | chi squared integral algorithm s15 | o'brien, w. m. wood, j. .k chi-squared integral, probability, special functions .c 5.5 5.12
1762 | dilogarithm algorithm s22 | kolbig, k. s. .k dilogarithm function, special functions .c 5.12
1763 | root low order polynomial equation algorithm c2 | nonweiler, t. f. .k root finders, polynomial equation roots, quadratic equation roots, cubic equation roots, biquadratic  equation roots, polynomial zeros .c 5.15
1764 | panel discussion computer appreciation | session acm th anniversary conference august entitled education design experiment computer appreciation half consisted panel discussion computer appreciation organized chaired elliot organick panelist charles davidson bernard galler richard hamming alan perlis making prepared statement panelist joined discussion andries van dam arthur kohn presented paper half transcript panel discussion condensed dr organick edited panelist remark referred paper van dam kahn discussion half session pertinent paper included reference | organick, e. i. .k computer appreciation, students' liberal arts courses, survey courses, beginning programming, course  content, computer courses dropout rates, college versus precollege, teaching and social responsibility .c 1.1 1.51 1.52
1765 | expenditure source fund utilization digital computer research instruction higher education projection | southern regional education board published complete report survey conducted determine funding characterize utilization computer research instruction institution higher education united state sampling survey estimate total population presented | hamblen, j. w. .k computing centers, research, instruction, utilization, expenditures, support, sources of funds,  higher education, post secondary education, colleges, universities .c 1.52 2.45
1766 | quasilinearization estimation differential operator eigenvalue | linear ordinary differential operator unknown constant number eigenvalue value unknown constant estimated precise formulation provided effective numerical procedure solution result computational experiment | bellman, r. e. kagiwada, h. h. kalaba, r. e. vasudenvan, r. .k quasilinearization, eigenvalues, differential operators, nonlinear boundary-value problems, inverse  problems,differential equations, system identification .c 3.15 3.17 5.17
1767 | general purpose graphic language | interactive computer graphic terminal permit problem solved machine order handle variety application expedient develop general purpose graphic language number graphic device system designed produce language quickly cheaply model graphic language developed system presented | kulsrud, h. e. .k graphic language, interactive, incremental compilation, language design, metacompiler, syntax specified  language .c 4.12 4.22
1768 | global parser context free phrase structure grammar | algorithm analyzing context free phrase structure grammar generating program parse sentence language sentence invalid parser top bottom type recursive number heuristic procedure purpose shorten basic algorithm quickly ascertaining substring input sentence correspond target nonterminal symbol included generating algorithm parser implemented rca snobol tested successfully number artificial grammar subset algol number routine extracting data grammar minimum length derivable string prefix interest application context | unger, s. h. .k parser, syntax-directed compiler, context-free grammars, syntactic analysis, translators .c 3.42 4.12 5.24
1769 | expanding world computer | onward sweep automatic processing information impeded principal barrier geography cost problem complexity man machine communication inadequate sensor lack understanding distance time size main incentive breaching barrier universal need processing information urgent greater part human work activity production service computer development hardware programming time sharing education data communication display judged effectively remove barrier barrier smashing potentiality continued rapid expansion problem oriented language effective entire front online computer time sharing rate high measure education increased understanding basic progress computer complex powerful tool important government scientist studying problem created population explosion analyzing solution | harder, e. l. .k barriers, philosophy, developments, computer-aided design, problem-oriented languages, data communication,  education, computer science, forecast, survey, introduction .c 1.0 1.3 2.1 3.24 4.0 6.20 6.30
1770 | rule ethic information processing | background motivation adoption acm council november set guideline professional conduct information processing tory ethical code profession reason adoption ethical rule considered section acm guideline analyzed purpose inform important aspect profession stimulate thought interest | parker, d. b. .k ethics, professional conduct, code of ethics, acm guidelines, professionalism, professional societies,  unethical conduct .c 1.3 2.2
1771 | curriculum recommendation academic program computer science report acm curriculum committee computer science | this report contains recommendations on academic programs in computer science which were developed  by the acm curriculum committee on computer science.  a classification of the subject areas contained  in computer science is presented and twenty-two courses in these areas are described.  prerequisites,  catalog descriptions, detailed outlines, and annotated bibliographies for these courses are included.   specific recommendations which have evolved from the committee's 1965 preliminary recommendations are  given for undergraduate programs.  graduate programs in computer science are discussed and some recommendations  are presented for the development of master's degree programs.  ways of developing guidelines for doctoral  programs are discussed, but no specific recommendations are made. the importance of service courses,  minors, and continuing education in computer science is emphasized.  attention is given to the organization,  staff requirements, computer resources, and other facilities needed to implement computer science educational  programs.
1772 | usascsocr dual case keyboard arrangement proposed usa standard
1773 | general purpose alphanumeric keyboard arrangement information interchange proposed usa standard
1774 | program overlay technique | general feature program overlay system main type automatic semiautomatic nonautomatic classified programming technique explained function machine hardware system feature implementation semiautomatic overlay facility multiprogrammed system cdc detail special reference real time application | pankhurst, r. j. .k loaders, multiprogramming, overlay techniques, storage allocation and segmentation .c 4.39
1775 | adjustment inverse symmetric matrix symmetric element changed algorithm f1 | zielke, g. .k symmetric matrix, matrix inverse, matrix perturbation, matrix modification .c 5.14
1776 | maxflow algorithm | bayer, g. .k network,liner programming, maximum flow .c 5.41
1777 | generation permutation lexicographic order algorithm g6 | ord-smith, r. j. .k permutations, lexicographic order, lexicographic generation, permutation generation .c 5.39
1778 | distribution algorithm s14 | dorrer, e. .k fisher's  f-distribution, student's t-distribution .c 5.5
1779 | test probability algorithm s14 | morris, j. .k t-test, student's t-statistic, distribution function .c 5.5
1780 | harmonic analysis symmetrically distributed data algorithm c6 | hunter, d. b. .k harmonic analysis, cosine series, sine series, function approximation, curve fitting, trigonometric  series .c 5.13
1781 | translator writing system | critical review recent effort automate writing translator programming language presented formal study syntax application translator writing discussed section ii approach automating post syntactic semantic aspect translator writing discussed section iii related topic section iv | feldman, j. gries, d. .k compiler, compiler-compiler, translator, translator writing systems, metacompiler, syntax, semantics,  syntax-directed, meta-assembler, macroprocessor, parser, syntactic analysis, generator .c 4.1 4.10 4.12 4.22 5.23
1782 | numerical integration formula fourier analysis | numerical integration formula presented unequal sampling interval interval equally spaced log scale formulation fourier analysis improve accuracy ease usage complete set formula numerical fourier analysis | meisel, w. s. .k numerical integration, fourier analysis, integration .c 5.16
1783 | conversion | byan conversion mean floating point number base converted floating point number base converted back floating point number original base combination rounding truncation conversion question considered significant digit needed intermediate base allow conversion original number significant digit | matula, d. w. .k floating-point numbers, significance, base conversion, rounding, truncation .c 3.15 5.11
1784 | practical error coefficient estimating quadrature error analytic function | published error coefficient estimating quadrature error analytic function computed assumption quadrature rule exact polynomial degree rule rounded value abscissa weight true value integral polynomial question infinite binary expression quadrature rule exact error consideration computing practical error coefficient | rabinowitz, p. .k numerical integration, quadrature, truncation error, theoretical error coefficients, practical  error coefficients, integration analytical functions, roundoff error .c 5.11 5.16
1785 | scatter storage technique | scatter storage technique method implementing symbol table assembler compiler reviewed number way effectively presented variant technique documented | morris, r. .k scatter storage, hash addressing, searching, file searching, file addressing, storage layout .c 3.73 3.74
1786 | improved hash code scatter storage | introduced hash coding method based fixed point division multiplication logical operation method hash table length method handling collision discussed known quadratic search method faster random search free cluster build linear search | maurer, w. d. .k hash code, hash table, scatter storage, searching  .c 3.74 4.11 4.12 4.9
1787 | transition matrix compiling | algorithm construct suitable bnf grammar efficient left recognizer sentence language type recognizer number compiler operates pushdown stack transition matrix example illustrate recognizers effectively purpose usual syntax checking | gries, d. .k transition matrices, compilation, translation, grammar, context-free language, formal language,  parsing .c 4.12 5.23
1788 | general processor programming language | effort made develop implementing higher level programming language construction compiler proved generally satisfactory paper contended programming language functionally body macro instruction macro call constitutes canonical form term programming notation supporting discussion logical torical role macro instruction presented discussed conflict machine independence object program efficiency question greatest difficulty lie compiler construction | halpern, m. j. .k programming language translator, programming language processor, general translator, general processor,  macro instruction processor; meta processor, meta language translator, meta language processor, compiler-compiler,  writing system, translator writing system .c 4.10 4.11 4.12 4.20
1789 | logarithm gamma function algorithm s14 | hoare, m. r.
1790 | muller method finding root arbitrary function algorithm c5 | whitley, v. w. .k equation roots, function zeros  .c 5.15
1791 | triangular factor modified matrix algorithm f1 | green, d. r. .k matrix decomposition, matrix factors, matrix modifier, matrix perturbation .c 5.14
1792 | exploratory experimental study comparing online line programming performance | exploratory experiment conducted system development corporation compare debugging performance programmer working condition line line access computer known study measure programmer performance controlled condition standard task statistically significant result experiment faster debugging online condition important practical finding involves striking individual difference programmer performance methodological problem encountered designing conducting experiment limitation finding pointed hypothesis presented account result suggestion made research | sackman, h. erikson, w. j. grant, e. e. .k online vs. off line performance, programmer/computer communication, programming experimental-empirical  studies, programming cost effectiveness, programming performance, debugging effectiveness, time sharing  vs. batch processing, factor analysis application, programmer trainee performance, basic programming  knowledge test, experienced programmer study, analysis of variance, programmer individual differences .c 2.40
1793 | presentation alphameric character information processing proposed american national standard
1794 | fast random number generator ibm | seraphin, d. s. .k pseudorandom number, modulus, period, float, normalization, characteristic, chi-square test .c 4.49 5.19 5.5
1795 | optimal code serial parallel computation | fateman, r. j. .k code optimization, sequencing of operations, detection of common subexpressions .c 4.12
1796 | index subject algorithm
1797 | solution linear program algorithm | proll, l. g. .k linear programming, zero-one variables, partial enumeration .c 5.41
1798 | coulomb wave function algorithm s22 | kolbig, k. s. .k coulomb wave functions, wave functions, special functions, function evaluation .c 5.12
1799 | elementary function continued fraction algorithm b1 | bray, t. a. .k continued factions, pade table .c 5.19
1800 | psif algorithm s14 | parsons, r. g. .k gamma function, logarithmic derivative, factorial function, psi function .c 5.12
1801 | analysis variance balanced experiment algorithm g2 | claringbold, p. j. .k analysis of variance, analysis of covariance, regression analysis, experimental design, balanced  experiment, missing data, interblock estimate, intra block estimate .c 5.14 5.5
1802 | regression direct product matrix algorithm g2 | claringbold, p. j. .k analysis of variance, analysis of covariance, regression analysis, experimental design, matrix  direct product, protection operator, orthogonal matrix .c 5.14 5.5
1803 | complex root finding algorithm c5 | bach, h. .k downhill method, complex relaxation method, complex iteration, complex equation, transcendental  complex equation, algebraic complex equation .c 5.15
1804 | coloring polygonal region algorithm | herriot, r. g. .k coloring polygonal regions, coloring planar surfaces, drawing pictures, shading enclosed regions .c 4.9
1805 | productivity multiprogrammed computer progress developing analytic prediction method | multiprogramming discussed mode computer operation program concurrently processor memory proceeding central processor unit cpu input output channel program actually proceeding intermittently singly according eligibility readiness proceed priority able represent proceeding continuously simultaneously effective rate fraction enjoy absence program effective progress rate program sensitive detailed characteristic resident simulation method predicting paper present result progress developing alternative simulation simulation tested iterative computation rate situation algorithm sensitive factor control phenomenon including nonquantitative topological feature program structure | lasser, d. j. .k productivity, prediction, multiprogramming, simulation, equipment  evaluation, hardware, evaluation,  monitor, operating system, system software, supervisors, performance, time sharing, time slicing  .c 2.43 2.44 4.32
1806 | downhill method | downhill method numerical method solving complex equation restriction function analytical introduction method critical review relating literature presented theory method converges shown fundamental dilemma exists breakdown practical application avoid difficulty improve rate convergence root modification original method proposed program fortran based modified method algorithm numerical example included | bach, h. .k downhill method, complex relaxation method, complex iteration, complex equation, transcendental  complex equation, algebraic complex equation .c 5.15
1807 | optimization expression fortran | method optimizing computation arithmetic indexing expression fortran program presented method based linear analysis definition point variable branching loop structure program objective processing eliminate redundant calculation reference made common subexpression value remove invariant calculation loop efficiently compute subscript iteration variable provide efficient index register usage method presented requires pas compiler scanned backward development fortran compiler proved produce excellent object code significantly reducing compilation speed | busam, v. a. england, d. e. .k fortran, optimization, expressions, compilers, compilation, subscripts, register allocation, do  loops, common subexpressions, invariant calculations .c 4.12
1808 | advanced cryptographic technique computer | cryptographic technique maintain confidentiality information processed computer dealt special emphasis paid unique characteristic computer make cryptographic method relative security cost preferred method included paper | van tassel, d. .k cryptographic, cryptanalysis, ciphers secrecy systems, security systems, confidential information  processing .c 1.3 2.12 2.19 3.73 3.81 4.41
1809 | numerical analysis ph computer science program | numerical analysis study method procedure obtain approximate solution mathematical problem emphasis scientific calculation difficulty education broad area center question background emphasis numerical analysis program computer science department emphasize awareness problem computer implementation experimental procedure need solid background applied mathematics | parter, s. v. .k ph.d. program, numerical analysis, course separation, education .c 1.52
1810 | automatic folding program efficient displace | operation folding program memory discussed measurement brown al nelson automatic folding mechanism simple design demand paging unit built ibm research center belady nelson neil permitting quality compared folding discussed shown care unit performs satisfactorily condition tested operating memory storage interface large speed difference disadvantage prefolding required folding examined number important trouble beset computing today shown arise aggravated source concluded folding mechanism normal part computing system | sayre, d. .k paging, automatic paging, demand paging, folding, automatic folding, storage hierarchies, memory  hierarchies, replacement algorithms, performance, measurement .c 4.0 4.19 4.39 6.20 6.34
1811 | case study programming parallel processor | affirmative partial answer provided question program parallel processor computing system efficiently decrease execution time problem parallel processor system multiprocessor system processor simultaneously execute separate task single job cooperating decrease solution time computational problem processor independent instruction counter meaning processor executes task program independently processor communication cooperating processor mean data storage shared processor program determination distribution electrical network written parallel processor computing system execution program simulated data gathered simulation run demonstrate efficient solution problem typical large class important problem shown proper programming solution time processor applied approach time solution time single processor improper programming actually lead increase solution time number processor stability method solution investigated | rosenfeld, j. l. .k parallel-processor, parallelism, parallel programming, multiprocessor, multiprogramming, tasking,  storage interference, electrical network, simulation, relaxation, jacobi, gauss-seidel, convergence .c 3.24 4.9 5.14 5.17 6.21
1812 | fortran random number generator | grosenbaugh, l. r. .k random number generation, monte carlo, simulation .c 5.5
1813 | generation permutation pseudo lexicographic order algorithm g6 | ord-smith, r. j. .k permutations, lexicographic order, lexicographic generation, permutation generation .c 5.39
1814 | direct search algorithm e4 | smith, l. b. .k function minimization, search, direct search .c 5.19
1815 | direct search algorithm e4 | tomlin, f. k. smith, l. b. .k function minimization, search direct search .c 5.19
1816 | generalized square fit orthogonal polynomial algorithm e2 | watson, w. t. .k least squares, curve fitting, orthogonal polynomials, three-term recurrence, polynomial regression,  approximation, forsythe's method .c 5.13 5.5
1817 | computation fourier coefficient algorithm c6 | hall, g. ray, v. a. .k numerical integration, fourier coefficients, filon's method .c 5.16
1818 | legendre function kind real imaginary argument algorithm s16 | cobb, s. m. .k legendre function, associated legendre function, real or imaginary arguments .c 5.12
1819 | complex error function algorithm s15 | gautschi, w. .k error function for complex argument, voigt function, laplace continued fraction, gauss-hermite  quadrature, recursive computation .c 5.12
1820 | generation random permutation algorithm g6 | robson, j. m. .k permutation, random permutation, transposition .c 5.5
1821 | permanent function square matrix ii algorithm g6 | shriver, b. eberlein, p. j. dixon, r. d. .k matrix, permanent, determinant .c 5.30
1822 | shortest path forest topological ordering algorithm | dial, r. b. .k shortest path, tree, network, directed graph .c 5.32 5.42
1823 | factorial analysis variance algorithm g1 | howell, j. r. .k factorial variance analysis, variance, statistical analysis .c 5.5
1824 | aparel parse request language | aparel language extension algorithmic language pl pattern matching capability found special purpose language snobol4 tmg capability provided parse request stated bnf format parse request form programming language special sequencing rule successfully completing parse request piece pl code executed code normal pl string piece level parse normal pl variable information concerning alternative successful convenient facility multiple input output stream initiation sequence parse request subroutine parse time semantic check included aparel proven convenient building powerful syntax function macro system algebraic language preprocessor debugging system line command parser translator dataless programming general string manipulator | balzer, r. m. farber, d. j. .k text processing, string processing, symbol manipulation, pl/i, bnf, syntax, parser, translator,  pattern matching .c 4.12 4.13 4.20 4.22 4.29
1825 | practical method constructing lr processor | practical method constructing lr processor developed processor capable recognizing parsing input single backup scan number step equal length input number step derivation technique presented based original method knuth decrease effort required construct processor size processor produced procedure involves partitioning grammar number smaller part lr processor constructed part knuth algorithm condition relating individual processor satisfied lr processor entire grammar constructed procedure lr parser algol obtained | korenjak, a. j. .k lr(k) grammar, syntactic analysis, parser, deterministic language, syntax-directed compiler, language processor, context-free language algol .c 4.12 5.2 5.23
1826 | lisp garbage collector virtual memory computer system | paper garbage collection algorithm list processing system operate large virtual memory object algorithm compaction active storage discovery free storage free storage exhausted decision garbage collect easily made criterion decision discussed | fenichel, r. r. yochelson, j. c. .k garbage-collector, virtual memory, list-processing, storage-allocation .c 4.19 4.49
1827 | performance monitoring time sharing system | software measurement facility part general purpose time sharing system date collection facility dcf implemented michigan terminal system mt system model exists purpose monitoring operating system user program behavior performance structure mt outlined order explain implementation dcf event system identified recorded supervisor dumped magnetic tape auxiliary program line processing event user program unrelated system action recorded supervisor call time occurrence event accurately recorded data item identified job type overhead data collection interference normal job carefully analyzed shown minimal example information obtained facility application general guideline offered construction future monitoring program | pinkerton, t. b. .k performance monitoring, performance measurement, program behavior, performance data, multiprogramming  performance, software measurement, time-sharing performance, system evaluation, software monitor, software  instrumentation .c 4.31 4.32 4.39 4.42 4.43
1828 | synchronization parallel accessed data base | problem considered data base manipulated simultaneously process rule synchronization maximize amount parallel activity allowed assumed data base represented graph data base hierarchy directory line system method synchronization process examined validity discussed performance compared | shoshani, a. bernstein, a. j. .k parallel accessing, parallel search, file search, data base, synchronization, locking, deadlock .c 3.73 3.74 4.32
1829 | interactive graphical display monitor batch processing environment remote entry | graphic monitor program developed carnegie mellon university cdc g21 computer general purpose batch processing system remote entry existing g21 system graphic hardware graphic monitor resident auxiliary monitor comprehensive managerial capability graphical system response command human user respond command user program similar interface routine call take place action human program interact symmetrical equal basis medium graphic monitor choice made designing graphic monitor constraint existing hardware computer system discussed structure monitor program human program interface transient swapping version small resident part provision swapped submonitors | bond, a. h. rightnour, j. .k graphic monitor, man/machine interaction, graphic interface, graphic in batch environment, design  of graphical system .c 4.30 4.31 4.39 4.41
1830 | retrieval time packed direct access inverted | bayes, a. j. .k information retrieval, direct access memory, data base, inverted list .c 3.70 4.41
1831 | comment optimal tree structure | stanfel, l. e. .k information retrieval, file searching, tree structures, double chaining .c 3.70 3.73 3.74
1832 | minimax logarithmic error | dunham, c. b. .k logarithmic error, transformed rational approximation, square root .c 5.10
1833 | ambiguity description algol | herriot, j. g. .k ising problem, zero-one sequences .c 5.39
1834 | axiomatic basis computer programming | paper attempt made explore logical foundation computer programming technique applied study geometry later extended branch mathematics involves elucidation set axiom rule inference proof property computer program example axiom rule formal proof simple theorem displayed finally argued important advantage theoretical practical follow pursuance topic | hoare, c. a. r. .k axiomatic method, theory of programming, proofs of programs, formal language definition, programming  language design, machine-independent programming, program documentation .c 4.0 4.21 4.22 5.20 5.21 5.23 5.24
1835 | iitran programming language | iitran language developed student important important feature iitran procedure oriented language level block structure variety data type powerful feature included discussion design principle student language | dewar, r. b. k. hochsprung, r. r. .k languages programming languages, student programming systems, language design, high school programs,  college courses .c 1.51 1.52 4.12 4.22
1836 | method determining linear precedence function precedence grammar | precedence relation precedence grammar precisely dimensional precedence matrix information matrix represented concisely pair vector called linear precedence function algorithm presented obtaining linear precedence function precedence matrix algorithm shown posse computational advantage | bell, j. r. .k boolean matrices, syntax, precedence grammar context-free parsing, transition matrix, precedence  functions  .c 4.12
1837 | algol convolution procedure based fast fourier transform algorithm c6 | singleton, r. c. .k fast fourier transform, complex fourier transform, multivariate fourier transform, fourier series,  harmonic analysis, spectral analysis, orthogonal polynomials, orthogonal transformation, convolution,  auto covariance, autocorrelation, cross-correlation, digital filtering, permutation .c 3.15 3.83 5.12 5.14
1838 | normal curve integral algorithm s15 | adams, a. g. .k normal curve integral, probability, special functions .c 5.5 5.12
1839 | singular decomposition complex matrix algorithm f1 | businger, p. a. goulub, g. h. .k singular values, matrix decomposition, least squares solution, pseudoinverse .c 5.14
1840 | efficient prime number generator algorithm a1 | singleton, r. c. .k prime numbers, factoring, number theory .c 3.15 5.30
1841 | prime number generator treesort principle algorithm a1 | singleton, r. c. .k prime numbers, number theory, sorting .c 3.15 5.30 5.31
1842 | algorithm generating ising configuration algorithm | simoes, j. m. s. .k ising problem, zero-one sequences .c 5.39
1843 | choice base | digital computer considered memory word composed state device sign bit state device choice base internal representation floating point number computer discussed shown sense | brown, w. s. richman, p. l. .k floating-point, accuracy, base choice, number representations .c 5.11 6.32
1844 | modular computer sharing system | alternative approach design organization general purpose interactive multiterminal computing system presented system organization conceptually simple arrangement bank interchangeable computer memory processor pair assigned process terminal job arrive computer serf master control computer supervises collection distribution message remote terminal simplest form disk drive connected terminal crosspoint switching network disk drive connected computer active terminal user occupies dedicated disk drive share computer terminal user simple manner ratio user computer dependent size power machine computation requirement mix user system organization inherently simpler reliable approach time sharing computer potential highly system low cost economic configuration range system size span order magnitude finally problem program developed remote terminal user run dedicated batch system compatible computer | baskin, h. b. horowitz, e. b. tennison, r. d. rittenhouse, l. e. .k multiple terminal systems, terminal oriented systems, multiple processor systems, high availability,  conversational systems, general purpose time-sharing systems, real-time response system, modular constructed  systems, modular computer-sharing systems, graphics, file switch, intercomputer communications, control  computer, problem computer, roll-in, roll-out .c 6.21
1845 | loader standardization overlay program | overlay capability generation computer system cdc ge ibm univac critique system based actual experience large overlaid trajectory simulation program short history description program presented standardization minimum capability loader recommended program operate computer system easily converted maintained proposal overlay software incorporates memory occupation specification concept conditional tree structure delineated concept efficient cost effective utilization memory increased flexibility program structure | lanzano, b. c. .k loader, overlay, partition, region, segmentation, linkage, linkage editor, standardization, memory  utilization, memory occupation, tree structure, cdc-6000, ge-635, ibm-360, univac-1108 .c 4.10 4.12 4.19 4.40
1846 | simulating network parallel process simultaneous event occur | problem simulating discrete event system computer system conventional digital computer dealt system assumed network interconnected sequential process briefly reviewed common technique handle simulation simultaneous event occur handled simple priority rule problem dealing simultaneous event separate process introduced abstraction problem developed admits solution majority commonly encountered problem technique find method simulating parallel event report found case shown find solution extending information solution technique case technique computationally unfeasible additional information provided | parnas, d. l. .k simulation, parallel processes, simultaneous events, picture processing, computer system simulation .c 3.19 3.24 4.24 5.9 6.9
1847 | algorithm finding fundamental set cycle graph | fast method presented finding fundamental set cycle undirected finite graph spanning tree grown vertex examined turn unexamined vertex stored pushdown list await examination stage process take top element pushdown list examine inspect edge graph examined tree fundamental cycle added edge tree exactly stage vertex graph large store required crease time depends type graph involved bounded shown bound attained term storage algorithm similar gotlieb corneil superior welch term speed similar welch superior gotlieb corneil testsshow algorithm remarkably efficient random graph | paton, k. .k fundamental cycle set, graph, algorithm, cycle, spanning tree .c 5.32
1848 | damped taylor series method minimizing sum square solving system nonlinear equation algorithm e4 c5 | silverman, g. .k solution of equations, least squares approximation, newton's method .c 5.13 5.14 5.15
1849 | function minimization algorithm e4 | hamilton, p. a. boothroyd, j. .k function minimization .c 5.19
1850 | generation permutation lexicographic order algorithm g6 | leitch, i. m. .k permutations, direct lexicographic order, reverse lexicographic order, lexicographic generation .c 5.39
1851 | generator spanning tree algorithm | mcilroy, m. d. .k spanning trees, trees, graphs .c 5.32
1852 | base mobile programming system | algorithm macro processor base implementation bootstrapping processor programming language algorithm easily implemented contemporary computing machine experience programming language implementation based algorithm language transferred machine man week machine | orgass, r. j. waite, w. m. .k bootstrapping, macro processing, machine independence, programming languages, implementation techniques .c 4.12 4.22
1853 | compact list representation definition garbage collection system implementation | compact list stored sequentially memory chained pointer convenient swym system permit list chained compact combination description list representation operator implemented similar lisp system garbage collector attempt make list compact relocates rearranges list storage temporary storage unique list compacting garbage collection algorithm presented detail class macro implement system finally consideration design factor essential success plex processing system implementation | hansen, w. j. .k data structure, data representation, list structure, list representation, list, compact list, garbage  collection, relocation, storage reclamation, macro, primitive list operations, plex processing, plex,  pointer, list processing system, lisp, free storage .c 3.49 4.20 4.22 4.49 4.9
1854 | multiprogramming machine coding computer organization | author feel interrupt feature modern computer potent source programming pitfall error heavily contribute unreliability program making programming scheme presented avoids concept interrupt permit specification concurrent pseudoconcurrent activity supposedly perspicuous manner intended serve basis construction operating system prime example program concurrent activity scheme includes set basic instruction generation termination synchronization parallel process set routine representing instruction simulating hypothetical machine organization implemented test ibm system program instruction written pl360 presented | wirth, n. .k multiprogramming, parallelism, interrupt, input-output, computer organization, file handling, pl360 .c 4.21 4.22 4.32 4.41 6.21
1855 | program syntactic analysis english sentence | program produce syntactic analysis english sentence respect transformational grammar main feature analyzer limited dictionary english word pursues analysis path simultaneously processing sentence left form representation dictionary grammar outline account analysis procedure technique keeping size analysis record reasonable limit avoiding need dynamic application transformational rule number example output produced program output includes timing information | dewar, h. bratley, p. .k syntactic analysis, language processing, language analysis, parsing, analysis procedure, recognition  procedure, english sentences, linguistics, psycholinguistics, transformational grammar, limited dictionary,  predictive analysis .c 3.42 3.36
1856 | teachable language comprehender simulation program theory language | teachable language comprehender tlc program designed capable taught comprehend english text text program seen input comprehends text correctly relating explicit implicit assertion text large memory memory semantic network representing factual assertion world program creates copy part memory found relate text adapting combining copy represent meaning text mean meaning text program successfully comprehends encoded format memory form added memory factual assertion memory capability correctly relating text memory prior content taught program needed tlc presently small number example assertion capability system notation expressing provided program corresponds general process comprehending language methodology adding additional information process requires actually comprehend text kind memory structure comprehension process tlc allow factual assertion capability relating text stored assertion generalize assertion capability put system help comprehend great sentence future addition single factual assertion linguistic capability provide large increment tlc effective knowledge world ability comprehend text program strategy presented general theory language comprehension | quillian, m. r. .k natural language processing, natural language comprehension, teachable computer program, psychological  simulation, human memory simulation, computer linguistics, linguistic performance theory .c 3.36 3.42 3.62 3.65 3.74
1857 | filon quadrature algorithm d1 | chase, s. m. fosdick, l. d. .k quadrature, filon quadrature, integration, filon integration, fourier coefficients, fourier series .c 5.16
1858 | algorithm filon quadrature | algorithm filon quadrature considerable attention devoted analysis round truncation error algorithm includes automatic error control feature | chase, s. m. fosdick, l. d. .k quadrature, filon quadrature, integration, filon integration, fourier coefficients, fourier series .c 5.16
1859 | error bound periodic quintic spline | explicit error bound periodic quintic spline interpolation developed derivative periodic spline shown sixth fourth order approximation mesh point derivative function interpolated | hall, c. a. .k spline, interpolation, error bounds .c 5.1 5.13
1860 | algol based associative language | high level programming language large complex associative structure designed implemented underlying data structure implemented hash coding technique discussion includes comparison work example application language | feldman, j. a. .k algol, associative, programming language, data structure .c 4.22
1861 | mad definition facility | definition facility higher level language user language define operator data type mad language appears predefined information writes definition motivation form definition written conclusion drawn future definitional facility | arden, b. w. galler, b. a. graham, r. m. .k mad, definitions, operators, macros, higher level language .c 4.12 4.22
1862 | computing capability argentine chilean university | author report trip university argentina chile november describing university condition computing activity university experiencing student discontent status quo solution attempting contrast argentina excluding student participating university government chile allowing participation university computing service academic activity limited number computer small capacity larger ibm exception computing science academic program rare situation mean attributable responsible computing development strive excellence system hard come university especially strong european tradition adapt slowly academic resource discipline superimposed severe technological economic constraint developing nation absence conscious government emphasis strengthening computing capability future progress retarded | finerman, a. .k university education, computing science academic programs, university computing centers, surveys  of computing centers, university computing capabilities, university-student relationship, argentine universities,  chilean universities, south american universities, developing nations .c 1.52 2.0 2.45
1863 | minit algorithm linear programming algorithm | messham, d. k. .k linear programming, dual simplex method, primal problem, dual problem .c 5.41
1864 | generation hilbert derived test matrix algorithm f1 | boothroyd, j. .k test matrix, hilbert matrix .c 5.14
1865 | algol reference language editor algorithm r2 | sauer, g. .k symbol manipulation .c 4.49
1866 | characteristic value solution mathieu differential equation algorithm s22 | clemm, d. s. .k mathieu's differential equation, mathieu function, characteristic value, periodic solution, radial  solution .c 5.12
1867 | expected length sequence generated sorting replacement selecting | replacement selecting technique sorting interested ratio expected length th sequence generated technique number memory cell complex variable theory shown asymptotically average interval sign | hooker, w. w. .k replacement selecting, sorting, sequence lengths, asymptotic expected length, recursion relation,  generating function, meromorphic function .c 3.74 5.31
1868 | obtaining correct input approach | information put machine readable form scientific business origin keypunched paper addressed difficulty obtaining correctly keypunched key verified data alternative method suggested computer rule possibility error input technique explained illustrated reference working program involves essentially phase phase error detected machine subsequently phase corrected | kennedy, m. .k correct data, correct input, data correction, keypunch, key verifier, verifier .c 2.40 2.42 2.43 3.10 3.20 3.50 4.41
1869 | block structure indirect addressing garbage collection | programming language included explicit implicit block structure provide naming convenience programmer indirect addressing snobol naming constraint introduced modification snobol resulting desirable consequence naming constraint disappear indirect addressing function definition significant saving number call garbage collector garbage collected expense time function calling program modification implemented extension snobol dialect | kain, r. y. .k block structures, indirect addressing, garbage collection, local names, snobol .c 4.22
1870 | technique pseudorandom number computer simulation | algorithm uniform pseudorandom integer construct binary number probability bit word bit assume desired parameter technique making number simulation programming | donnelly, t. .k random numbers,  simulation, boolean algebra, bit manipulation .c 5.19 5.39
1871 | automatic contour map | method contour mapping mean digital plotter discussed method presented simple implemented program small number instruction fortran iv instruction required comparison method proposed author performed fortran iv program implementing proposed method istituto di elettrotecnica ed elettronica politencnico di milano | cottafava, g. lemoli, g. .k contour map, level lines, digital plotting, function scanning .c 3.10 3.13 3.14 3.16 3.20 3.24
1872 | chebyshev interpolation quadrature formula high degree erratum | salzer, h. e.
1873 | accelerating lp algorithm | shown method computing related product accelerate pricing phase lp algorithm lp application | fox, b. l. .k linear programming, revised simplex method, multiple pricing, inner product .c 5.19 5.41
1874 | generating pseudorandom number complement machine ibm | familiar multiplicative congruential generator examined context type complement arithmetic ibm series sequence residue considered relationship established shown sequence positive negative residue produced simply economically conventional approach period loss desirable statistical property easily generated sequence involving absolute value shown period attractive statistical property statistical property sequence related previously established criterion | hemmerle, w. j. .k random number, uniform distribution, pseudo-random number, random number generator, multiplicative  congruential generator, power residue, two's complement arithmetic, ibm 360 arithmetic .c 3.15 5.5 6.32
1875 | polynomial spline approximation quadratic programming | problem approximation function fitting set data approximating function required derivation sign range approximation studied approach presented quadratic programming provide constraint derivative selection function yield fit modified bernstein polynomial scheme spline fit | amos, d. e. slater, m. l. .k constant sign derivatives, bernstein polynomials, linear concavity constraints, quadratic programming  splines .c 5.13 5.41
1876 | generation test matrix sign pattern prescribed positive spectrum | class orthogonal transformation presented member transform positive diagonal matrix matrix special sign pattern | schneider, a. j. .k test matrices, positive matrices, sign patterns, orthogonal transformations, positive eigenvalues .c 5.1 5.14
1877 | prevention system deadlock | known problem design operating system selection resource allocation policy prevent deadlock deadlock situation resource allocated task task continue published solution restrictive handle problem sufficient generality suggest policy occasion refuse request safely granted algorithm presented examine request light allocation resource determine granting request introduce possibility deadlock proof appendix show condition imposed algorithm sufficient prevent deadlock algorithm successfully system | habermann, a. n. .k multiprogramming, time-sharing, scheduling, resource allocation .c 3.72 4.32 6.20
1878 | recovery reentrant list structure slip | consequence reference count based space recovery system employed slip reentrant list structure recovered explicitly erased lisp garbage collection scheme free impediment depend able find mark node reachable program variable tracing descendant program variable identified collected list creating function list slip amended mark list programmer wish assume responsibility modification lisp garbage collector recovers abandoned reentrant list structure appended slip system | weizenbaum, j. .k list processing, slip, garbage-collection .c 4.22 4.40
1879 | note storage fragmentation program segmentation | main purpose paper presentation result series simulation experiment investigating phenomenon storage fragmentation type storage fragmentation distinguished external fragmentation loss storage utilization caused inability make storage fragmented large number separate block internal fragmentation loss utilization caused rounding request storage allocating exact number word required striking result apparently general rule rounding request storage reduce number size block coexisting storage loss storage increased internal fragmentation saved decreased external fragmentation method segment allocation accompanying technique segment addressing take advantage result evidence presented advantage method conventional paging technique | randell, b. .k storage allocation, storage fragmentation, paging, segmentation, addressing .c 6.2 6.20
1880 | chebyshev solution overdetermined linear system algorithm f4 | golub, g. h. .k chebyshev solutions, over-determined linear systems, linear equations, exchange algorithm  .c 5.13 5.14 5.41
1881 | transpose vector stored array algorithm k2 | macleod, i. d. g. .k matrix transposition, array transposition, vector stored array .c 5.39
1882 | determination square root positive definite matrix algorithm f1 | duke, b. j. .k matrix, symmetric matrix, positive definite matrix, matrix square root .c 5.14
1883 | modified romberg quadrature algorithm d1 | fair weather, g. .k numerical integration, romberg quadrature, trapezoid values, rectangle values, error bound .c 5.16
1884 | anomaly space time characteristic program running paging machine | running time program paging machine generally increase store program constrained run decrease experiment revealed case reverse true decrease size store accompanied decrease running time informal discussion anomalous behavior case fifo replacement algorithm formal treatment presented | belady, l. a. nelson, r. a. shedler, g. s. .k paging machines, demand paging, replacement algorithm .c 4.30
1885 | computer system transformational grammar | comprehensive system transformational grammar designed implemented ibm computer system deal transformational model syntax line chomsky aspect theory syntax major innovation include full formal description syntax transformational grammar directed random phrase structure generator lexical insertion algorithm extended definition analysis simple problem oriented programming language algorithm application transformation expressed paper present system discussing general attitude underlying development system outlining system discussing important special feature reference paper consider aspect system detail | friedman, j. .k transformational grammar, natural language syntax, language processing, language analysis, sentence  generation, lexical insertion, computational linguistics, syntax .c 3.42
1886 | generation optimal code expression factorization | set expression compiled method presented increasing efficiency object code produced factoring expression finding set subexpressions occurs expression subexpressions factor ascertained sequencing procedure applied order factor expression information computed correct sequence factor need retained memory minimal amount time assignment algorithm executed order minimize total number temporary storage cell required hold result evaluating factor order make technique computationally feasible heuristic procedure applied global optimal result necessarily generated factorization algorithm applicable problem factoring boolean switching expression factoring polynomial encountered symbol manipulating system | breuer, m. a. .k factorization algorithms, code optimization, sequencing of operations, detection of common subexpressions,  factorization of boolean expressions .c 4.12 6.1
1887 | recursive relation determinant pentadiagonal matrix | recursive relation relating leading principal minor developed determinant pentadiagonal matrix numerical included calculating eigenvalue | sweet, r. a. .k pentadiagonal matrix, quindiagonal matrix, quindiagonal matrix, band matrix, determinant, characteristic  polynomial, eigenvalues .c 5.14
1888 | spline function method nonlinear boundary problem | solution nonlinear differential equation point boundary condition approximated quintic cubic spline function method suited nonuniform mesh size dynamic mesh size allocation uniform mesh size error quintic spline typical error numerov method requiring differential equation satisfied mesh point result set difference equation block tridiagonal easily solved relaxation standard method | blue, j. l. .k boundary value problems, differential equations, finite differences, functional approximation,  iterative methods, nonlinear equations, spline functions .c 5.13 5.15 5.17
1889 | introducing computing smaller college university progress report | technical mean routine computer service smaller college university provided remote terminal central facility access effective organizational educational methodology introducing computing institution developed experience year statewide network involving institution discussed lesson include importance separate organization representing small college necessity campus training institution need special programming documentation support user development curriculum evolutionary mean | parker jr., l. t. gallie, t. m. brooks jr., f. p. ferrel, j. k. .k regional network, introducing computing, under-graduate education, instructional usage, academic  applications, curriculum development, orientation project, regional center, consortium, remote computing .c 1.50 1.52 1.59 2.49
1890 | simulation traffic flow network | computer simulation program deal traffic flow network large area road segmented block ten meter length represented bidirectional list computer memory movement car transfer car block expressed proper formula formula based supposition speed car block determined density car block speed versus density curve empirically numerical value simulation scheme excellent point make trace dynamic behavior traffic flow variety situation example actual area city kyoto japan | sakai, t. nagao, m. .k traffic simulation, traffic flow, traffic network traffic control, traffic density, intersection,  signal setting, vehicle, road network, list structure, computer simulation .c 3.57 3.23
1891 | dimensional computer display | stereographic display terminal produced raster display brad recently developed brookhaven system rotating refresh memory feed standard television monitor produce stereographic display computer calculates projected video image object viewed separate point resulting video map stored separate refresh band rotating memory output signal connected separate color gun color television monitor creating superimposed image screen optical separation achieved viewing image color filter display interactive viewed large group people time | ophir, d. shepherd, b. j. spinrad, r. j. .k computer graphics, three-dimensional display, swept raster display, interactive stereographic terminal,  video map, color separation .c 2.0 4.49 6.35
1892 | degree multiprogramming page demand system | simple stochastic model offer base understanding relationship number program permitted share memory degree multiprogramming drum traffic rate central processing unit utilization page demand multiprogrammed time shared computer system model preserve key feature property page demand statistic implies burst page demand beginning job quantum execution model markov chain analyzed numerically result presented graphically wide range key environment descriptive parameter implication result time shared system design programming discussed calculation optimal degree multiprogramming wide range parameter presented graphically | wallace, v. l. mason, d. l. .k page-on-demand, demand paging, time-sharing multiprogramming, markovian computer models, scheduling  strategies, operating systems, memory management .c 2.44 4.32 4.39 6.20 6.21
1893 | root polynomial root squaring resultant routine algorithm c2 | noltemeier, a. .k root finders, roots of polynomial equations, polynomial zeros, root-squaring operations, graeffe  method, resultant procedure, subresultant procedure, testing of roots, acceptance criteria .c 5.15
1894 | normal random deviate algorithm g5 | knop, r. .k normal deviates, normal distribution, random number, random number generator, simulation, probability  distribution, frequency distribution, random .c 5.13 5.5
1895 | gaussian quadrature formula algorithm d1 | hill, i. d. .k quadrature, gaussian quadrature, numerical integration, weight function, orthogonal polynomials .c 5.16
1896 | regular coulomb wave function algorithm s22 | gautschi, w. .k coulomb wave functions, wave functions, regular coulomb wave functions .c 5.12
1897 | coulomb wave function algorithm s22 | kolbig, k. s. .k coulomb wave functions, wave functions .c 5.12
1898 | regular coulomb wave function algorithm s22 | kolbig, k. s. .k coulomb wave functions, wave functions, regular coulomb wave functions .c 5.12
1899 | simplex method procedure employing lu decomposition algorithm | bartels, r. h. golub, g. h. .k simplex method, linear programming, lu decomposition, round-off errors, computational stability .c 5.41
1900 | clarification fortran standard initial progress | in 1966 after four years of effort, fortran became the first programming language standardized  in the united states.  since that initial achievement, study and application of the standard specifications  have revealed the need for maintenance of the standards.  as the result of work initiated in 1967, an  initial set of clarifying interpretations has been prepared.  the nature of the maintenance, corrections  to the standard specifications, and completed interpretations are reported.
1901 | dynamic space sharing computer system | formalization relationship space shading program behavior processor efficiency computer system presented concept cost space allocation task defined cost combined develop single parameter termed unit cost intent illustrate analytic approach investigation problem space sharing demonstrate method sample problem | belady, l. a. kuehner, c. j. .k space-sharing, storage allocation, memory allocation, storage management, memory management, program  behavior, multiprogramming, computer system design, allocation strategies, replacement strategies, demand-paging,  time-sharing .c 4.32 6.2 6.20
1902 | automatic grading scheme simple programming exercise | discussion alteration made typical university operating system record result programming exercise language including assembly language computer controlled grading scheme provision made testing programmer supplied data final run system supplied data exercise run scheme mixed program special recognition exercise operator | hext, j. b. winings, j. w. .k automatic grading program, programming exercises .c 1.5 2.43 4.39
1903 | chebyshev interpolation quadrature formula high degree | salzer, h. e. .k chebyshev polynomials, chebyshev interpolation, chebyshev quadrature, chebyshev points, chebyshev  zeros, interpolation, quadrature, definite integrals .c 5.13 5.16
1904 | rough ready error estimate gaussian integration analytic function | rabinowitz, p. .k numerical integration, analytic functions, error estimates, gaussian integration, tabulated error  coefficients, computable error coefficients, cauchy integral formula, chebyshev polynomials .c 5.11 5.16
1905 | simplex method linear programming lu decomposition | standard computer implementation dantzig simplex method linear programming based forming inverse basic matrix updating inverse step method implementation bad round error property paper theoretical background implementation based lu decomposition computed row interchange basic matrix implementation slow good round error behavior implementation appears cacm algorithm | bartels, r. h. goulub, g. h. .k simplex method, linear programming, lu decomposition, round-off errors, computational stability .c 5.41
1906 | automated printed circuit routing stepping aperture | computer program routing interconnection sided printed circuit board regular pattern line pin terminal vias feed hole program interconnection planned routing typically upper pin horizontally lower pin top virtual aperture long horizontal slit stepped board planned routing basis rerouting interconnection aperture resolve conflict line vias aperture maximize effective line usage conflict resolved aperture arrives lower pin interconnection deleted resolve conflict extension technique control crosstalk routed interconnection problem obtaining percent interconnect discussed | lass, s.e. .k routing, printed circuit, interconnections, aperture, stepping aperture, computer program, circuit  board, lines, vias, pins .c 3.24 6.30
1907 | note reliable full duplex transmission half duplex link | simple procedure achieving reliable full duplex transmission half duplex link proposed scheme compared type recently literature finally comment made group related transmission procedure shown unreliable circumstance | bartlett, k. a. scantlebury, r. a. .k data transmission, error correction, full-duplex, half-duplex, transmission control, communications .c 3.81
1908 | time sharing batch processing experimental comparison value problem solving situation | experimental comparison problem solving time sharing batch processing computer system conducted mit paper study known attempt evaluate system predominant user population decade professional nonprogrammers computer aid decision making problem solving programming end statistically logically significant result equal cost usage computer system higher level performance attained time sharing user indication significantly lower cost resulted time sharing user stopped work reached performance level equal batch user user speed problem solving attitude made time sharing favorable system | gold, m. m. .k time-sharing vs batch-processing, user performance, man/machine communications, cost effectiveness,  on-line vs off-line performance, decision-making performance, user/programmer behavior, programming experimental  empirical studies, problem-solving, research in man/machine communications, man/machine symbiosis .c 2.11 2.40 3.36 3.51 3.80
1909 | computation jn numerical integration | shown practical compute jn numerical integration integral representation trapezoidal rule error approximation studied empirically | stroud, a. h. kohli, j. p. .k bessel function, numerical integration, trapezoidal rule .c 5.11 5.12 5.16
1910 | algorithm solving special class tridiagonal system linear equation | algorithm presented solving system linear equation bu tridiagonal special form shown algorithm fast gaussian elimination method suggested solving system addition explicit formula inverse determinant matrix | rose, d. j. .k tridiagonal, gaussian elimination, central difference .c 5.14 5.17
1911 | coordination reduction sentence analysis | class coordination phenomenon natural language considered frame work transformational theory account phenomenon proposed machinery added syntactic component transformational grammar machinery includes rule schema condition applied condition determining sequence subtrees performed solution syntactic analysis problem class grammar outlined precise specification generative procedure paper inverse form lisp function definition | petrick, s. r. postal, p. m. rosenbaum, p. s. .k natural languages, generative grammar, transformational theory, syntax, coordination, sentence  coordination, sentence coordination, coordination reduction, syntactic analysis, grammar testing program,  rule testing .c 3.42
1912 | simulation outpatient appointment system | experimental computer program simulates appointment system employed outpatient department hospital major kind appointment system individual block simulated purpose simulator enable user evaluate effectiveness alternative appointment system clinical environment | katz, j. h. .k simulation, scheduling, appointment system, outpatient department, medicine, health, management science, operations research .c 3.34 3.59
1913 | polygamma function arbitrary precision algorithm s14 | schwachheim, g. .k polygamma function, psi function, digamma function, trigamma function, tetragamma function, pentagamma  function, special functions .c 5.12
1914 | matrix scaling integer programming algorithm f1 | klimpel, r. r. .k integer programming, linear algebra, mathematical programming, matrix condition, matrix scaling .c 5.14 5.41
1915 | algorithm hidden line elimination | algorithm presented elimination hidden line representation perspective view concave convex plane faced object picture plane edge object considered sequentially plane hide point edge found computing time increase roughly square number edge algorithm take advantage reduced number concave point recognizes object concave point considered case result obtained simpler | galimberti, r. montanari, u. .k hidden line elimination, back line recognition, three-dimensional representation, plane-faced objects,  perspective view, machine rendering of solids, automatic drawing, displaying techniques, computer graphics,  man/machine interaction, man/machine communication, computer-aided design .c 4.40 4.41 4.49
1916 | analysis boolean program model time shared paged environment | directed graph matrix frequently represent logical structure sequence computer instruction technique addition data reference represented nondirected model complete structural specification program represented combined model transformation combined model yield model additional timing information contained analysis model prior execution yield information valuable determining segmentation instruction data time shared environment initial page loading execution analysis look ahead control page turning | lowe, t. c. .k time-sharing, paging, segmentation, executive, compiler, monitor, program model .c 4.39 6.21
1917 | algol procedure fast fourier transform arbitrary factor algorithm c6 | singleton, r. c. .k fast fourier transform, complex fourier transform, multivariate fourier transform, fourier series,  harmonic analysis, spectral analysis, orthogonal polynomials, orthogonal transformation, virtual core  memory, permutation .c 3.15 3.83 5.12 5.14
1918 | distribution indistinguishable object distinguishable slot algorithm g6 | gray, m.
1919 | efficient algorithm sorting minimal storage algorithm m1 | singleton, r. c. .k sorting, minimal storage sorting, digital computer sorting .c 5.31
1920 | test probability algorithm s14 | morris, j. .k f-test, snedecor f-statistic, fisher test, distribution function .c 5.5
1921 | algol convolution procedure based fast fourier transform algorithm c6 | singleton, r. c. .k fast fourier transform, complex fourier transform, multivariate fourier transform, fourier series,  harmonic analysis, spectral analysis, orthogonal polynomials, orthogonal transformation, convolution,  auto covariance, autocorrelation, cross-correlation, digital filtering, permutation .c 3.5 3.83 5.12 5.14
1922 | proposed usa standard data communication control procedure usa standarad code information interchange
1923 | pseudofiles | approach system interface high level language basic input output support facility shown technique provide potentially inexpensive method program communicate deeply embedded facility command language processor | rosin, r. f. .k operating systems, interfaces input-output, high level languages, command language .c 4.22 4.30 4.31 4.41
1924 | organizing matrix matrix operation paged memory system | matrix representation operation examined purpose minimizing page faulting occurring paged memory system shown carefully designed matrix algorithm lead enormous saving number page fault occurring small part total matrix main memory time examination addition multiplication inversion algorithm show partitioned matrix representation submatrix partition page case induced fewer page fault row row representation number page pull required matrix manipulation algorithm studied function number page main memory algorithm | mckellar, a. c. coffman jr., e. g. .k matrix algorithms, array processing, paging algorithms, paged memory systems, virtual memory systems,  array storage allocation, storage allocation .c 4.12 4.39 5.14
1925 | concept contour map processing | generalized technique simplify solution problem relating contour map technique make topological property contour map topology represented graphical structure adjacent contour line connected node generalized technique consists utilizing geometrical property determine characteristic straight line drawn contour map technique applied problem locating ground track aircraft elevation reading obtained flight | morse, s. p. .k map, contour map, contour lines, topological properties, geometrical properties, graph of contour  map, navigation .c 3.1
1926 | description format text processing program | format production program facilitates editing printing finished document directly printer small 64k computer system feature good performance totally free form input flexible formatting capability including column page automatic capitalization aid index construction minimum nontext item written entirely fortran iv | berns, g. m. .k text processing, indexing, printing, documentation, text editing, formatting, frequency dictionary,  right justification, vocabulary .c 3.74 3.75 3.9
1927 | information science ph computer science program | report recommendation sample course curriculum general area information organization information system design ph computer science program subject area briefly listing desirable graduate level course suitable bibliography appended | salton, g. .k course curriculum, graduate courses, university courses,computer science curriculum, information  science, information organization, information retrieval, data retrieval, language analysis, information  processing .c 1.52 3.42 3.70
1928 | exclusive simulation activity digital network | technique simulating detailed logic network large active digital system essential objective sought improved ease economy model generation economy execution time space facility handling simultaneous activity main result obtained clear separation structural behavioral model description reduction task converting boolean logic structural model elimination process achieving exclusive simulation activity event scheduling technique deteriorate economy event queue grows length simulation procedure deal effectively mixture serial simultaneous activity passage time simulated precise quantitative fashion system simulated combination synchronous asynchronous logic aspect technique simulation network structure digital network | ulrich, e. g. .k simulation, logical simulation, digital simulation, large systems simulation, network structures,  scheduling, queuing, simultaneous activities, parallel events .c 4.22 4.29 6.9
1929 | image computer microfilm plotter | digital computer widely processing information data kind including pictorial information contained photograph graphical representation efficient conversion facility putting graphical information computer retrieving graphical form needed commonly employed device obtaining permanent graphical output digital computer microfilm plotter regrettably present model provision producing image continuous gray scale half tone note programming technique obtaining half tone picture microfilm plotter control digital computer illustrative example method | schroeder, m. r. .k computer images, half tone pictures, microfilm plotters; processing .c 3.10 3.15 3.24 4.49
1930 | extremely portable random number generator | extremely portable subroutine needed moderate quality efficiency suffice typically occurs library function random number generation core sorting entirely universal standardized literature random number generator algorithm meet requirement sort extremely portable line fortran program provided based important paper coveyou macpherson method fourier analysis applied probability function consecutive tuples provided generator equal small modulus maintain portability prevents quality generator high generator compare bound established mentioned paper | kruskal, j. b. .k random number generators, random numbers, random number analysis, random generators, linear sequential  generators, random number program, pseudo random numbers  .c 4.49 5.19 5.5
1931 | interval arithmetic determinant evaluation testing chebyshev system | recent paper hansen hansen smith shown interval arithmetic effectively bound error matrix computation present paper method proposed hasen smith compared straightforward determinant evaluation computational result show accuracy running time expected determinant evaluation application determinant program test set function form chebyshev system presented | smith, l. b. .k interval arithmetic, range arithmetic, error bounds, determinant evaluation, chebyshev system,  mathematical proof by computer .c 5.11 5.13 5.14
1932 | logarithmic error newton method square root | problem obtaining optimal starting value calculation square root newton method considered pointed relative error measure goodness fit optimal result obtained initial approximation fit shown called logarithmic error initial fit optimal type error logarithmic error appears simplify problem determining optimal initial approximation | king, r. f. phillips, d. l. .k square root, newton's method, relative error, logarithmic error, best fit, optimal approximation,  maximal error, recurrence relation, integer root, error curve .c 5.12 5.13
1933 | coding lehmer pseudo random number generator | algorithm coding technique presented quick evaluation lehmer pseudo random number generator modulo prime mersenne number produce number bit greater computer computation method extendible limited problem modular arithmetic prime factorization primitive root largest prime mersenne number construction pseudo random number generator increased cycle length | payne, w. h. rabung, j. r. bogyo, t. p. .k pseudo-random number, random number, modular arithmetic, uniform probability density, uniform frequency  function, simulation, prime factorization, primitive roots
1934 | arithmetic expression tree | description tree representing evaluation arithmetic expression drawn number accumulator needed computation represented straightforward manner representation reduces choice order computation specific problem theory graph algorithm solve problem presented | redziejowski, r. r. .k arithmetic expression, compiler design, graph theory, programming, storage minimization, topological  ordering,tree .c 4.12 5.32
1935 | randomized binary search technique | mathematical model developed mean variance number trial recover document randomly received list search method binary nature offer potential information retrieval system | arora, s. r. dent, w. t. .k binary pattern, file examination, graph theory, information retrieval, mathematical model, partitioning,  probabilistic method, random sequencing, search techniques, tree structures .c 3.74 5.32
1936 | variable length tree structure minimum average search time | sussenguth suggests paper organized doubly chained tree structure search update frequently structure compromise fast search slow update characteristic binary searching slow search fast update characteristic serial searching method limiting restriction terminal node lie level tree paper considers effect relaxing restriction tree property priori filial set node defined studied proved coding node filial set respect number terminal node reachable sufficient guarantee minimum average search time general case entire structure tree changeable treated procedure developed constructing tree minimum average search time simple closed expression minimum average search time obtained function number terminal node storage capacity required implement doubly chained tree structure digital computer determined finally total cost structure sussenguth cost criterion computed shown significant improvement average search time total cost obtained relaxing sussenguth restriction terminal node lie level tree | patt, y. n. .k information retrieval, file searching, tree structures, double chaining .c 3.70 3.73 3.74
1937 | coda data display system | coda customer oriented data system user oriented data retrieval display system command language system user easy mean data retrieval display request data displayed table graph produced format ready publication paper statement request language general system design | day, r. h. mansfield, m. k. ellis, m. e. .k data display, information retrieval, graphic display, command languages, report program generation,  management data processing .c 3.50 3.51 3.59 3.70 3.75 3.79 4.20 4.29
1938 | criterion time sharing system performance | time sharing system defined article multiaccess system permit terminal user utilize essentially full resource system sharing time terminal user terminal user ability utilize full resource system make quantitative evaluation time sharing system difficult criterion successfully perform level quantitative time sharing system performance evaluation | stimler, s. .k time-sharing performance criteria, time-sharing system operation, time-sharing performance analysis .c 2.40 4.30 4.32 6.20
1939 | directed random generation sentence | problem producing sentence transformational grammar random generator create phrase structure tree input lexical insertion transformational phase discussed purely random generator produce base tree blocked transformation frequently long practical interest solution offered form computer program user constrain direct generation simple powerful device restricted subtrees program directed random generator accepts input subtree restriction produce tree satisfies restriction ready phase grammar underlying linguistic model noam chomsky presented aspect theory syntax program written fortran iv ibm part unified computer system transformational grammar partial grammar english | friedman, j. .k transformational grammar, natural language syntax, language processing, sentence generation, computational  linguistics, syntax .c 3.42
1940 | calculation polynomial derivative value horner scheme algorithm c1 | smith, o. k. .k function, evaluation, polynomial evaluation, algol procedure, horner's scheme .c 4.22 5.12
1941 | distribution algorithm s14 | field, j. b. f. .k fisher's f-distribution, students's t-distribution .c 5.5
1942 | finding solution functional equation unknown algorithm c5 | vandergraft, j. mesztenyi, c. .k functional equations, interpolation, nonlinear equations, secant method .c 5.13 5.15
1943 | complete elliptic integral algorithm s21 | farkas, i. .k special functions, complete elliptic integral of the first kind, complete elliptic integral of  the second kind .c 5.12
1944 | student distribution algorithm s14 | levine, d. a. .k student's t-distribution, t-test, small-sample statistics, distribution function .c 5.12 5.5
1945 | role programming ph computer science program | general paper role programming advanced graduate training discussed subject matter related programming programming se considered importance application formalism considered need good empirical experimentation outline sequence course included subject heading obtained extensive bibliography bibliography programming reference included | arden, b. w. .k graduate-level programming, graduate programs, course content, course sequence, graduate curriculum,  programming research topics, programming bibliography .c 1.3 1.52 4.0
1946 | computing polynomial resultant bezout determinant collins reduced algorithm | algorithm computing resultant polynomial variable key repetitive step computation solving system polynomial equation elimination studied determining algorithm computer implementation depends extent extraneous factor introduced extent propagation error caused truncation real coefficient memory requirement computing speed preliminary consideration narrow choice algorithm bezout determinant collins reduced polynomial remainder sequence algorithm detailed test performed sample problem conclusively show bezout determinant superior respect univariate polynomial case collins reduced algorithm faster bezout determinant prof strikingly superior numerical accuracy displaying excellent stability regard round error result test reported detail | ku, s. y. adler, r. j. .k resultant algorithm, g.c.d. algorithm, polynomial resultant, elimination, bezout's determinant,  sylvester's determinant, reduced p.r.s. algorithm, euclidean algorithm, multivariate polynomial equations .c 4.40 5.10 5.15 5.41
1947 | object code optimization | method analyzing control flow data flow program compilation applied transforming program improve object time efficiency dominance relationship indicating statement necessarily executed global common expression elimination loop identification implementation optimization o fortran | lowry, e. s. medlock, c. w. .k compilers, data flow analysis, dominance, efficiency, fortran,  graph theory, loop structure, machine  instructions, object code, optimization, redundancy elimination, register assignment, system/360 .c 4.12 5.24 5.32
1948 | computer group theory survey | computer applied increasingly diverse range problem group theory important area application present coset enumeration subgroup lattice automorphism group finite group character table commutator calculus group theory program range simple combinatorial numerical program large symbol manipulation system survey important algorithm contrasted result obtained existing program extensive bibliography included | cannon, j. j. .k group theory, coset enumeration, subgroup lattices, automorphism groups, character tables, commutator  calculus, topology, crystallography, permutation groups, abelian groups, discrete mathematics, non-numerical  programming, symbol manipulation, survey .c 1.3 3.15 5.39
1949 | finiteness assumption intellectual isolation computer scientist | wagner, r. a. .k algol vs. fortran, finiteness assumptions, intellectual isolation, integer variable range, memory finiteness, finite word size .c 2.2 4.22 5.23
1950 | efficient handling binary data | raduchel, w. j. .k binary variables, dummy variables, bit strings, cross-tabulations .c 4.9
1951 | estimate distribution random variable computer communication traffic model | study multiaccess computer communication characterized distribution underlying elementary model user computer interactive process model elementary sense random variable generally interest computer communication study decomposed element model data examined operational multiaccess system model shown robust variable model distribution independent system examined shown gamma distribution describe discrete variable approximation gamma distribution exponential distribution discussed system studied | fuchs, e. jackson, p. e. .k computer communications, time-sharing, operating systems, optimization models .c 3.80 3.81 6.20
1952 | index subject algorithm
1953 | exponential integral ei algorithm s13 | redish, k. a. .k ansi fortran standard .c 4.0 4.22
1954 | eigenvalue eigenvectors real symmetric matrix algorithm f2 | stewart, g. w.	 .k real symmetric matrix, eigenvalues, eigenvectors, qr algorithm .c 5.14
1955 | characteristic value solution mathieu differential equation algorithm s22 | sale, a. h. j. .k mathieu's differential equation, mathieu function, characteristic value, periodic solution, radial solution .c 5.12
1956 | optimum merging mass storage | algorithm displayed yield merge order total read time defined sum seek time data transfer time minimized sort mass storage analysis parameterized term ratio seek time time take fill core record size unit core length applied conventional cpu mass storage combination explicit formula total read time derived term parameter correlate total read time calculated optimum merge order yielded algorithm formula involves root simple transcendental equation short table root included numerical result graphically displayed wide range parameter found normalized read time optimum merging hardware configuration proportional length time logarithm length | black, n. a. .k sorting, merging, optimum merging, mass storage, sort timing, drum-merging, access time .c 3.37 4.49 5.31
1957 | list set generator construct evaluating set expression | list set generator defined algorithm list set generator construct added list processing system system handle set efficiently generates set result expression involving set set operator efficiency derives evaluating expression parallel evaluating subexpressions set arrive final result | shapiro, s. c. .k set manipulating, list processing, set generation, sets, lists, file processing .c 3.73 3.74 4.22
1958 | improving round runge kutta computation gill method | runge kutta gill scheme common based incomplete adaptation floating point operation gill method improved version reduces round error significantly note heart scheme presented fortran language shown improved version method obtained addition fortran statement version significant improvement numerical comparing included | thompson, r. j. .k runge-kutta methods, ordinary differential equations, round-off error, error analysis .c 5.11 5.17
1959 | interrupt based organization management information system | programming structure language construct supervisory system organization proposed design coding large shared data base system base organization generalized interrupt structure newly introduced concept tagging process associating program structure interrupt generating condition item data base algorithm resolving conflict arise scheduling interrupt processing routine presented dpl programming language supervisory system concept implemented illustrated organization proposed management information system | morgan, h. l. .k management information systems, integrated data processing, supervisors, interrupts monitoring systems, supervisory systems, interrupt scheduling, parallel processing .c 3.51 4.22 4.32
1960 | process management resource sharing multiaccess system esope | main design principle multiaccess system esope emphasis basic idea underlying design implementation detail main feature system include ability user schedule parallel process system primitive operation memory relationship allocation scheduling policy dynamically take account recent information user behavior | betourne, c. boulenger, j. ferrie, j. kaiser, c. krakowiak, s. mossiere, j. .k time-sharing, multiprogramming, process scheduling, resource allocation .c 4.32
1961 | efficient search algorithm find elementary circuit graph | theoretically efficient search algorithm presented exhaustive search find elementary circuit graph algorithm easily modified find elementary circuit attribute length rigorous proof algorithm application empirical bound presented relating speed algorithm number vertex number arc speed related number circuit graph give relation speed complexity extension undirected graph discussed | tiernan, j. c. .k algorithm, graph theory, circuit search algorithm, path search algorithm, searching .c 3.74 5.32
1962 | groove program compose store edit function time | program make creating storing reproducing editing function time function typical generated human being multiple function produced long period time hour sufficiently high sampling rate describe fast human reaction sample function variety purpose control machine tool sound synthesizer person control program operates small computer ddp function stored disk function created real time human input computer interact stored function computed function real time feedback process controlled important link system environment effective man machine interaction carefully nurtured | mathews, m. v. moore, f. r. .k computer music, music, real-time control, digital control, time functions, interactive software, hybrid systems, conductor program .c 3.44 3.8 7.3
1963 | condition number pei matrix | rokne, j. .k matrices, condition numbers, pei matrices, eigenvectors, eigenvalues .c 5.14
1964 | comment working set model program behavior | bernstein, a. .k demand paging, working set, paging rate, multiprogramming .c 4.30 4.32
1965 | correction logical arithmetic computer complement binary arithmetic | ehrman, j. r. .k binary arithmetic, unsigned operand arithmetic, maximum significance arithmetic, full-precision arithmetic .c 3.15 5.11
1966 | generalized method generating argument function value | wilson, w. j. .k mapping function, decision hierarchy, table look-up .c 4.9 5.39
1967 | improved algorithm produce complex prime algorithm a1 | bratley, p. .k number theory, prime numbers, complex numbers .c 5.39
1968 | eigenvalue eigenvectors real general matrix algorithm f1 | knight, w. mersereau, w. .k eigenvalues, eigenvectors, latent roots, householder's method, qr algorithm, inverse iteration .c 5.14
1969 | increasing efficiency quicksort algorithm m1 | van emden, m. h. .k sorting, quicksort  .c 5.31 3.73 5.6 4.49
1970 | unrecorded magnetic tape information interchange track cpi nrzi cpi pe proposed american national standard
1971 | recorded magnetic tape information interchange cpi phase encoded proposed american national standard
1972 | nonrecursive list compacting algorithm | simple nonrecursive list structure compacting scheme garbage collector suitable compact lisp list structure presented algorithm avoids need recursion partial structure built track list copied | cheney, c. j. .k list compacting, garbage collection, compact list, lisp .c 4.19 4.49
1973 | linear quotient hash code | method hash coding presented shown posse desirable attribute specifically algorithm simple efficient exhaustive needing time probe probe lookup performance data implementation hint | bell, j. r. kaman, c. h. .k hashing, hash code, scatter storage, calculated address, search, table, lookup, symbol table, keys .c 3.74 4.9
1974 | neater2 pl source statement reformatter | neater2 accepts pl source program operates produce reformatted version logical mode neater2 logical structure source program indentation pattern output logic error discovered neater2 logical analysis discovered economically compilation trial run number option give user full control output format maximize utility neater2 aid early stage development pl source deck option usage neater2 insert logical unit coding statement case number time executed recorded execution feature expected provide major aid optimization pl program | conrow, k. smith, r. g. .k logical analysis of pl/i source, reformatting of pl/i source, documentation aid, execution time usage data .c 1.52 4.12 4.19 4.42
1975 | multiple precision division algorithm | generalized division algorithm positive integral operand presented depending algebraic relationship cipher divisor adjustment original divisor dividend performed division operation initiated uniqueness method trial cipher quotient equal greater final replacement | mifsud, c. j. .k multiple-precision, division, adjustment, generalize .c 3.15 4.0 5.1
1976 | multi attribute retrieval combined index | paper organization scheme designed replace popular secondary index filing scheme inverted secondary key field redundancy storing key access number record satisfy combination secondary index value bucket retrieve key satisfying input query derived subset field single access index bucket combination value combination bucket required query method degenerate case conventional secondary index filing scheme work similarly advantage elimination multiple access case elimination false drop elimination computer time perform intersection key set qualified secondary index field avoidance long string key index field appearing query value redundancy case secondary indexing method general case trade number access query redundancy exists | lum, v. y. .k file organization, secondary index files, inverted files, information retrieval, data management, access method, secondary  keys, storage with buckets, rapid retrieval, balanced filing scheme, elimination of false drops, combining indexes, query, multi-attribute retrieval .c 3.73 3.74 3.79
1977 | interactive display approximation linear programming | interactive program graphical display developed approximation data mean linear combination function including spline selected user coefficient approximation determined linear programming minimize error l1 infinity norm auxiliary condition monotonicity convexity approximation imposed interactive system example | lafata, p. rosen, j. b. .k approximation, data fitting, functional approximation, linear programming, interactive graphical display, spline functions .c 5.13 5.41
1978 | interactive graphic solve numerical problem | advent line time sharing computer system graphic terminal dimension numerical problem solving capability simply power achieve fast turnaround develop interactive routine easy take advantage insight visual capability human problem solver line system general purpose mathematical problem solving implemented special purpose system solving problem area ordinary differential equation advantage restricting problem area interface user greatly simplified paper discus advantage accrued system design consideration interactive routine implementation line square data fitting program peg presented result obtained empirical data conclusion area future work field discussed | smith, l. b. .k interactive graphics, computer graphics, graphics, least squares, data-fitting, interactive computing, on-line mathematics .c 1.3 3.1 5.13 5.5
1979 | numerical inversion laplace transforms algorithm d5 | stehfest, h. .k laplace transform inversion, integral transformations, integral equations .c 5.15 5.18
1980 | efficient algorithm sorting minimal storage algorithm m1 | peto, r. .k sorting, ranking, minimal storage sorting, digital computer sorting .c 5.31
1981 | normal curve integral algorithm s15 | holmgren, b. .k normal curve integral, probability, special functions .c 5.12 5.5
1982 | modified havie integration algorithm d1 | wallick, g. c. .k numerical integration, havie integration, romberg quadrature, modified romberg-quadrature, trapezoid values, rectangle values .c 5.16
1983 | spanning tree algorithm | seppanen, j. j. .k graph, tree, spanning tree .c 5.32
1984 | tableless date conversion algorithm | stone, r. a. .k date, calendar .c 5.9
1985 | integer programming problem algorithm | chang, s. k. gill, a. .k integer programming, change making problem .c 5.41
1986 | student quantiles s14 algorithm | hill, g. w. .k student's t-statistic, quantile, asymptotic approximation .c 5.12 5.5
1987 | student distribution s14 algorithm | hill, g. w. .k student's t-statistic, distribution function, approximation, asymptotic expansion .c 5.12 5.5
1988 | formalism translator interaction | formalism presented describing action processor programming language compiler interpreter assembler interaction complex system compiler compiler extendible language formalism define answer question bootstrapping meta compiler metaphase interpretive addition algorithm presented deciding system produced set component processor | earley, j. .k translator, compiler, interpreter, bootstrapping, language processor, compiler-compiler .c 4.1 5.29
1989 | transition network grammar natural language analysis | augmented transition network grammar analysis natural language sentence structure building action arc grammar network allow reordering restructuring copying constituent produce deep structure representation type obtained transformational analysis condition arc allow powerful selectivity rule meaningless analysis take advantage semantic information guide parsing advantage model natural language analysis discussed detail illustrated example implementation experimental parsing system transition network grammar briefly | woods, w. a. .k computational linguistics, grammars, grammar models, linguistics, natural language analysis, parsing, semantic interpretation, transition network grammars, transformational grammars .c 3.42 4.12
1990 | numerical constant algorithm | dunham, c. b. .k numerical algorithm, numerical constants .c 5.10
1991 | number automorphisms singly generated automaton | bavel, z. .k automata, finite automata, singly generated automata, automorphisms, generators, length of state, minimal-length generators, orbit .c 5.22
1992 | comment bell quadratic quotient method hash code searching | lamport, l. .k hashing, hash code, scatter storage, calculated address, clustering, search, symbol table, keys, table look-up .c 3.74 4.9
1993 | regular coulomb wave function algorithm s22 |  cody, w. j. paciorek, k. a.                                                          .k coulomb wave functions, wave functions, regular coulomb wave functions .c 5.12
1994 | decision table translation algorithm | dial, r. b. .k decision table, decision table translation .c 4.19
1995 | special series summation arbitrary precision c6 algorithm | abdali, s. k. .k function evaluation, series summation, approximation .c 5.12 5.13
1996 | system hyperbolic pde d3 algorithm | smith, r. r. mccall, d. .k hyperbolic p.d.e., characteristic, extrapolation, second order p.d.e., quasilinear p. d. e. .c 5.17
1997 | increasing efficiency quicksort | method presented analysis generalization quicksort average asymptotic number comparison needed shown log formula derived expressing term probability distribution bound partition formula assumes simple form generalization considered hoare choice bound median random sample main contribution paper generalization quicksort bounding interval single element bound generalization turn easy implement computer program numerical approximation show version quicksort compared original implies decrease number comparison percent actual test showed percent saving computing time | van emden, m. h. .k sorting, quicksort, information content, entropy, distribution of median .c 3.73 4.49 5.31 5.6
1998 | complex matrix inversion versus real | comparison complex matrix real matrix inversion made shown complex inversion fast real inversion rounding error bound complex inversion eighth real gaussian elimination extended product accumulation bound half real system | ehrlich, l. w. .k complex matrix inversion, matrix inversion, inversion, rounding errors, rounding error bound, error bounds, complex rounding error bounds .c 5.14 5.11 5.10
1999 | optimal starting approximation generating square root slow divide | machine slow division preferable iterative scheme square root classical heron scheme problem optimal initial approximants considered optimal polynomial initial approximation tabulated | wilson, m. w. .k square root, newton-raphson iteration, optimal approximants .c 5.13
2000 | variation goodman lance method solution point boundary problem | recently published method interpolative solution nonlinear equation improved applied give significant variation goodman lance method solution point boundary problem resulting method applies numerical solution optimal control problem euler lagrange formulation quantitative estimate presented variation nearly fast problem context | kimble, g. w. .k goodman-lance, boundary-value problems, newton's method, nonlinear equations, optimal control, optimization, ordinary differential equations, secant method, interpolative solution, orthogonal matrices .c 3.21 5.15 5.17
2001 | integrating square root | differential equation difficult integrate numerically singularity point vanishes simple trick remove singularity | moler, c. b. solomon, l. p. .k quadrature, differential equations .c 5.16 5.17
2002 | amesplot higher level data plotting software system | amesplot extensible software system designed make display data simple painless neat system hardware independent implemented variety installation manufacturer diverse configuration element common type data plot outlined element combined system based simple module demonstrated module independently independent axis system attribute plot enables plot complexity constructed adding replacing module basic syntax amesplot outlined description utility software consisting macro produce scaled plot formal tablet text interspersed subplots map coastline plot system formulate user supply minimum information fully integrable user program written conventional higher language function positioning locating scaling layout multiple subplots ax label element plot handled software system user specifies structuring plot multiple independent contained subplots transformation projection scaling rotation shifting entire plot subplots action simple module user interact freely amesplot level enabling construct data marker alphabetic character transformation produce variety artistic effect | hirschsoln, i. .k computer graphics, data potting, data display syntax, hardware independent software, display device independent software, plot elements, self-scaled plots, user interaction, tablet organization, map display, projection .c 4.13 4.29 4.49 4.9
2003 | interactive software system computer aided design application circuit project | characteristic interactive software system intended constitute interface designer computer step design process presented main emphasis description feature high level user oriented language operating level interaction based imol interactive monitor language designed perform control function software system design criterion provide user command simple efficient order perform function needed computer aided circuit design coif circuit oriented graphic language designed describe generate manipulate graphic problem specification extension fortran graphic type variable designer familiar fortran need learn language application computer aided circuit design examined hand adopted design criterion provide sufficient generality extend language computer assisted application | bracchi, g. somalvico, m. .k interaction, graphics, computer graphics, computer-aided design, circuit design, software system, software organization, language, monitor language, graphic language, extended fortran .c 3.24 3.25 4.13 4.22 4.3
2004 | procedure generation dimensional half toned computer graphic presentation | description algorithm producing computer generated half tone presentation dimensional polygonal surface structure algorithm achieves significant increase speed computation warnock algorithm developed university utah implemented coordinated science laboratory cdc computer system university illinois history leading algorithm development algorithm result presented compared computer run achieved warnock approach extension procedure variable position illumination source | bouknight, w. j. .k half-tone computer graphics, line-scan image processing, hidden surface, polygonal surface structure presentations .c 4.9
2005 | proposed revision american national standard x3 rectangular hole twelve row punched card
2006 | proposed american national standard | kerpelman, c. .k state identifiers, state abbreviation, states of the united states, data  elements, data codes, numeric codes, geopolitical subdivisions, geographic codes .c 3.35 3.57
2007 | algorithm policy revised august
2008 | gaussian quadrature formula algorithm d1 | wise jr., w. r. .k quadrature, gaussian quadrature, numerical integration, weight function, orthogonal polynomials, newton's method, successive deflation .c 5.16
2009 | simpson rule multiple integration algorithm d1 | proll, l. g. .k numerical integration, multiple integration, simpson's rule .c 5.16
2010 | unitary symmetric polynomial algorithm | mckay, j. .k symmetric polynomials, unitary symmetric polynomials .c 5.11 5.30 5.5
2011 | sequency ordered walsh function s22 algorithm | hubner, h. .k walsh functions, sequency ordered walsh functions .c 5.12 5.13
2012 | binary ordered walsh function s22 algorithm | hubner, h. .k walsh functions, binary ordered walsh functions .c 5.12 5.13
2013 | rademacher function s22 algorithm | hubner, h. .k rademacher function .c 5.12 5.13
2014 | function minimization linear search e4 algorithm | fielding, k. .k function minimization, relative minimum, quasi-newton method .c 5.15
2015 | technique generating optimal floyd evans production precedence grammar | technique developed generating optimal floyd evans production precedence grammar graph formulation problem merging production production generated correspond minimum cost inverse arborescence graph validity technique demonstrated weak precedence grammar defined production mechanically generated precedence grammar modified correct optimal parser obtained | ichbiah, j. d. morse, s. p. .k translator writing systems, syntactic analysis, floyd-evans productions, precedence grammars, translator optimization, merger algorithm, minimum cost inverse-arborescence, graph theory .c 4.12 5.23 5.32
2016 | instrumentation multics | array measuring tool devised aid implementation prototype computer utility discussed tool include special hardware clock data channel general purpose programmed probing recording tool specialized measurement facility measurement interest system combine demand paging multiprogramming detail insight effectiveness lack individual tool provided | gintell, j. w. saltzer, j. h. .k instrumentation, performance measurement, multiprogramming systems, measuring tools, system analysis, multics, metering, event tracing, demand paging, script driven measurement .c 2.44 4.32 4.39 4.42
2017 | sorting paging environment | sorting study part extensive measurement project undertaken m44 44x experimental paging system conceived implemented ibm research order explore virtual machine concept study concerned implementation sorting procedure context dynamic paging environment characteristic virtual memory machine description experimental sort program analysis performance measurement result obtained presented insight gained experimental effort arrive set broad guideline writing sort program paging environment | brawn, b. s. gustavson, g. mankin, e. s. .k sorting, merging, virtual machines, paging systems, dynamic storage allocation, measurement of systems program behavior, performance evaluation, memory management .c 4.32 4.49 4.9 5.31
2018 | full table quadratic searching scatter storage | quadratic residue search method hash table avoids clustering experienced linear search method simple quadratic search access half table shown length table prime form 4n integer table accessed quadratic search separate access original entry point search method presented computationally simple advantage quadratic search access table sweep | day, a. c. .k quadratic residue, search method, hash tables, scatter storage, dictionary look-up, quadratic search, searching, hashing, hash code, clustering, collisions .c 3.7 3.73 3.74
2019 | normalization technique hand printed numeral | family pattern standardization technique based geometrical projection applied digitized hand printed numeral obtained sale clerk principle involves transforming quadrilateral term convex hull pattern square amount overlap class character versus amount class evaluate degree normalization achieved respect published method including size shear normalization moment | nagy, g. tuong, n. .k pattern recognition, character recognition, normalization, projective transformation, central projection, hand printed characters, handwriting, linear transformation, size normalization, mapping, pattern preprocessor .c 3.63 5.14
2020 | allocation computer resource pricing answer | widespread complex generation computing system led broader concern mean resource system allocated user community mean suggested frequently pricing procedure paper manner allocate computing resource considered extent pricing mechanism fit mold discussed pricing serve rationing mechanism time consideration mean price adjusted flexibly order make dynamic allocation resource consideration mean user insulated harmful effect frequent price fluctuation subject pricing lot attention recently number misconception persist purpose operation attempt made clarify misunderstanding highlight advantage disadvantage highlight advantage disadvantage pricing illustrative pricing system discussed order demonstrate applicability pricing environment | nielsen, n. r. .k allocation mechanisms, charging, computer pricing, costing, flexible pricing, pricing, priority charges, resource allocation, user motivation .c 1.3 2.4
2021 | comment axiomatic approach programming | hunt, b.r. .k axiomatic method, proofs of programs, homomorphic structure in programming .c 4.0 4.21 4.22 5.20 5.21 5.23 5.24
2022 | note anomaly paging | pomeranz,j. e. .k paging machines, demand paging, replacement algorithm .c 4.30
2023 | note data base deadlock | baecker, h. d. .k data base, synchronization, locking, deadlock, reference count .c 3.73
2024 | comment paper lowe | sattley, k. millstein, r. .k automatic segmentation, program connectivity .c 5.24 5.32
2025 | student distribution jacobi polynomial modified romberg quadrature factorial analysis variance algorithm | sale, a. h. j. .k fortran standards .c 4.0 4.22
2026 | exponential integral algorithm s13 | ng, e. w.
2027 | ricatti bessel function kind algorithm s17 | bray, t. .k ricatti-bessel functions, bessel functions of fractional order, spherical bessel functions .c 5.12
2028 | greatest common divisor integer multiplier a1 algorithm | bradley, g. h. .k greatest common divisor, euclidean algorithm, number theory, diophantine equations .c 3.15 5.10
2029 | exponential integral s13 algorithm | paciorek, k. a. .k exponential integral, special functions, rational chebyshev approximation .c 5.12
2030 | context sensitive parsing | paper present canonical form context sensitive derivation parsing algorithm find context sensitive analysis amount memory required algorithm essentially required store single complete derivation addition modified version basic algorithm presented block infinite analysis grammar loop algorithm compared previous parser context sensitive grammar general rewriting system difference type analysis discussed algorithm appears complementary algorithm kuno respect including space time trade degree context dependence involved | woods, w. a. .k context-sensitive grammars, context-sensitive parsing, formal grammars, formal language theory, parsing, parsing algorithms, recognition algorithms .c 3.42 5.22 5.23
2031 | algorithm bound greatest common divisor integer | version euclidean algorithm finding greatest common divisor integer multiplier gcd presented number arithmetic operation number storage location linear theorem lame bound number iteration euclidean algorithm integer extended case integer algorithm construct minimal set multiplier presented fortran program algorithm appears comm acm algorithm | bradley, g. h. .k greatest common divisor, euclidean algorithm, number theory, diophantine equations .c 3.15 5.10
2032 | structure hashing function | general method structuring proposed hashing function define tree structure type tree examined relation tree studied past explained result probability distribution path length derived illustrated | coffman jr., e. g. eve, j. .k data structures, tree structures, file structures, scatter tables, hashing functions, information retrieval .c 3.70 3.74
2033 | space time trade offs hash coding allowable error | paper trade offs computational factor set message hash coding method examined compared conventional hash coding method computational factor considered size hash area space time required identify message nonmember set reject time allowable error frequency method intended reduce amount space required hash coded information conventional method reduction space accomplished exploiting possibility small fraction error commission tolerable application application large amount data involved core resident hash area feasible conventional method application envisaged performance improved smaller core resident hash area conjunction method secondary time consuming test catch small fraction error method discussed illustrates area application method analysis paradigm problem demonstrates allowing small number test message falsely identified member set permit smaller hash area increasing reject time | bloom, b. h. .k hash coding, hash addressing, scatter storage, searching, storage layout, retrieval trade-offs, retrieval efficiency, storage efficiency .c 3.73 3.74 3.79
2034 | mobile programming system stage2 | stage2 level bootstrap sequence easily implemented computer flexible provided stage2 summarized implementation technique made stage2 running machine man week effort discussed approach successful machine widely varying characteristic | waite, w. m. .k bootstrapping, macro processing, machine independence, programming languages, implementation techniques .c 4.12 4.22
2035 | conversational access word machine | lap6 line system running word linc full facility text editing automatic filing maintenance program preparation assembly focus preparation editing continuously displayed character text string manuscript positioned user edited simply adding deleting line working directly elastic scroll feature uniform command set augmented user machine small aid program design providing display scope premarked randomly addressable linc tape standard item environment similar sophisticated terminal tape logically similar disk priority design efficient tape algorithm minimize limitation small memory technique developed handling scroll editing filing layered system structure outlined lap6 people country design strongly influenced performance criterion established interview held linc user specification period | wilkes, m. a. .k conversational computer access, display editing, display oriented system, filing algorithms, lap6, layering, linc, man-machine communication, on-line editing, on-line efficiency, on-line environment, scroll editing, small machine system, tape filing, tape  oriented system, text editing .c 3.73 4.10 4.11 4.19 4.22 4.30 4.40 4.41
2036 | interactive command generating facility | facility permit conversationally controlled task executed noninteractive environment proposed mean program generate interactive time sharing command receive output response presented command invoked typed console keyboard argued facility help overcome limitation man computer communication set function accomplish embedded string processing language suggested information pertinent implementation facility existing time sharing system | grant, c. a. .k time-sharing, command languages, pseudo-teletype, interaction, conditional job control, operating systems .c 3.80 3.81 4.29 4.39
2037 | permutation set repetition algorithm g6 | chase, p. j. .k permutations and combinations, permutations .c 5.39
2038 | combination object algorithm g6 | chase, p. j. .k permutations and combinations, permutations .c 5.39
2039 | permanent function square matrix ii algorithm g6 | shriver, b. eberlein, p. j. dixon, r. d. .k matrix, permanent, determinant .c 5.30
2040 | modified romberg quadrature algorithm d1 | wallick, g. c. .k numerical integration, romberg quadrature, modified romberg quadrature,  trapezoid values, rectangle values .c 5.16
2041 | shellsort algorithm m1 | chandler, j. p. harrison, w. c. .k sorting, minimal storage sorting, digital computer sorting .c 5.31
2042 | treesort algorithm m1 | certification algorithm take form proof algorithm correct illustrative practical algorithm treesort sorting array proved correct | london, r. l. .k proof of algorithms, debugging, certification, metatheory, sorting, in-place sorting .c 4.42 4.49 5.24 5.31
2043 | eigenvalue eigenvectors real symmetric matrix f2 algorithm | stewart, g. w. .k real symmetric matrix, eigenvalues, eigenvectors, qr algorithm .c 5.14
2044 | permutation set repetition algorithm g6 | chase, p. j. .k permutations and combinations, permutations .c 5.39
2045 | combination object algorithm g6 | chase, p. j. .k permutations and combinations, permutations .c 5.39
2046 | relational model data large shared data bank | future user large data bank protected know data organized machine internal representation prompting service supply information satisfactory solution activity user terminal application program remain unaffected internal representation data changed aspect external representation changed change data representation needed result query update report traffic natural growth type stored information existing noninferential formatted data system provide user tree structured slightly general network model data section inadequacy model discussed model based ary relation normal form data base relation concept universal form data base relation concept universal data sublanguage introduced section operation relation logical inference discussed applied problem redundancy consistency user model | codd, e. f. .k data bank, data base, data structure, data organization, hierarchies of data, networks of data, relations, derivability,  redundancy, consistency, composition, join, retrieval language, predicate calculus, security, data integrity .c 3.70 3.73 3.75 4.20 4.22 4.29
2047 | incorporating origin shift qr algorithm symmetric tridiagonal matrix | qr iteration eigenvalue symmetric tridiagonal matrix accelerated incorporating sequence origin shift origin shift subtracted directly diagonal element matrix incorporated mean implicit algorithm method drawback direct method unnecessarily degrade small eigenvalue implicit method effectively loose shift retard convergence paper present method drawback | stewart, g. w. .k eigenvalues, eigenvectors, qr method, origin shifts, symmetric tridiagonal matrix .c 5.14
2048 | comparison adaptive newton cote quadrature routine evaluating definite integral peaked integrands | report compare performance adaptive quadrature scheme based newton cote 2n point rule approximating set definite integral integral dx relative accuracy | hillstrom, k. e. .k adaptive newton-cotes quadrature, quadrature scheme comparison, definite integral evaluation, adaptive numerical in tegration, newton-cotes  integration, peaked integrand integration, quadrature efficiently plot, new-cotes rules applications, newton-cotes rules modifications .c 5.10 5.16
2049 | accurate floating point summation | paper describes alternate method summing set floating point number comparison error bound method standard summation method show considerably sensitive propagation round error | linz, p. .k summation, floating-point addition, round-off error, round-off propagation .c 5.11
2050 | automatic parsing content analysis | automatic syntactic semantic analysis unrestricted natural language text application content analysis stringent coverage requirement preliminary study show harvard syntactic analyzer produce correct unambiguous identification subject object verb approximately half relevant occurrence degree coverage content analysis variable compare favorably method variable compare favorably method sample total text processed | damerau, f. j. .k content analysis, parsing, syntactic analysis, natural language processing, information retrieval, language analysis, text processing .c 3.42 3.71
2051 | pl program assist comparative linguist | practical pl program assist comparative linguist determine regular sound correspondence genetically related language investigator arrange data input aligning pair suspected cognate program tabulates correspondence list processing technique sort count pair word assigned relative function total frequency data correspondence found pair word output list correspondence type frequency occurrence data separate listing correspondence word pair showing correspondence relative arbitrarily chosen cutoff point article explains usefulness limitation program illustrates small portion hypothetical data | frantz, d. g. .k comparative linguistics, natural language processing, comparative method, historical linguistics, diachronic linguistics, genetic relationship, sound change, sound correspondence, regular correspondence, list processing .c 3.42
2052 | scheduling reduce conflict meeting | conflict scheduling treated defining undirected linear graph independently relation activity conflict additional constraint time space connected component graph found algorithm gotlieb corneil corresponds set event scheduled time | grimes, j. e. .k allocation, conflict matrix, connected component, scheduling, spanning tree, undirected linear graph .c 1.90 3.51 3.59 5.32
2053 | conversion decision table computer program | execution time diagnostics pinpointing ambiguity decision table discussed pointed attempt resolving ambiguity compile time general impossible shown consequence tree method converting decision table program inadequate regard ambiguity detection algorithm programming decision table merit simplicity implementation detection ambiguity execution time presented algorithm limited entry decision table clarifies importance proper coding information decision table algorithm program mixed entry decision table directly going intermediate step conversion limited entry form resulting storage economy comparison algorithm proposed literature made feature decision table fortran iv translator ibm developed author | muthukrishnan, c. r. rajaraman, v. .k decision tables, diagnostic aids, system analysis, business applications .c 3.50 3.59 4.19 4.29 4.49
2054 | feasibility voice input line computer processing system | line digital computer processing system considered ordinary telephone complete terminal device input computer provided sequence spoken word output user audio response machine feasibility implementing system fortran algebraic compiler object processor considered detail specific word recognition program technique depends simplifying restriction small vocabulary set known speaker moment silence input word experimental result presented giving error rate experimental condition machine resource required accommodate user time result show time economically logically feasible handle user time ibm computer | elder, h. a. .k speech recognition, word recognition, pattern-matching, pattern recognition, time-sharing, remote access, voice input, speech input, telephone input/output, acoustic signal, spoken-word input, talking to  computers, man-machine interaction .c 3.63 3.81 4.32 4.41 6.35
2055 | subroutine perform situ transposition rectangular matrix algorithm | lachenmaier, r. .k rectangular matrix, transpose .c 5.14
2056 | gomory algorithm 263a | proll, l. g. .k linear programming, integer variables, dual method .c 5.41
2057 | random vector uniform solid angle algorithm g5 | knop, r. e. .k random number, random vector, random number generator, probability distribution, frequency distribution, simulation, monte carlo .c 5.5
2058 | situ transposition rectangular matrix algorithm f1 | laflin, s. brebner, m. a. .k rectangular matrix, transpose .c 5.14
2059 | language treating graph | language representation graph formulation graph operation node link deletion insertion union intersection comparison traversal graph graph represented linked list language syntactically defined extension algol translated algol mean syntax driven compiler application area language operation research network problem control theory traffic problem | crespi-reghizzi, s. morpurgo, r. .k graphs, oriented, nonoriented, multiple, colored graph, language extended algol, operator-precedence, syntax-driven compiler, operation research, network, traffic .c 3.2 3.5 4.2 5.3
2060 | gedanken simple typeless language based principle completeness reference concept | gedanken experimental programming language characteristic permitted context language permissible meaningful context function label permissible result function value variable assignment indirect addressing formalized introducing value called reference turn posse value assignment operation affect relation reference compound data structure treated function type declaration permitted functional approach data structure reference insure process accepts data structure accept logically equivalent structure regardless internal representation generally data structure implicit giving arbitrary algorithm computing accessing component existence label variable permit construction coroutines quasi parallel process unorthodox control mechanism variety programming example illustrates generality language limitation extension discussed briefly | reynolds, j. c. .k programming language, data structure, reference, assignment, coroutine, quasi-parallel process, typeless language, applicative language, lambda calculus, list processing, nondeterministic algorithm .c 4.20 4.22 5.23 5.24
2061 | algorithm construction bounded context parser | algorithm accepts arbitrary context free grammar construct bounded context parser parser exists part paper definition context free grammar working bounded context parser recalled notion reduction class context free grammar introduced connection structure bounded context parser pushdown automaton generate reduction class context free grammar defined finally algorithm essentially carry exhaustive study run pushdown automaton generating reduction class part utility algorithm discus ed light experience gained compiler design algorithm claimed simultaneous design language compiler | loeckx, j. .k bounded-context parsing, bounded-context syntactic analysis, parser  construction, syntactical analyzer construction, generators, compiler  compilers, compiler writing systems, translator writing systems metacompilers, context-free grammars, formal languages, pushdown automata .c 4.12 5.22 5.23
2062 | application sequential sampling simulation inventory model | sequential sampling procedure applied analysis data generated computer simulation experiment multi item inventory model procedure cost computer time required achieve level statistical precision calculated cost computer time comparable fixed sample size method calculated computer cost fixed sample size procedure versus sequential sampling procedure compared | sasser, w. e. burdick, d. s. graham, d. a. naylor, t. h. .k simulation, inventory models, sequential sampling, models, experimental design .c 3.31 3.50 3.54 5.5
2063 | translation equation erratum | vere, s.
2064 | operation generalized array genie compiler | operation vector matrix higher dimensional storage array standard feature compiler today element structure restricted scalar sophisticated application restriction impose cumbersome data representation efficient system devised implemented element multidimensional array multidimensional array system developed storage structure location length content array codeword interpreted system code word describe array codewords providing needed descriptive information hyperstructures form | sitton, g. a. .k multidimensional arrays, matrix operations, storage control, subscripting, compilers .c 4.12 4.29
2065 | programming system line analysis biomedical image | preliminary description software computer display system special emphasis man machine interaction system intended wide variety biomedical application method applied karyotyping chromosome system separated programming task picture transformation maintenance picture structuring display management picture structuring considered vehicle man machine communication prototype data format picture called picture form developed structure operator defined manipulate picture form produce picture form idea symbolic mathematical laboratory mit conceived marvin minsky | hodes, l. .k image processing, biomedical image processing, on-line image processing, semiautomatic image processing, data structure, structure operators, picture processing, biomedical picture processing, on-line picture processing, semiautomatic picture processing, semiautomatic karyotyping, karyotyping, list processing picture processing .c 3.12 3.34 3.63 4.39 6.29
2066 | algol construction procedure parameter procedure | knight, k. r. .k algol, procedures, parameters, side effects .c 4.22
2067 | comment lawler multilevel boolean minimization | devries, r. c. .k multilevel logic design, generalized prime implicants, minimal forms, minimization, incompletely specified functions .c 6.1
2068 | comment multiprogramming page demand strategy | smith, j. l. .k multiprogramming, paging, modeling .c 4.32
2069 | comment paper wallace mason | heess jr., w. f. .k page-on-demand, demand paging, time-sharing multiprogramming, markovian computer models, scheduling strategies, operating systems, memory management .c 2.44 4.32 4.39 6.20 6.21
2070 | formal system information retrieval | hsiao, d. harary, f.
2071 | filon quadrature algorithm d1 | fosdick, l. d. einarsson, bo .k quadrature, filon quadrature, integration, filon integration, fourier coefficients, fourier series .c 5.16
2072 | modified romberg quadrature algorithm d1 | cook, n. d. .k numerical integration, romberg quadrature, trapezoid values, rectangle values, error bound .c 5.16
2073 | solution linear program variable implicit enumeration algorithm | guignard, m. m. .k linear programming, zero-one variables, partial enumeration .c 5.41
2074 | sqank algorithm d1 | lyness, j. n. .k numerical integration, integration rule, adaptive integration, automatic integration, simpson's rule, numerical quadrature, quadrature,  quadrature rule, adaptive quadrature,  automatic quadrature, round-off error control .c 5.16
2075 | discretized newton method solving system simultaneous nonlinear equation algorithm c5 | pankiewicz, w. .k newton's method, nonlinear equations, interpolating polynomials .c 5.15 5.13
2076 | cubic spline uniform mesh | simple procedure presented constructing cubic spline periodic nonperiodic uniform mesh arc cubics suffice construct basis cardinal spline algorithm requires minimal storage computation permit easy trade | nilson, e. n. .k simple spline representation, cardinal splines, uniform mesh splines .c 5.13
2077 | cyclical majority problem | problem cyclical majority presented simulated result issue ad judge reported | pomeranz, j. e. weil jr., r. l. .k arrow's paradox, cyclical majority, simulation, voter's paradox, voting paradox .c 3.31 3.35
2078 | representation space planning | problem involving arrangement object space objective function primarily consists derivative distance object arrangement called space planning problem representational requirement problem area defined compared computer graphic language alternative data structure allow automated space planning compared | eastman, c. m. .k automated design, data structures, computer graphics, computer-aided design, engineering design, architectural design, robots .c 3.20 3.2 2, 3.26, 3.41, 3.63
2079 | multiprogramming machine coding computer organization | wirth, n.
2080 | nucleus multiprogramming system | paper describes philosophy structure multiprogramming system extended hierarchy operating system suit diverse requirement program scheduling resource allocation system nucleus simulates environment program execution input output handled uniformly parallel cooperating process e fundamental set primitive dynamic creation control hierarchy process communication | hansen, p. b. .k multiprogramming, operating systems, parallel processes, process concept, process communication, message buffering, process hierarchy, process creation, process removal .c 4.30 4.31 4.32 4.41
2081 | complete calculus matrix | matrix calculus introduced intention developing data structure suitable high level algorithmic language mathematical programming paper investigates special structure matrix utilized efficient computing saving memory space superfluous operation sequence matrix sequence sequence matrix considered matrix operator areext ended sequence operator cumulative operator algorithm symbol manipulation matrix expression find form suited computation form called normal form completeness result obtained sense expression equivalent expression normal form found calculus | bayer, r. witzgall, c. .k complete calculus, data structures, linear programming, matrix, matrix concatenation, matrix sequences, programming languages, sequence operations, symbol manipulation .c 4.12 4.22 5.14 5.41
2082 | syntax directed documentation pl | language pl phrase structure grammar concrete basis illustrating idea called syntax directed documentation idea phrase structure program define structure formal documentation program syntactic type identifier resulting structure trigger automatic formation question programmer answer part documentation provide automatic storage retrieval facility programmer want understand modify program access resulting documentation cross indexed way syntactic type object small pl program found literature worked | mills, h. d. .k documentation, syntax analysis, pl 360, enforced documentation, indexed documentation, automatic interrogation, phase structured grammar, syntax-directed documentation, syntax processing .c 3.59 3.79 4.19 4.43
2083 | creation control internal data base fortran programming environment | method definition user common structure automatic generation common dimension equivalence type declaration user routine definition common contained easy modify form allowing control general communication data routine system implemented ibm cdc series ibm method proved invaluable definition control common large scale program | desalvio, a. j. purdy, j. g. rau, j. .k data base, fortran, common, common equivalencing, subroutine communication, data communication .c 3.73 4.12 4.43
2084 | note complement inherently ambiguous context free language | maurer, h. a. .k ambiguity, inherent ambiguity, complement, context-free language, chomsky-language, phrase structure language, production system, type 2 language, bounded language .c 5.22 5.24
2085 | comment paging anomaly | dempster, j. r. h. .k paging machines, demand paging, replacement algorithm .c 4.30
2086 | method converting hexadecimal decimal | kailas, m. v. .k binary-decimal conversion, computer arithmetic categories
2087 | number system permutation | pager, d. .k permutation, ordering, number, number system, p-number, combinatorial .c 4.49 5.39
2088 | netflow algorithm | bray, t. a. witzgall, c. .k capacitated network, linear programming, minimum-cost flow, network flow, out-of-kilter .c 5.32 5.41
2089 | prime number algorithm a1 | rapp, d. g. scott, l. d. .k prime numbers, generator .c 5.0
2090 | symbolic expansion algebraic expression algorithm r2 | levine, m. j. .k algebra, symbolic algebra, symbolic multiplication, algebraic distribution, algebraic multiplication, distribution algorithm, multiplication algorithm, product  algorithm, polynomial distribution, polynomial expansion .c 3.10 3.17 3.20 4.13 4.90
2091 | pdel language partial differential equation | conventional computer method solve continuous system problem characterized partial differential equation time consuming cumbersome convenient easy learn high level problem oriented language solve study partial differential equation problem designed practical translator language designed working version constructed significant portion language partial differential equation language pdel outlined highlight translator briefly summarized | cardenas, a. f. karplus, w. j. .k problem oriented or digital simulation language, partial differential equations, translator, pl/1, preprocessor pl/1, finite difference algorithms .c 3.1 3.2 4.22 5.17
2092 | deductive question answer natural language inference | question answering aspect protosynthex iii pro totype language processing system exemplified detail system written lisp operates time sharing system system data structure semantic organization deductive question answering formalism relational property complex relation forming operator question answering procedure employ feature operation illustrated example system performance limitation question answering capability presented discussed shown semantic information deductive question answering greatly facilitates process top procedure work question answer enables effective made information concluded development protosynthex iii practically system work large data base require data structure algorithm question answering | schwarcz, r. m. burger, j. f. simmons, r. f. .k question answering, natural language, protosynthex iii, lisp, semantics, artificial intelligence, computational linguistics, language processing, fact retrieval .c 3.42 3.61
2093 | comparison error improvement estimate adaptive trapezoid integration | simple choice error improvement estimate trapezoid rule studied demonstrate comparison procedure independent profusion adaptive search stopping strategy comparison based inclusion noninteger power make realistic usual polynomial based comparison behavior singularity found dominant factor estimate based constant curvature assumption parametric difference considered slightly choice considered | schweikert, d. g. .k adaptive integration, error improvement estimate, trapezoid rule, nonpolynomial error criteria .c 5.16
2094 | algorithm nonlinear minimax approximation | nonlinear minimax approximation problem characterize property permit application special algorithm mainly based exchange algorithm remes solution paper application problem type general nonlinear algorithm due osborne watson considered example illustrate algorithm give satisfactory result successfully solve problem lead difficulty conventional specialist method | watson, g. a. .k minimax approximation, nonlinear approximation, linear programming .c 5.13 5.41
2095 | measurement segment size | distribution segment size measured routine operating con ditions computer system utilizes variable sized segment burroughs b5500 discussed striking feature measurement large number small segment percent segment word result certainly installation independent influenced feature b5500 algol system relevant design computer system especially respect organization paging scheme | batson, a. ju, s. wood, d. c. .k storage allocation, segmentation, segment sizes, page sizes, paging, resource allocation, memory allocation, core utilization .c 4.32 6.2 6.34 6.9
2096 | experiment tree searching program | procedure improvement mini max backing procedure widely computer program game playing purpose based principle desirable option making decision face uncertainty mini max procedure assigns max min node highest lowest valued successor node procedure assigns max min node function highest lowest valued successor procedure written lisp play game kalah demonstrated procedure significantly superior mini max procedure statistical significance important conclusion information statistical significance lacking paper computer experiment artificial intelligence field experiment serve model future work | slagle, j. r. dixon, j. k. .k artificial intelligence, heuristic program, tree searching, lisp, kalah, game playing, decision theory,  mini-max backing-up procedure, backing-up procedures .c 3.60 3.64 3.66
2097 | program teach programming | teach system developed mit ease cost improve result elementary instruction programming student teach offer loosely guided experience conversational language designed teaching mind faculty involvement minimal term experience teach discussed pedagogically system appears successful straightforward reimplementation make economically successful similar program profound tutorial skill result extended research outline research beginning clear | fenichel, r. r. weizenbaum, j. yochelson, j. c. .k elementary programming, computer-assisted learning, uncl, teach .c 1.52
2098 | test probability algorithm student distribution algorithm | hill, g. w. loughhead, m. .k t-test, student's t-statistic, distribution function, approximation .c 5.12 5.5
2099 | eigenvalue eigen vector real general matrix algorithm | knoble, h. d. .k norm, characteristic equation, degenerate eigen-system, diagonalizable matrix, defective matrix   .c 5.14
2100 | ortho algorithm f5 | barrodale, i. .k orthogonalization, approximation .c 5.13 5.17 5.5
2101 | square fit acos bx algorithm e2 | spath, h. .k nonlinear least squares fit .c 5.15
2102 | fitting data exponential algorithm e2 | spath, h. .k nonlinear least squares fit .c 5.15
2103 | restricted partition generator algorithm a1 | white, j. s. .k partitions, restricted partitions, sums of integers, restricted sums .c 5.39
2104 | number doubly restricted partition algorithm a1 | white, j. s. .k partitions, restricted partitions, sums of integers, restricted sums .c 5.39
2105 | interactive computer system graphical flowchart input | interactive computer system operational graphical computer terminal system designed demonstrate method programming computer interpretation flowchart user draw description sampled data system specifies description transmitted large scale computer design simulated graphic representation processed signal scope successful design require numerous modification original design graphical interactive system environment perform iterative process efficiently effectively | robins, m. f. beyer, j. d. .k simulation program, graphical input-output sampled data systems .c 3.20 3.24
2106 | computer education graduate school management | year experience led belief creative design evaluation management information system requires understanding related computer technology concept paging priority interrupt system explained machine language level machine exposition fulfill criterion raise spurious issue allow undue effort solution interesting problem capable exposing outstanding issue significance capable exposing outstanding issue significance chosen machine seful pursuing issue great depth committed equipment provided manufacturer able provide student diagnostic aid great depth allow student ready access machine capable extension expose issue come constructed simulated machine software meet criterion system called prism system documented primer reference | ness, d. n. green, r. s. martin, w. a. moulton, g. a. .k education, simulation, machine language, management information systems, interpreters .c 1.52 3.51 4.13 4.21
2107 | quadratic quotient method hash code eliminating secondary clustering | secondary clustering hash code inefficiency discussed hashing method based elimination presented comparison previous method made analytically empirically | bell, j. r. .k hashing, hash code, scatter storage, calculated address, clustering, search, symbol table, collisions, keys, table look-up  .c 3.74 4.9
2108 | variation sorting address calculation | principle address calculation merging combined yield efficient sorting technique detailed flowchart important program step included characteristic proposed sort discussed | jones, b. .k sorting, address calculation, merging, order, sequence creation .c 4.49 5.31
2109 | quadratic residue research | quadratic residue search method previously suggested avoid clustering encountered hash address collision occur linear search method search size property quadratic residue limited half storage table shown class prime number complement set quadratic residue easily determined entire table size prime number searched | radke, c. e. .k quadratic residue, search method, hash addressing, address clustering, scatter storage, file searching, file addressing, hash coding, quadratic search, random search, storage layout, searching .c 3.7 3.73 3.74
2110 | efficient context free parsing algorithm | parsing algorithm efficient general context free algorithm known similar knuth lr algorithm familiar top algorithm time bound proportional length string parsed general bound unambiguous grammar run linear time large class grammar include practical context free programming language grammar empirical comparison appears superior top bottom algorithm studied griffith petrick | earley, j. .k syntax analysis, parsing, context-free grammar, compilers, computational complexity .c 4.12 5.22 5.23
2111 | spelling correction system program | specialized technique shown efficiently incorporating spelling correction algorithm compiler operating system include syntax semantics information organization restricted keyword symbol table consideration limited class spelling error sample coding performing spelling correction presented system perform spelling correction number debugging run program decreased saving programmer machine time | morgan, h. l. .k spelling correction, error correction, debugging, compilers, operating systems, diagnostics, error detection,  misspelling, lexical analysis systems programming .c 4.42 4.12 3.0 3.79
2112 | translation equation | input limited transduction expression translation equation describe syntax left context sensitive semantics context free language formal procedure deriving set translation equation specification pushdown translator translator consists mealy form finite state automaton interacting mean pushdown stack framework string recognition parsing treated special case translation problem | vere, s. .k automata, turing machines, regular expression, transduction expression, context-free languages, translation, recognizers, parsing, meta-compilers, pushdown transducer, syntax directed compilers, finite state automata .c 4.10 4.12 4.20 5.22
2113 | multistore parser hierarchical syntactic structure | syntactic parser hierarchical concatenation pattern presented analyzer form linear string emphasis system significant address mean processing time large scale matching procedure substantially reduced description make frequent example fully operational implementation parser experimental english sentence analyzer structuring area computer central core storage individual location byte bit come represent data involved matching procedure shifting information reduced minimum searching list eliminated altogether match traced mean binary mask state single bit determines operational flow procedure method implemented interpretive grammar provided expressed functional classification item composing input hierarchical structure | von glasersfeld, e. .k parsing, syntactic analysis, natural-language analysis, linguistic data processing, computational linguistics, correlational grammar, structure recognition, pattern recognition, matching procedures, tree-structure  interpretation, machine translation, automatic abstracting .c 3.42 3.49 3.63 3.70 3.71
2114 | formal system information retrieval | generalized structure provided concept keyword index record directory structure directory decoding record retrieval defined frequently structure inverted index sequential multilist derived algorithm retrieve record generalized structure presented | hsiao, d. .k attribute-value pair, index, keyword, record, record address, k-pointer, k-list, file, directory, generalized file structure, inverted file, index-sequential-file, multilist file, description, file search, directory search, serial processing of lists, prime keyword, parallel processing of lists  .c 3.70 3.73 3.74
2115 | fortran tausworthe pseudorandom number generator | payne, w. h. .k random numbers, pseudorandom numbers, shift register sequences .c 5.5
2116 | interchange roll perforated tape information interchange proposed american national standard
2117 | representation calen dar date machine machine data interchange proposed american national standard
2118 | efficient algorithm sorting minimal storage algorithm m1 | griffin, r. redish, k. a. .k sorting,minimal storage sorting, digital computer sorting .c 5.31
2119 | derivative algorithm s22 | gautschi, w. klein, b. j. .k recursive computation, successive derivatives, error control .c 5.11 5.12
2120 | algorithm produce complex prime csieve algorithm a1 | dunham, k. b. .k primes, complex numbers .c 5.39
2121 | partition natural order algorithm a1 | mckay, j. k. s. .k partitions,number theory .c 5.39
2122 | general random number generator algorithm g5 | butler, e. l. .k random number generator, probability density function, transformation, cumulative density function .c 5.13 5.5
2123 | generator random number satisfying poisson distribution algorithm g5 | schaffer, h. e. .k poisson distribution, random number generator .c 5.5
2124 | numerical inversion laplace transforms algorithm d5 | stehfest, h. .k laplace transform inversion, integral transformations, integral equations .c 5.15 5.18
2125 | note minimal length polygonal approximation digitized contour | method extracting smooth polygonal contour digitized image illustrated ordered sequence contour point connection graph image obtained modified ledley algorithm image scan minimal perimeter polygon subjected constraint chosen approximating contour determination minimal polygon reduced nonlinear programming problem solved algorithm take account weak bond variable example presented computing time listed | montanari, u. .k digitized image, connection tree, minimal polygon, optimal approximation, nonlinear programming .c 3.63 5.13 5.17
2126 | experience extensible language | operational extensible language system system base language appraised respect efficiency flexibility utility category user | irons, e. t. .k programming languages, extensible, compiler, bootstrapping, ambiguity .c 4.12 4.22
2127 | natural language question answering system | recent experiment programming natural language question answering system reviewed summarize method developed syntactic semantic logical analysis english string concluded minimally effective technique devised answering question natural language subset small scale experimental system paradigm evolved guide research effort field approach semantic analysis logical inference seen effective beginning questionable generality respect subtle aspect meaning application large subset english generalizing small scale experiment language processing system based dictionary thousand entry correspondingly large grammar semantic system entail order complexity require invention development entirely approach semantic analysis question answering | simmons, r. f. .k question-answering, natural language, artificial intelligence,language processing, fact retrieval, semantics  .c 3.6 3.64 3.7 3.74
2128 | processor allocation method time sharing | scheduling algorithm proposed intended minimize task processor reduce head algorithm application general resource allocation problem implemented mean method efficiently handling dynamically changing segmented list | mullery, a. p. driscoll, g. c. .k time sharing, resource allocation, scheduling algorithms, monitors, dynamic allocation, processor allocation, multiprogramming, multiprocessing, time slicing, scheduling, conversational systems,  interactive systems  .c 3.80 4.30 4.31 4.32 6.33
2129 | recursive computation derivative study error propagation | study made propagation error linear order difference equation recursive computation successive derivative co considered illustration | gautschi, w. .k recursive computation, successive derivatives, error propagation .c 5.11 5.12
2130 | automatic segmentation cyclic program structure based connectivity processor timing | time shared multiprogrammed overlayed batch system frequently require segmentation computer program discrete portion program portion transferred executable peripheral storage segmentation program manner reduces frequency transfer subject paper segmentation technique proposed ramamoorthy subject limitation arise preferred segment size compatible physical restriction imposed computing equipment generalization ramamoorthy suggestion made order allow application circumstance ideal | lowe, t. c. .k automatic segmentation, cyclic program structures, loops, paging,  multiprogramming, loaders, assemblers, compilers, time-sharing, program  connectivity .c 4.19 5.24 5.32
2131 | rapid computation weight interpolatory quadrature rule d1 algorithm | gustafson, s. .k divided differences .c 5.16
2132 | rapid computation coefficient interpolation formula e1 algorithm | gustafson, s. .k divided differences, newton's interpolation formula .c 5.13
2133 | algorithm assignment problem rectangular matrix algorithm | bourgeois, f. lassalle, j. c. .k operations research, optimization theory, assignment problem, rectangular matrices .c 5.39 5.40
2134 | extension munkres algorithm assignment problem rectangular matrix | assignment problem munkres proposed algorithm solution square matrix presented author develop extension algorithm permit solution rectangular matrix timing result obtained adapted version silver algol procedure discussed relation solution time problem size | bourgeois, f. lassalle, j. .k operations research, optimization theory, assignment problem, rectangular matrices, algorithm .c 5.39 5.40
2135 | rapid computation general interpolation formula mechanical quadrature rule | let continuous closed interval let linear functional attempt made approximate polynomial approximating algorithm developed rapid computation wide class selection includes lagrangian hermitian rule special case | gustafson, s. .k linear functionals, divided differences, newton's interpolation formula .c 5.13 5.16
2136 | note modification nordsieck method step point | blumberg, j. w. foulk, c. r. .k ordinary differential equations, multi-step methods, predictor, corrector, round-off error, nordsieck's  method, gragg-stetter modification .c 5.11 5.16 5.17
2137 | lisp technique paging environment | system employ block concept global local variable addition method applied lisp system mean list representation local sequential list created compilation block level sequential created dynamically garbage collection algorithm introduced make list compact partial garbage collection performed block exit total garbage collection storage exhausted algorithm customary flagging procedure combination feature eliminated need free list effectively minimizes number page moment | rochfeld, a. .k lisp, list processing, paging, virtual memory, garbage collection, core fragmentation, compact  list structures, block, segment .c 4.12 4.22 4.32
2138 | bliss language system programming | language bliss language designed especially suitable writing production software system specific machine pdp compiler operating system prime design goal design ability produce highly efficient object code allow access relevant hardware feature host machine provide rational mean cope evolutionary nature system program major feature contributes realization goal mechanism permitting definition representation data structure term access algorithm element structure | wulf, w. a. russell, d. b. .k programming languages, implementation language, systems programming, data structures .c 4.12 4.21 4.22
2139 | implementation substring test hashing | technique implementing test determines string substring low probability test satisfied shown operation speeded considerably preceded test appropriately chosen hash code string | harrison, m. c. .k substring, hashing, subset, signature, information compression, information retrieval, searching .c 3.74 5.30 5.6
2140 | retrieval update speed tradeoff combined index | paper november communication acm lum introduced technique indexing named combined index technique permitted decreased retrieval time cost increased storage space paper examines combined index condition usage fraction retrieval update tradeoff curve developed show minimal cost usage grouping partially combined index | mullin, j. k. .k file organization, combined index files, inverted files, information retrieval, query, multi-attribute  retrieval, file update .c 3.73 3.74 3.79
2141 | algorithmic selection method compressing map data string | dozen method compressing map data illustrated choice generated encoding data string sequence code method direction relationship developed compression alternative avoid comparing technique compress data forest resource map widely applicable map photographic data reduction | amidon, e. l. akin, g. s. .k data compression, map storage, information retrieval, input/output, run coding, data reduction .c 3.71 3.74
2142 | reconstruction picture projection | situation natural science medicine electron microscopy ray photography desirable estimate gray level digital picture individual point sum gray level straight line projection angle situation picture determined problem find representative picture algorithm monte carlo method designed solve problem algorithm applicable large varied number field important reconstruction possibly asymmetric particle electron micrographs dimensional ray analysis | gordon,r. herman, g. t. .k approximation, biomedical image processing, efficient encoding, image processing, linear programming,  mathematical programming, monte carlo techniques, optimization, picture compression, picture description,  picture processing, stereology, x-ray analysis .c 3.12 3.13 3.15 3.17 3.63 5.41 5.6
2143 | chebyshev approximation continuous function chebyshev system function e2 algorithm | bolub, g. h. smith, l. b. .k approximation, chebyshev approximation, remex algorithm .c 5.13
2144 | accurate floating point summation | accumulation floating point sum considered computer performs digit base floating point addition exponent range algorithm accurately summing digit floating point number number split part forming qn digit floating point number added auxiliary digit accumulator finally accumulator added yield computed sum qn digit floating point addition performed usual condition relative error computed sum additional digit addition computed sum corrected full digit accuracy ibm typical value case 4x16 | malcolm, m. a. .k floating-point summation, error analysis .c 5.11 5.19
2145 | automation etching pattern layout | help heuristic etching pattern layout program application program developed computerize tedious error prone vitally important wiring design printed circuit board help help automate design stage step closer production logical design design wiring pattern layer circuit board ic dual line package discrete component transistor resistor help employ method wiring heuristic method simulates human approach wiring design theoretically interesting time consuming method maze running based lee algorithm help performs percent required wiring heuristic path respect performance function point point point line connection bring number successful wiring connection close percent | aramaki, i. kawabata, t. kazuhiko, a. .k heuristic etching-pattern layout, wiring design of printed circuit board, maze-running, lee's algorithm .c 3.24 3.66 4.9 6.9
2146 | optimizing polyphase sort | dispersion algorithm polyphase sorting procedure examined optimum algorithm based minimizing total number unit string read displayed logic algorithm complicated dispersion algorithm straightforward logic presented simple dispersion algorithm discussed horizontal approximately fourth half percent reading writing algorithm today additional fourth percent improvement achieved utilizing modified optimum algorithm algorithm straightforward requires fairly close estimate total number unit string dispersion begin | shell, d. l. .k sorting, polyphase sorting, dispersion algorithms, optimum dispersion algorithm, repetition operator .c 5.31
2147 | computer higher education past recommendation status need | data survey conducted national science foundation support published december reviewed pointed regard computer higher education national goal stated rosser pierce report attained quality lacking hardware course nearly half associate bachelor degree program data processing computer science offered plea made continuing study status goal computing higher education improvement degree program national testing laboratory educational technology | hamblen, j. w. .k higher education, computers, degree programs, national goals, testing laboratory, educational technology .c 1.50 1.52 1.53 2.45 3.51
2148 | composition semantics algol | main feature algol explained semantic point view shown language permit composition value action ultimately program minimum set primitive fundamental recursive rule composition syntax briefly reviewed attempt made obtain structured simple introduction algol orthogonal design | branquart, p. lewi, j. sintzoff, m. wodon, p. l. .k programming primitives, programming languages, algol, semantics, recursive composition, design  of programming languages, data structures .c 1.3 4.2 4.22 5.23 5.24
2149 | entcaf entcre evaluation normalized taylor coefficient analytic function c5 algorithm | lyness, j. n. .k taylor coefficients, taylor series, cauchy integral, numerical integration, numerical differentiation,  interpolation, complex variable, complex arithmetic, fast fourier transform .c 5.12 5.13 5.16
2150 | concurrent control reader writer | problem mutual exclusion independent process simultaneous access critical section discussed case distinct class process known reader writer reader share section writer exclusive access solution presented case wish minimum delay reader case wish writing take place early | courois, p. j. heymans, f. parnas, d. l. .k mutual exclusion, critical section, shared access to resources .c 4.30 4.32
2151 | user program measurement time shared environment | general discussion measurement software system description hardware software scheme measuring user program time shared environment tx computer mit lincoln laboratory implementation system characteristic implementation reported scenario showing system presented finally shown time sharing system provide similar measuring facility | nemeth, a. g. rovner, p. d. .k operating systems, multiprogramming systems, time-sharing systems, software measurement, user program  measurement, measurement technology, tx-2 computer, virtual computers, performance improvement .c 4.30 4.32 4.42 4.43
2152 | display procedure | structured display widespread interactive computer graphic structure present number problem tend restrict generality usefulness paper discus problem suggests alternative approach display system design avoids structured display technique employ display procedure generate information display including transformation call procedure simplify specification picture speed generation display procedure permit picture element defined conditionally facilitate processing input pointing device paper illustrated example aversion euler language display procedure implemented | newman, w. m. .k computer graphics, programming languages, display files .c 4.20 4.41
2153 | experiment automated instructional system numerical method | computer system developed purdue university teach portion undergraduate course numerical method instructional unit lesson divided mode instruction allow student press computer controlled presentation student controlled investigation system designed classroom independent course study semester student lieu conventional classroom instruction initial measure effectiveness student acceptance operational cost result testing system independent instructor intervention system operational cdc teletype terminal | oldehoeft, a. e. conte, s. d. .k computer-assisted instruction, numerical methods, cai, instructional systems .c 1.52 3.62 5.10
2154 | clarification fortran standard report | year effort fortran programming language standardized united state initial achievement study application standard specification revealed need maintenance standard result work initiated initial set clarifying interpretation prepared clarification published communication acm work continued resulted preparation set clarifying interpretation nature maintenance set correction interpretation standard specification reported | ansi subcommittee x3j3 .k american national standard, fortran, basic fortran, programming language, standardization, language  standard specification, language standard maintenance, language standard clarification, language standard  interpretation, standardization committee .c 1.2 2.0 2.19 2.2 2.3 4.0 4.12 4.19 4.20 4.22 4.29 4.43 5.23 5.9 6.9
2155 | understanding data structure | paper present notation formalism describing semantics data structure based directed graph named edge transformation graph addition implementation facility part programming language programmer expressed semantics algorithm term graph implementation data structure order gain efficiency | earley, j. .k data structures, graph, implementation, semantic formalism, programming language .c 4.22 4.9 5.24
2156 | comment cheney list compaction algorithm | fenichel, r. r. .k lisp, garbage collector, virtual memory, list processing, storage allocation  .c 4.19 4.49
2157 | average binary search length dense ordered list | flores, i. madpis, g. .k searching, binary searching, record retrieval .c 3.74
2158 | stopping criterion newton raphson method implicit multistep integration algorithm nonlinear system ordinary differential equation | liniger, w. .k ordinary differential equations, linear multistep formulas, newton-raphson method, stopping criterion .c 5.11 5.15 5.17
2159 | note sided approximation | phillips, d. l. .k best approximation, one-sided approximation, logarithmic, error, relative error .c 5.11 5.13
2160 | canonical structure attribute based organization | structure attribute based retrieval proposed paper query involving arbitrary boolean function attribute pair processed taking intersection list structure highly dependent uniquely determined specification allowed query structure retrieval basis range value attribute retrieval basis single permitted organization proposed based atom boolean algebra generated query desirable property claimed structure proved maintenance question discussed | wong, e. chiang, t. c. .k address calculation, atoms of boolean algebra, attributes, boolean functions, boolean queries,  file organization, information retrieval, inverted file, key words, multilist, queries, searches  .c 3.70 3.73 3.74
2161 | algorithm block cutnodes graph corrigendum | paton, k.
2162 | efficient bit table technique dynamic storage allocation word block | efficient bit table technique dynamic storage allocation word block requires minimized amount memory bookkeeping purpose technique tested implementation list processing language number idea incorporated processor | isoda, s. goto, e. .k bit table, dynamic storage allocation, buddy system, l^6, list processing, free storage .c 3.89 4.12 4.9
2163 | education related computer organization | acm curriculum committee computer education management carrying study curriculum development management information system education college university grant national science foundation position paper framework study preliminary conclusion presented need education administrative information system college curriculum course suggested role professional society organization computer discussed plan committee outlined initial approach committee describe education effective computer organization classify position education required survey educational program | teichroew, d. .k education, information analysis, systems design, business data processing .c 1.52 3.51
2164 | symbolic integration stormy decade | approach symbolic integration artificial intelligence led slagle saint large degree moses sin algebraic manipulation led manove implementation horowitz tobey reexamination hermite algorithm integrating rational function mathematics led richardson proof unsolvability problem class function risch decision procedure elementary function generalization risch algorithm class special function program solving differential equation finding definite integral | moses, j. .k integration, symbolic integration, definite integrals, rational functions .c 3.1 3.2 3.6 4.9 5.2 5.9
2165 | general relativity application algebraic manipulative system | paper describes application symbolic algebra system problem general relativity including derivation field equation petrov classification metric solution field equation presence matter simple case attention drawn strictly algebraic difficulty encountered work | barton, d. fitch, j. p. .k symbolic mathematics,nonnumerical mathematics, general relativity, algebraic manipulation, equation  manipulation .c 1.3 3.11 5.10
2166 | automated algebraic manipulation celestial mechanic | paper consider application automated algebraic manipulation made celestial mechanic attention paid poisson series typical problem perturbation theory requirement processor celestial mechanic considered compared general manipulation package future direction research system briefly outlined illustrate relative simplicity algorithm required celestial mechanic typical integration problem considered appendix | jefferys, w. h. .k series manipulation, automated algebra, celestial mechanics .c 5.10 5.13 5.17
2167 | algebraic simplification guide perplexed | algebraic simplification examined point view user need comprehend large expression point view designer want construct efficient system describe technique akin substitution technique decrease thesize expression make intelligible user delineate spectrum approach design automatic simplification capability algebraic manipulation system system divided type type facility manipulation simplification expression finally discus theoretical result related algebraic simplification describe positive result existence powerful simplification algorithm number theoretic conjecture rely result nonexistence algorithm class expression included | moses, j. .k algebraic manipulation, algebraic simplification, canonical simplification .c 3.1 3.2 3.6 4.9 5.2 5.9
2168 | list tracing system allowing multiple cell type | list processing system allowed single size configuration list cell paper system arbitrarily size configuration list cell possibly run time | fenichel, r. r. .k list-processing, storage allocation, lisp, slip, based storage, pointers .c 4.49
2169 | altran system rational function manipulation survey | altran complete system symbolic computation rational function variable integer coefficient designed implemented handle large problem ease efficiency considerable effort spent ensure minimum amount machine dependence implementation permitting system installed quickly easily variety computing machine paper description language run time data structure implementation | hall jr., a. d. .k symbolic algebra, rational function manipulation, polynomial manipulation, interpreters, translators .c 4.13 4.29
2170 | application symbol manipulation theoretical physic | paper survey application symbolic computation technique problem theoretical physic emphasis application quantum electrodynamics activity occurred | hearn, a. c. .k symbol manipulation, algebraic simplification, computational physics, quantum electrodynamics .c 3.17 4.22
2171 | solution simultaneous nonlinear equation | raduchel, w. j. .k nonlinear equations .c 5.15
2172 | graph plotter j6 algorithm | cermak, j. .k plot, graph, line printer plot .c 4.41
2173 | procedure stable marriage problem algorithm | mcvitie, d. g. wilson, l. b. .k assignment problems, assignment procedures, combinatorics, discrete mathematics, operations research,  stable marriage problem, university entrance .c 5.30
2174 | stable marriage problem | original work gale shapley assignment method stable marriage criterion extended find stable marriage assignment algorithm derived finding stable marriage assignment proved satisfy condition problem algorithm applies paper | mcvitie, d. g. wilson,l. b. .k assignment problems, assignment procedures, combinatorics, discrete mathematics, operational research,  stable marriage problem, university entrance .c 5.30
2175 | subexpression ordering execution arithmetic expression | arithmetic expression broken component subexpressions depending hardware environment expression executed subexpressions evaluated serial parallel combination mode paper show expression execution time minimized consideration ordering subexpressions subexpressions executed order decreasing memory processor time requirement observation valid configuration ranging uniprocessor unbuffered main memory multiprocessor cache buffer memory number subexpressions executed parallel exceeds number processor execution subexpressions postponed procedure combine requirement earlier ordering consideration provide optimal execution sequence | ramamoorthy, c. v. gonzalez, m. j. .k parallel processing, cache, arithmetic expressions, subexpression ordering, computational trees,  compilers .c 4.12 4.32
2176 | buffer allocation merge sorting | fixed buffer allocation merge sorting presented minimizes number input output operation order merge sorting movable arm disk number seek equal number input output operation seek time control sort time standard terminology introduced input buffer allocation method analysis improvement expected conventional allocation analysis make distribution function analysis completely distribution yield similar result suggests result depend distribution function optimum output buffer size determined concluded buffering allocation significantly reduce time merge sorting movable arm disk input data random output buffer allocation data random | ferguson, d. e. .k file, item, string, merge sort, seek time, gamma distribution function .c 4.41 5.31
2177 | algorithm block cutnodes graph | efficient method presented finding block cutnodes arbitrary undirected graph graph represented ordered list edge ii packed adjacency matrix denotes word length machine employed storage machine word required graph node edge increase essentially case win case ii spanning tree labeled edge grown edge finally bearing label belong block representation time required analyze graph node increase depends type graph bound attained value derived suitable family test graph generated extension web grammar approach algorithm compared detail proposed read | paton, k. .k algorithm, block, block-cutpoint-tree, cutnode, fundamental cycle set, graph, lobe, lobe decomposition  graph, separable, spanning tree, web grammar .c 5.32
2178 | language extension graph processing formal semantics | simple programming language extension graspe processing directed graph defined graspe consists type directed graph data structure set primitive operation manipulating structure graspe easily implemented embedding host language emphasis graspe method definition commonly definition language involves definition syntactic element explanation meaning assigned semantics definition graspe solely term semantics data structure operation defined precisely assignment syntactic representation language implemented assignment explicit syntax implementation graspe embedded lisp illustration advantage disadvantage definition language term semantics discussed | pratt, t. w. friedman, d. p. .k graph processing, programming language, formal semantics, directed graph, lisp, network, data structure,  flowchart, syntax, language definition .c 4.20 4.22 5.23 5.24 5.32
2179 | simple lr grammar | class context free grammar called simple lr slr grammar defined class shown include weak precedence simple precedence grammar proper subset construct parser slr grammar shown parser construction technique extendible cover lr grammar knuth implemented direct comparison proved superior precedence technique range grammar covered speed parser construction size speed resulting parser | deremer, f. l. .k context-free grammar, lr(k) grammar, precedence grammar, syntactic analysis, parsing algorithm,  parser, finite-state machine, deterministic pushdown automaton .c 4.12 5.22 5.23
2180 | programmer training project | project purpose train selected black resident albany schenectady area computer programming arrange job computer field organization curriculum course discussed | bernstein, a. j. .k programmer training, job opportunities, fortran .c 1.59
2181 | state computer oriented curriculum business school | acm committee computer education management supported national science foundation grant established appraise state art develop series recommendation improving computer education management provide committee material study curricular need regional meeting united state held broad cross section invited academician practitioner considered state curriculum business school topic covered curriculum general manager computer related material required functional course curriculum student concentrating computer based information system analysis minute meeting revealed common set experience raised similar pedagogic economic issue presentation summary discussion condensation pedagogic substantive concern raised consideration resource allocation issue involved preliminary committee recommendation improving computer education management report prepared provide participant administrator institution background information ongoing task course development chairman ten man committee daniel teichroew university michigan | mckenney, j. l. tonge, f. m. .k university programs, management education, curriculum design, business administration curricula,  graduate business school resource planning .c 1.52 3.5
2182 | interrupt driven programming | zelkowitz, m. .k interrupts, supervisors, monitors, debugging, parallel processing, associative memories, microprogramming .c 3.51 4.32 4.42
2183 | binary summation | walker, r. j. .k summation, binary summation, floating-point addition, round-off errors .c 5.11
2184 | meaning name programming system | assumed similarity function data name programming language name operating system function discussed term basic concept order identify extent overlap suggested similarity idea directory storable object type context manipulation context discussed length noted simple extension church lambda notation deal nicely idea context manipulation function regarded abstraction based term expression lambda list expression list found context viewed abstraction based term equivalent expression mu list list expression | fraser, a. g. .k file, operating system, programming language, functions, names, context, file directory, file dictionary,  lambda calculus, theory of programming .c 3.73 4.22 4.39 5.23 5.24
2185 | note compiling fixed point binary multiplication | algorithm developed compiling sequence shift addition subtraction fixed point binary multiplication involving constant significant characteristic algorithm simplicity test determines algorithm applied degree suggests efficient object code | glaswin, h. t. .k compiling multiplications, fixed point arithmetic .c 4.12
2186 | numerical property ritz trefftz algorithm optimal control | paper ritz trefftz algorithm applied computer solution state regulator problem algorithm represents modification ritz direct method designed improve speed solution storage requirement point real time implementation feasible modification shown stable computationally traditional ritz approach concern paper describe algorithm establish property valid numerical technique property definiteness reasonableness condition established method part paper devoted comparison technique standard procedure numerically integrating matrix riccati equation determine feedback matrix technique shown significantly faster comparable accuracy | bosarge jr., w. e. johnson, o. g. .k splines, regulator problem, control theory, numerical analysis .c 5.1
2187 | computer science conceptual framework curriculum planning | view computer science considered global view attempt capture broad characteristic field relationship field local view focus structure field structure presented term kind knowledge problem activity exist discipline relation approach curriculum planning computer science presented guided structure field fact change important feature situation expectation computer science continue increase working contact discipline | amarel, s. .k computer science, curriculum planning, education .c 1.0 1.52
2188 | approach optimum design computer graphic system | display system designer faced difficult task selecting major subsystem intelligent subsystem chosen large number alternative selection based consideration system response time system cost distribution data storage processing graphic processor supporting data processing system work reported develops objective quantitative design procedure help give understanding configure display system accomplished mean mathematical model computer driven graphic system parameter model function capability graphic hardware computational requirement graphic application model analyzed numerical queueing analysis simulation obtain average response time prediction combining model optimization graphic system configuration subject cost constraint found application optimum configuration turn find general display system design guideline | foley, j. d. .k design guidelines, graphic display systems, mathematical model, optimum system design, queueing  model .c 3.8 6.22 6.35
2189 | generation rosary permutation expressed hamiltonian circuit | systematic generation specific class permutation fundamental scheduling problem nonoriented complete graph vertex hamitonian circuit equivalent specific permutation element termed rosary permutation defined corresponds circular permutation mirror image generated successively number system covering set edge set edge determined recursively constructing hamiltonian circuit vertex hamiltonian circuit vertex starting hamiltonian circuit vertex basic operation consists transposition pair adjacent vertex position pair permutation determined algorithm treating vertex presented easy derive permutation rosary permutation cycling permutation taking reverse order procedure performed fairly efficiently computer | harada, k. .k permutation, graph theory, scheduling, combinatorial algebra .c 5.32 5.39
2190 | function minimization | house, f. r.
2191 | algorithm partial sorting m1 | chambers, j. m. .k sorting, partial sorting order statistics .c 5.11 5.13
2192 | recursion induction principle | inductive method proving thing recursively defined function shown proving partial function equivalent applicable proof interpreter programming language | morris jr., j. h. .k recursion, induction, correctness, proofs, compiler correctness .c 4.13 4.2 5.24
2193 | implementation label variable | variable label mode conventionally implemented technique fails trap programming error fine grained calendar clock recently allow implementation label variable technique trap programming error variety | fenichel, r. r. .k labels, compiler, interpreter, go to, transfer .c 4.22
2194 | address short | algorithm presented minimizing sum length block coding produced assembler compiler length computer instruction assumed long short long memory location addressed predetermined distance location short block instruction beginning origin separated prespecified amount computer permit bit addressing interpreted relative location counter full bit addressing memory assembling compiling block instruction mutual reference computer simple iterative procedure keeping address short paper demonstrates wide class problem type formulated covering problem solvable mean elementary arithmetic operation column vector ternary matrix | richards, d. l. .k addressing, assembler, covering problem, integer programming, variable-length addressing .c 4.11 4.12 4.21 5.41
2195 | optimal detection curve noisy picture | technique recognizing system line presented technique heuristic problem embedded recognition algorithm expressed figure merit multistage decision process able recognize input picture optimal system line according figure merit due global approach greater flexibility adequacy problem achieved relation structure figure merit complexity optimization process discussed method suitable parallel processing operation relative state computed parallel number stage equal length curve log2 approximate method | montanari, u. .k picture processing, picture recognition, picture description, curve detection, line detection,  edge detection,optimal detection, heuristic methods, global recognition, parallel processing, dynamic  programming, interaction graph, secondary optimization problem .c 3.63 3.66 5.42
2196 | man machine approach solving traveling salesman problem | traveling salesman problem belongs important class scheduling routing problem subproblem solving warehouse distribution problem attacked mathematical method meager success special form problem problem moderate number point solved exactly large amount computer time heuristic procedure proposed tested slightly result paper describes computer aided heuristic technique modest amount computer time real time solve large point problem technique take advantage computer human problem solving ability computer asked solve problem brute force today heuristic asked organize data human human solve problem easily technique paper point direction field man machine interaction field artificial intelligence | krolak, p. felts, w. marble, g. .k heuristic procedures, computer-aided heuristic technique, man-machine interaction, artificial intelligence,  assignment problem, mask of the assignment, rubber band tour generator, interaction process, traveling  salesman problem .c 3.57 3.66 5.30
2197 | merit regional computing network | suggested mean stimulating spread computing capability institution higher learning construction regional computing network network constructed san francisco bay area stanford university paper report lesson learned operation network past year major impact network computer power delivered school awakening computing awareness fostering capability development school expertise assistance central facility sharing idea participant important benefit quality variety service provided central facility found play key role effectiveness network regional network brings benefit judged purveyor raw computer power | nielsen, n. r. .k computer sharing, computer utility, cooperative networks, curriculum development, educational computing,  network computing, regional computing networks, remote computing, shared computing .c 1.52 2.11
2198 | introduction feature analysis generalized data base management system | paper separately published introduction main report analyzes feature generalized data base management system introduction review state art system discus difference similarity capability found host language system found contained system discussion problem data independence binding user level identified technical problem facing future designer handling existing stored data providing complex data structure conventional programming language problem high level interrogation update function acting network structure mentioned discussion problem catering high volume transaction initiated terminal parametric user lowest level user cobol basis development work considered length respect data structure host language capability contained capability section ass effect data base task group proposal final section outline ten major topic main body full report | codasyl systems committee .k data base management systems, programming languages, data structures, storage structures, information  retrieval, transaction processing .c 3.5 3.70 3.72 3.73 3.74 4.29
2199 | sparse matrix package part f4 algorithm | mcnamee, j. m. .k matrix, sparse matrix, matrix manipulation .c 5.14
2200 | complement division | division algorithm theorem expressed form permit serve basis devising division operation produce quotient remainder complement form algorithm division yielding complement result derived number represented base greater radix radix complementation scheme considered binary form algorithm includes complement implementation problem quotient overflow complement result dealt selecting form remainder condition complement division | stein, m. l. munro, w. d. .k division algorithm, complement arithmetic, complement division, one's complement arithmetic, two's  complement arithmetic .c 3.15 4.0 4.9 5.11 6.32
2201 | animator line dimensional film animation system | animator computer animation system designed overcome inherent disadvantage conventional computer animation technique dec serf input terminal movie making allowing trial error design picture sequence conversational mode stage system input element light pen pushbuttons teletype maintained user request record ibm instruction produce sequence picture generated anticipated primary contribution animator provision facility allow professor produce expository film strip | talbot, p. a. carr iii, j. w. coulter jr., r. r. hwang, r. c. .k computer graphics, computer animation, on-line systems, two-dimensional languages, crt, microfilm  recorder .c 3.41 3.80 4.22
2202 | dynamic microprogramming processor organization programming | dynamically microprogrammed processor characterized small bit word read write micro storage access time storage similar cycle time machine nsec microstorage data subroutine micro instruction processor differ conventional perform purely combinatorial operation sequencing control microinstruction presence read write microstorage permit flexible assignment resource read storage processor developed paper stress simultaneous operation microinstruction adder shifter masker testing facility processor microassembly language developed overhead involved subroutine linkage analyzed efficiency flexible software linkage scheme examined overhead subroutine characteristic finally example problem oriented programming considered resulting coding compared system assembly language version technology normalized | tucker, a. b. flynn, m. j. .k microprogramming,read-write microstorage, subroutine linkage, execution speed  .c 6.2
2203 | key address transform technique fundamental performance study large existing formatted | result study key address transformation method applied set existing presented method applied load factor bucket size varied wide range addition variable pertinent specific method take value performance method summarized term number access required record number overflow record created transformation peculiarity method discussed practical guideline obtained result stated finally proposal quantitative fundamental study outlined | lum, v. y. yuen, p. s. t. dodd, m. .k hashing, hashing techniques, hashing methods, hash coding, keys, key transformation, key-to-address  transformation, direct addressing, direct access method, randomizing, random access,file addressing,  file organizations, file structures, scatter storage, search, collisions, clusters, information retrieval .c 3.7 3.72 3.73 3.74 3.79 4.9
2204 | program development stepwise refinement | creative activity programming distinguished coding taught example serving exhibit technique considered sequence design decision concerning decomposition task subtasks data data structure process successive refinement specification illustrated short nontrivial number conclusion drawn regarding art instruction programming | wirth, n. .k education in programming, programming techniques, stepwise program construction .c 1.50 4.0
2205 | difsub solution ordinary differential equation d2 algorithm | gear, c. w. .k differential equations, stiff differential equations .c 5.17
2206 | exact solution linear equation residue arithmetic f4 algorithm | howell, j. .k residue arithmetic, symmetric residue, modulus, mixed-radix representation, symmetric mixed-radix  representation, mixed-radix conversion, prime number, linear equations, gaussian elimination, matrix  inversion, determinant, adjoint matrix, ill-condition .c 3.15 5.14
2207 | automatic integration ordinary differential equation | integration technique automatic solution initial problem set ordinary differential equation criterion selection order approximation proposed objective criterion increase step size reduce solution time option permit solution stiff differential equation program embodying technique discussed appears algorithm | gear, c. w. .k differential equations, stiff equations, integration, step control, order control .c 5.17
2208 | storage utilization memory hierarchy storage assignment performed hashing algorithm | utilization storage studied level memory hierarchy storage level fast store divided number storage area entry filed hierarchy hashing algorithm attempt place entry area area full entry slower level store area level store space entry filed entire hierarchy expression derived expected number entry filed level store expression measure effectively level store mean example storage utilization studied function hashing algorithm number storage area level store divided total size level store | williams, j. g. .k hashing algorithms, memory allocation, memory hierarchy, memory utilization, storage allocation,  storage hierarchy, storage utilization .c 3.74 4.3
2209 | scheduling algorithm computer assisted registration system | paper present scheduling algorithm computer assisted registration system university tennessee notation defined logic algorithm implement educational policy result term implementation presented | winters, w. k. .k computer assisted registration, scheduling algorithm, timetable .c 3.32 5.39
2210 | automatic program synthesis | elementary outline theorem proving approach automatic program synthesis dwelling technical detail method illustrated automatic construction recursive iterative program operating natural number list tree order construct program satisfying specification theorem induced specification proved desired program extracted proof technique applied transform recursively defined function iterative program frequently major gain inefficiency emphasized order construct program loop recursion principle mathematical induction applied relation version induction rule form program constructed explored detail | manna, z. waldinger, r. j. .k artificial intelligence, answer extraction, automatic program synthesis, mathematical induction  principle, problem solving, theorem proving .c 3.64 5.23 5.24
2211 | scanned display computer graphic | television scanned display system successfully implemented honeywell ddp computer installation scanned image stored core memory computer software scan conversion convert rectangular coordinate point word bit output display array core storage result flicker free display large amount data reasonably fast graphical interaction scanned image size point displayed frame rate | noll, a. m. .k computer graphics, scanned-display, scan conversion, raster displays .c 4.41 6.35
2212 | distribution | tolman, h. .k fisher's f-distribution, student's t-distribution .c 5.5
2213 | root matrix pencil generalized eigenvalue problem f2 algorithm | dell, a. m. weil, r. l. thompson, g. l. .k eigenvalues, matrix roots, pencil roots .c 5.1 5.3
2214 | complex interval arithmetic | complex interval arithmetic defined real interval arithmetic complex interval division defined assure smallest resulting interval | rokne, j. lancaster, p. .k real intervals, real interval arithmetic, complex intervals, complex interval arithmetic .c 5.11
2215 | application game tree searching technique sequential pattern recognition | sequential pattern recognition spr procedure test feature pattern selects feature tested receiving result test procedure classifies unknown pattern selects feature tested medical diagnosis spr paper author suggest spr viewed person game played nature chance virtually powerful technique developed searching person strictly competitive game tree easily incorporated directly analogy spr procedure incorporate mini average backing procedure gamma procedure analogue minimax backing procedure alpha beta procedure computer simulated experiment character recognition presented result approach promising | slagle, j. r. lee, r. c. t. .k sequential pattern recognition, game tree searching, game against nature, gamma procedure, mini average  backing-up procedure, dynamic programming, branch-and-bound approach, optimal solution .c 3.60 3.63 5.42
2216 | probability distribution value binary tree | integral equation derived generating function binary tree value value reflecting sorting effort analysis assume uniformly distributed branching ratio applicable family sorting algorithm discussed hoare singleton van emden solution integral equation advanced algorithm family make minor reduction expected sorting effort substantially reduces variance sorting effort statistical test value thousand tree point moment distribution function satisfactory agreement moment computed generating function empirical test analytical result agreement previously published result moment case uniform nonuniform distribution branching ratio moment case uniform distribution branching ratio | hurwitz jr., h. .k binary trees, sorting, statistical analysis .c 4.40 5.18 5.5
2217 | experiment automatic learning multipurpose heuristic program | automatic learning capability developed implemented multiple multipurpose program learns heuristic tree searching program presently applied resolution theorem proving predicate calculus multiple proving program pp evaluation function guide search proof goal achievable thirteen general feature predicate calculus clause created automatic learning evaluation function pp multiple regression program produce optimal coefficient linear polynomial function term feature automatic data handling routine written passing data learning program proving program analyzing summarizing result data generally collected learning regression analysis experience pp number experiment performed test effectiveness generality learning program result showed learning produced dramatic improvement solution problem domain collection learning data learning shown generalize successfully domain data collection experiment demonstrated learning program simultaneously improve performance problem specific domain problem variety domain variation learning program tested | slagle, j. r. farrell, c. d. .k learning, theorem-providing, heuristic, automatic learning, self-modifying,tree-searching, artificial  intelligence, problem-solving, adaptive, lisp, multiple regression, resolution .c 3.62 3.64
2218 | analysis time sharing technique | effectiveness time sharing technique program relocation disk rotational delay minimization swap volume minimization investigated summary data presented finding discussed vehicle investigation simula based simulation model reflecting early framework planned burroughs b6500 time sharing system b6500 system based variable sized segment dynamic overlay procedure data presented indication effectiveness type organization time sharing environment design characteristic operational capability simulation model | nielsen, n. r. .k b6500, bulk core usage, operating system model, relocation, rotational delay minimization, simulation,  swap volume minimization, system simulation, time-sharing .c 3.9 4.32
2219 | policy driven scheduler time sharing system | service received process time sharing operating system characterized resource count sum ij ij number unit service received process resource cost unit service class user characterized policy function specifies amount service user belongs class receive function time priority dynamically function difference service promised user policy function service actually receives scheduling swapping algorithm keep resource count process policy function provide level service overhead reduced avoiding swap process received level service algorithm implemented general purpose operating system provided significantly service interactive batch job previous scheduler | bernstein, a. j. sharp, j. c. .k scheduler, time-sharing, operating system, resource allocation and swapping .c 4.32
2220 | conversion limited entry decision table computer program proposed modification pollack algorithm | pollack proposed algorithm converting decision table flowchart minimize subsequent execution time compiled computer program modification algorithm proposed relies shannon noiseless coding theorem communication concept entropy completely test rule modification completely test rule result execution modification modification result modification guarantee globally optimal solution | shwayder, k. .k coding, decision table, entropy, information theory, noiseless channel, sorting .c 3.50 5.31
2221 | comment conversion decision table computer program | pollack, s. l. .k decision tables, diagnostic aids, system analysis, business applications .c 3.50 3.59 4.19 4.29 4.49
2222 | comment london certification algorithm | redish, k. a. .k proof of algorithms, debugging, certification, metatheory,  sorting, in-place sorting .c 4.42 4.49 5.24 5.31
2223 | minit algorithm linear programming algorithm | kolm, a. dahlstrand, t. .k linear programming, dual simplex method, primal problem, dual problem .c 5.41
2224 | complex gamma function s14 algorithm | lucas jr., c. w. terrill, c. w. .k gamma function, poles of gamma function, stirling's asymptotic series, recursion formula, reflection  formula .c 5.12
2225 | circular integer partitioning a1 algorithm | coleman, m. w. taylor, m. s. .k partitions, combinatorics, statistical design of experiments .c 5.39 5.5
2226 | evidence analysis algorithm programming problem | purpose note report computational experience additional recently summarized gue al algorithm linear programming problem error gue paper corrected utility algorithm suboptimizer | proll, l. g. .k operations research, integer programming, zero-one variables, algorithms .c 5.39 5.41
2227 | proof program find | proof correctness algorithm find informal description purpose program method systematic technique constructing program proof process coding prevent intrusion logical error proof termination treated separate exercise finally conclusion relating general programming methodology drawn | hoare, c. a. r. .k proofs of programs, programming methodology, program documentation, program correctness, theory  of programming .c 4.0 4.22 5.21 5.23 5.24
2228 | comment prevention system deadlock | habermann method deadlock prevention discussed deadlock defined system state resource allocation process shown scheduler introduce artificial deadlock habermann method prevent permanent blocking situation process receive resource request shown deadlock prevention necessarily eliminate permanent blocking method preventing permanent blocking | holt, r. c. .k multiprogramming, time-sharing, scheduling, resource allocation, deadlock, lockout, deadly embrace,  knotting  .c 3.72 4.32 6.20
2229 | construction rational negative power formal series | method generation fractional negative power formal series poisson series chebyshev series shown elementary operation addition subtraction multiplication rational positive negative power series constructed basically approach binomial theorem iteration method method relationship pointed known classical formula obtained case shown convergence property formula improved additional computation finally end article numerical experiment chebyshev series fourier series | brucke, r. a. .k series expansion, series inversion, root extraction, binomial theorem, newton iterations, chebyshev  series, poisson series, fourier series .c 3.11 3.15 3.21 5.0
2230 | language treating geometric pattern dimensional space | paper cadep problem oriented language positioning geometric pattern dimensional space presented language specifically designed automatic generation integrated circuit mask turn suited placement problem architecture design urban planning logical block diagram representation design criterion structure specific feature cadep illustrated | bracchi, g. ferrari, d. .k graphic language, problem-oriented language, two-dimensional patterns, graphic display, fortran  extension, layout problems, integrated circuit, architecture design, urban planning .c 3.23 3.24 3.25 4.22
2231 | reconstruction binary pattern projection | horizontal vertical projection finite binary pattern construct original pattern paper give characterization pattern reconstructable projection algorithm developed reconstruct unambiguous ambiguous pattern shown unambiguous pattern perfectly reconstructed time pattern similar ambiguous pattern constructed time dimension pattern frame | chang, s. .k pattern reconstruction, image reconstruction, data compression, pattern recognition, integral geometry .c 3.63 5.30
2232 | pattern width angle | pattern feature width function angle posse interpretation demonstrated paper review width concept pattern recognition geometrical concept object work clarify word description made precise computer algorithm feature extraction obtained focus theoretical subject matter result consist set theoretic definition width angle theorem relating pattern boundary radius vector description alternate width width calculated illustrative graphical tabular comparison substantial variation width angle magnitude found principal conclusion set theoretic width angle pattern feature easily computed investigation information contained part width function recommended case computation width angle difficult | klinger, a. .k feature extraction, pattern recognition,figure properties, picture processing, integral geometry,  width-at-angle, extent, integral projections, linear pattern measures, width functions .c 3.60 3.62 3.63 5.12
2233 | signature simulation cryptographic code | cypher allegedly authored thomas jefferson beale subject intensive study year generation cryptanalyst expended untold man year success attempting tode code vast army fortune hunter treasure seeker devoted herculean labor digging rolling hill virginia trying locate promised bonanza history pertinent activity fill volume student cryptography nagging doubt cypher authenticity alleged known solution cypher number deposited county bedford mile buford excavation vault aid unsanitized version declaration independence merely superb imaginative grandiose hoax perpetrated age ago reason modern computer technology obviously perform signature analysis process encoding yield clue deeper insight construction benefit uninitiated encoding method cypher employ document word simply numbered consecutively letter word sought random match letter word sought random match letter clear text message sequence number match written final code primitive process advantage relative security source document known moment cypher decoded grader work completed help univac includes numerous analytical study beale cypher type simulation turned entire process simulated encoding scheme machine analyzed signature synthetic code encoded message hand text variety method obtain signature simulation provide convincing evidence signature process data dependent strongly mr beale cypher real merely matter time find correct source document locates vault common wealth virginia | hammer, c. .k thomas jefferson beale, codes, cryptanalysis, cyphers, decoding, declaration of independence, encoding,  magna carta, pseudotext, signature, simulation .c 3.42 3.63 3.65 3.71
2234 | root matrix pencil algorithm r405 | heiberger, r. m. .k eigenvalues, matrix roots, pencil roots .c 5.1 5.3
2235 | decision table translation algorithm r394 | marshall, d. r. t. .k decision table, decision table translation .c 4.19
2236 | remark characteristic value solution mathieus differential equation exponential integral system hyperbolic algorithm r352 r385 r392 | frisch, m. j. .k ansi fortran standard .c 4.0 4.22
2237 | bandsolve algorithm r195 | schuegraf, e.
2238 | square surface fit algorithm r176 | schuegraf, e.
2239 | squank algorithm c379 | hallet, p. mund, e. .k numerical integration, integration rule, adaptive integration, automatic integration, simpson's  rule, numerical quadrature, quadrature rule, adaptive quadrature, automatic quadrature, round-off error  control .c 5.16
2240 | pseudo random number g5 algorithm c266 | sullins, w. l. .k pseudo-random numbers, testing random number generators .c 5.5
2241 | product type point gauss legendre simpson integration d1 algorithm a439 | boland, w. r. .k numerical integration, product type quadrature, gaussian quadrature, simpson's rule .c 5.16
2242 | product type point gauss legendre simpson integration d1 algorithm a438 | boland, w. r. .k numerical integration, product type quadrature, gaussian quadrature, simpson's rule .c 5.16
2243 | product type simpson integration d1 algorithm a437 | boland, w. r. .k numerical integration, product type quadrature, simpson's rule .c 5.16
2244 | product type trapezoidal integration algorithm a436 | boland, w. r. .k numerical integration, product type quadrature, trapezoidal integration .c 5.16
2245 | trace driven modeling analysis cpu scheduling multiprogramming system | microscopic level job stream data obtained production environment event driven software probe drive model multiprogramming computer system cpu scheduling algorithm model systematically varied technique called trace driven modeling accurate replica production environment testing variation system time alteration scheduling method easily carried controlled effect relationship isolated scheduling method tested included worst method traditional method multiprogramming theory round robin come served dynamic predictor relative absolute performance scheduling method concluded successful cpu scheduling method preemptive prevent job holding cpu long period | sherman, s. baskett iii, f. browne, j. c. .k scheduling, cpu scheduling,multiprogramming, performance measurement, trace driven models .c 4.10 4.20 4.31 4.32
2246 | level language portable software | increasing amount software implemented portable form popular accomplishing encode software specially designed machine independent language map language macro processor assembly language desired object machine design machine independent language key factor operation paper discus relative merit pitching language high level low level present comparative result | brown, p. j. .k portable software, level of language, machine independent, macro processor, efficiency .c 4.12 4.21 4.22
2247 | criterion decomposing system module | paper discus modularization mechanism improving flexibility ad comprehensibility system allowing shortening development time effectiveness modularization dependent criterion dividing system module system design problem presented conventional unconventional decomposition shown unconventional decomposition distinct advantage goal outlined criterion arriving decomposition discussed unconventional decomposition implemented conventional assumption module consists subroutine efficient case alternative approach implementation effect sketched | parnas, d. l. .k software, modules, modularity, software engineering, kwic index, software design .c 4.0
2248 | method solution cauchy problem parabolic equation | integral equation representation parabolic partial differential equation equation defined unbounded domain initial cauchy problem solution integral equation method successive approximation inherent advantage method error bound method order increment size depending finite difference approximation involved | moore, j. robinson, p. .k parabolic equations, the cauchy problem, method of successive approximations .c 5.17
2249 | comparison multivariate normal generator | method generating outcome multivariate normal random vector variance covariance matrix presented comparison made determine method requires computer execution time memory space utilizing ibm method basis standard gaussian random number generator result comparison method based triangular factorization covariance matrix generally requires memory space computer time method | barr, d. r. sezak, n. l. .k random number generator, normal distribution, multivariate normal distribution, multivariate normal  generator .c 3.65 5.5
2250 | computer method sampling exponential normal distribution corrigendum | ahrens, j. h. dieter, u.
2251 | weighted increment linear search scatter table | linear search hash table increment step function key addressed presented comparison known method term efficiency computation complexity method applies table size full table searching practically eliminates primary clustering low cost | luccio, f. .k linear search, weighted increment search, scatter storage, hash table, key, hash address, clustering,  search length .c 3.73 3.74 4.9
2252 | method incrementally compiling language nested statement structure | method incremental compilation presented applies especially programming language statement nested algol pl method permit editing source language general purpose text editor incremental processing frequent recompilation entire routine essential point method syntax language restricted insof ar construct occur line internal data structure called skeleton maintained represent statement structure recompilation partially batched sense recompilation modified line occur set editing command received parsing compilation factored part individual line globally handle relationship line | earley, j. caizergues, p. .k incremental compiler, interactive programming language  .c 4.12 4.22
2253 | index range matrix calculus | paper describes scheme symbolic manipulation index expression arise product symbolic manipulation expression matrix calculus author previous paper scheme attempt program optimization transforming original algorithm machine code goal generate code handling tedious address calculation necessitated complicated data structure paper preoccupied indexing position relationship indexing indexing position discussed | bayer, r. witzgall, c. .k address calculations, algorithm transformation, compilation, data structures, indexing by name,  indexing by position, index domain, index map, index range, matrix expressions, normal form, programming  languages, program optimization, range operations, symbolic manipulation, syntactic analysis, well-formed  expressions .c 4.12 4.22 5.14
2254 | dynamic partitioning array language | classical process partitioning array subarrays extended array language operation mode partitioning defined type array subarrays vary original array nearly arbitrary manner definition motivated realistic example illustrate partitioning array language general interest data structure partitioning consists dynamic tree structure derive maintain array control information sufficient detail design array language description presented paper implemented array language ol development university illinois | phillips, j. r. adams, h. c. .k dynamic partitioning, array partitioning array language, data structure, tree structure, programming  language design, array control blocks, partition control blocks .c 4.12 4.2 4.22
2255 | comment moorer music computer composition | smoliar, s. w. .k artificial intelligence, heuristic programming, models of cognitive processes, computer music,  computer composition, music theory .c 3.44 3.65
2256 | comment dijkstra concurrent programming control problem | eisenberg, m. a. mcguire, m. r. .k critical section, concurrent programming control, multiprocessing .c 4.32
2257 | note optimal doubly chained tree | kennedy, s. .k file searching, doubly-chained tree, binary search tree .c 3.73 3.74 5.32 5.6
2258 | additional result key address transform technique fundamental performance study large existing formatted | lum, v. y. yuen, p. s. t. .k hashing, hashing techniques, hashing methods, hash coding, keys, key transformation, key-to-address  transformation, direct addressing, direct access method, randomizing, random access file organization,  file search, scatter storage, information retrieval .c 3.7 3.72 3.73 3.74 3.79 4.9
2259 | modified incomplete gamma function s14 algorithm a435 | fullerton, w. .k modified incomplete gamma function, incomplete gamma function, chi-square distribution function,  poisson distribution function .c 5.13
2260 | exact probability contingency table g2 algorithm a434 | march, d. l. .k probability, contingency table, test of significance .c 3.5 5.5
2261 | approximate method generating symmetric random variable | method generating value continuous symmetric random variable fast requires essentially computer memory easy developed method uniform random number source based inverse function lambda distribution turkey approximates continuous theoretical distribution empirical distribution frequently simulation method simulation practitioner | ramberg, j. s. schmeiser, b. w. .k simulation, monte carlo, probability, statistics, approximations, random variables, random numbers,  moments, distribution .c 5.5 8.1
2262 | garbage collection virtual memory computer system | list processing typically growing demand space program execution paper examines practical implication growth virtual memory computer system proposes garbage collection technique virtual memory system compare traditional method discussion simulation | baecker, h. d. .k garbage collection, virtual memory, list processing, paging, segmentation, page tables .c 4.32
2263 | conversion limited entry decision table optimal optimal flowchart algorithm | algorithm deriving optimal optimal flowchart limited entry decision table presented take account rule frequency time needed test condition algorithm called optimum finding algorithm lead flowchart truly minimizes execution time decision table simple rule contracted complex rule called optimum approaching algorithm requires fewer calculation necessarily produce optimum flowchart algorithm derived treating decision table rule optimum approaching algorithm shown equally valid table including rule algorithm compared existing applied large decision table derived real case comparison conclusion drawn optimum approaching algorithm lead result comparable existing require computation time general greater computation effort needed applying optimum finding algorithm justified small reduction execution time obtained | verhelst, m. .k decision table, flowcharting, preprocessor, optimal programs, search .c 3.50 3.59 4.19 4.29 4.49 5.31
2264 | derived semantics programming language construct | construct simple programming language introduced informally term value side effect translator defined translates language flowchart simple machine action machine executing flowchart defined proof constructed effect translating executing program expressed solely term side effect program course constructing proof formal definition concept side effect derived order make proof rigorous correctness implementation involves checking definition derived step acceptable formalization informal description step | henderson, p. .k lambda calculus, formal description, program correctness, programming languages, semantics .c 4.22 5.23 5.24
2265 | model type checking | programming language treat computation class object number string label function correct compilation execution question arises program properly constructed operation operand compatible activity answering question called type checking paper attempt isolate notion type checking present partial solution type checking problem based notion abstraction application function program mapped expression decidable subset lambda calculus characterizes type relation program eliminates information determination type wise correctness incorrectness program resolved reducing lambda calculus expression normal form constant correct type wise correct program constant error application type checking algol made attendant problem faced notion type checking discussed | ledgard, h. f. .k type checking, types, lambda calculus, models for programming languages, syntax, semantics, compiler  writing, language implementation, formal definition .c 4.12 4.22 5.2 5.21 5.23
2266 | highly parallel algorithm approximating zero polynomial real zero | algorithm based newton method simultaneously approximates zero polynomial real zero algorithm conceptually suitable parallel computation determines starting value convergence zero guaranteed multiple zero multiplicity readily determined point method polynomial deflation | patrick, m. l. .k parallel numerical algorithms, real polynomials, real zeros, newton's method, starting values,  guaranteed convergence .c 5.15
2267 | algorithm reveal property floating point arithmetic | algorithm presented form fortran subroutine subroutine computes radix number digit floating point number rounding chopping machine run method shown work reasonable floating point computer | malcolm, m. a. .k floating-point arithmetic, high-level languages, philosophy of language design .c 4.9 5.19
2268 | comparative study computer program integrating differential equation | study comparing performance computer program integrating system ordinary differential equation reported integration method represented include multistep method predictor correctors single step method runge kutta extrapolation method polynomial rational testing procedure evaluation criterion applied set test problem program tested included appendix problem criterion investigation found program based rational extrapolation showed performance | fox, p. .k ordinary differential equations, integration, program comparison, certification, validation .c 5.10 5.17
2269 | tableless date conversion algorithm r398 | robertson, j. d. .k date, calendar, fortran statement function, arithmetic statement function .c 3.15 4.9 5.9
2270 | interpolation smooth curve fitting based local procedure e2 algorithm a433 | akima, h. .k interpolation, polynomial, slope of curve, smooth curve fitting .c 5.13
2271 | aesthetic human factor programming corrigendum | ershov,a. p.
2272 | sorting natural selection | family sorting algorithm proposed member make fuller memory space yield longer sorted string extensive simulation result presented implication application discussed | frazer, w. d. wong, c. k. .k algorithms, sorting by replacement selection, expected string length .c 5.31
2273 | conversion decision table rule mask method rule mask | algorithm generating computer program decision table algorithm allow handling limited entry extended entry mixed entry table algorithm based rule mask method need mask execution time perform logical operation immediately end interpreting process execution time considerably reduced instantly marking rule applicable algorithm condition tested algorithm algorithm combine degree advantage mask method tree method | dathe, g. .k decision tables, rule mask, rule mask method, rule mask technique, program generator .c 3.50 4.12 4.19 4.29
2274 | generating english discourse semantic network | system generating english sentence form semantic net node word sense meaning path primarily deep case relation grammar system form network imposes ordering set syntactic transformation expressed lisp function generation algorithm information semantic network select generation path grammar system designed computational tool linguist develop study method generating surface string underlying semantic structure initial finding regard form determiner voice form tense mood rule embedding sentence attention pronominal substitution reported system programmed lisp author | simmons, r. slocum, j. .k semantic nets, grammars, deep case relations, semantic generation, discourse generation .c 3.42 3.65
2275 | integral equation immunology | inversion integral equation fredholm kind basic problem considered strategy yielded success consisted essential point fit known experimental data curve property derive property unknown function stabilize computation unknown function singular decomposition constrain unknown function approximation represents probability distribution nonnegative number test case presented set actual experimental data analyzed procedure presented | hanson, r. j. .k integral equations of the first kind, nonnegative constraints, singular value analysis .c 3.10 5.14 5.18 5.41
2276 | computer method sampling exponential normal distribution | method known transforming uniformly distributed random number exponentially distributed quantity efficient compared term memory requirement speed algorithm number procedure convert taylor series expansion directly sampling step approach sampling continuous distribution exponential distribution definite recommendation made case normal distribution remains choice slower shorter algorithm faster space consuming method | ahrens, j. h. dieter, u. .k random numbers, pseudorandom, normal distribution, exponential distribution, exponential distribution,  simulation, numerical analysis .c 3.29 3.57 5.11 5.5
2277 | demand paging utilization working set maniac ii | hardware implementation maniac ii computer working set model demand paging introduced denning discussed characteristic maniac ii description basic demand paging scheme associate memory added maniac ii hardware finally description hardware design implementation working set model discussed specification action condition arise operation full working set model demand paging system | morris, j. b. .k demand paging, dynamic storage allocation, maniac ii, memory allocation, one-level store, paging,  paging associative memory, storage allocation, thrashing, virtual memory, working set model .c 4.30 6.21
2278 | foster information storage retrieval avl tree | tan, k. c. .k binary trees, search trees, information storage, information retrieval .c 3.70 3.73 3.74
2279 | controller braille terminal | rubinstein, r. feldman, j. .k blind programming aid, braille, braille character set, braille character translation, braille computer  communication, braille computer terminal, braille terminal, tactile computer communication, tactile terminal .c 1.59 4.41 6.35
2280 | comment deadlock prevention method | parnas, d. l. habermann, a. n. .k multiprogramming, time-sharing, scheduling, resource allocation, deadlock, interlock, lockout,  deadly embrace, knotting .c 3.72 4.32 6.20
2281 | eigen problem block tridiagonal matrix | khalil, h. m. .k linear algebra, eigenvalues and eigenvectors, partial differential equations .c 5.14 5.17
2282 | comparison floating point summation method | gregory, j. .k summation, floating-point addition, truncation error, error propagation .c 5.11
2283 | thinning algorithm rectangular hexagonal triangular array | report thinning algorithm developed rectangular hexagonal triangular array approach development algorithm pictorial result produced algorithm presented relative performance algorithm compared found algorithm operating triangular array sensitive image irregularity noise yield thinned image reduced number point concluded algorithm operating conjunction hexagonal array feature strike balance array | deutsch, e. s. .k thinning algorithms, rectangular, hexagonal, triangular arrays, image processing, skeleton .c 3.64
2284 | solution matrix equation ax xb f4 algorithm a432 | bartels, r. h. stewart, g. w. .k linear algebra, matrices, linear equations .c 5.14
2285 | computer routine quadratic linear programming problem algorithm a431 | computer program based lemke complementary pivot algorithm presented solve linear quadratic programming problem program extensively tested wide range problem result extremely satisfactory | ravindran, a.  .k linear program, quadratic program, complementary problem, lemke's algorithm, simplex method .c 5.41
2286 | automatic error analysis determining precision | problem considered evaluating rational expression desired tolerance computer performs variable precision floating point arithmetic operation automatic error analysis technique determining directly result trial low precision interval arithmetic calculation precision data accuracy required achieve desired final accuracy technique generalize easily evaluation nonrational expression | richman, p. l. .k error analysis, interval arithmetic, precision control .c 5.11
2287 | approach automatic scanning contour map | problem automatic digitizing contour map discussed structure general contour map analyzed topological property utilized developing scanning algorithm problem detection recognition contour line solved color labeling method shown map normal contour line suffices distinguish called odd line tangency problem involved practical scanning discussed solution based minimizing computer memory space simplifying control program suggested | mor, m. lamdan, t. .k automatic scanning, contour maps, digitizing, contour lines, topology, detection and recognition .c 3.14 3.19 6.35 6.36
2288 | organization consecutive retrieval property | consecutive retrieval property important relation query set record set existence enables design information retrieval system minimal search time redundant storage important theorem consecutive retrieval property proved paper condition consecutive retrieval property exists remain invariant established outline designing information retrieval system based consecutive retrieval property discussed | ghosh, s. p. .k file organization, consecutive storage, consecutive retrieval, information retrieval, record organization,  query structure, record structure, storage on tapes, storage space, minimum access time .c 3.70 3.73 3.74
2289 | cellular array solution graph problem | cellular array dimensional checkerboard type interconnection identical module cell cell bit memory small amount combinational logic communicates mainly neighbor array chief computational advantage offered cellular array improvement speed achieved virtue possibility parallel processing paper shown cellular array inherently suited solution graph problem adjacency matrix graph easily mapped array matrix element stored cell array typical row column operation readily implemented simple cell logic major challenge effective cellular array solution graph problem determination algorithm exploit possibility parallelism especially problem solution inherently serial parallelized algorithm presented solution spanning tree distance path problem direct application wire routing pert chart analysis analysis type network algorithm exhibit computation time case grows rate exceeding log2 number node graph straightforward cellular implementation known serial algorithm problem require step noncellular implementation require step | levitt, k. n. kautz, w. h. .k graph theory, cellular logic-in-memory arrays, parallel processing, special purpose computers,  algorithms for distance and spanning tree problems .c 5.32 6.22 6.5
2290 | predominators directed graph algorithm a430 | purdom jr., p. w. moore, e. f. .k predominator, immediate predominator, graph theory, directed graph, shortest path, articulation,  connectivity, program optimization, optimizing compiler .c 4.12 5.32
2291 | localization root polynomial c2 algorithm a429 | squire, w. .k polynomials, roots of polynomials,theory of equations, routh-hurwitz criterion .c 5.15
2292 | note generation rosary permutation | read, r. c. .k permutation, permutation generation .c 5.39
2293 | comment average binary search length | jones, p. r. .k searching, binary searching, record retrieval .c 3.74
2294 | bonus van wijngaarden device | morris jr., j. h. .k non-local transfers, procedure returns .c 4.12 4.13 4.22
2295 | comment composition semantics algol | van der poel, w. l. .k programming primitives, programming languages, algol, semantics, recursive composition, design  of programming languages, data structures .c 1.3 4.2 4.22 5.23 5.24
2296 | compiling fixed point multiplication | bernstein, h. j. .k compiling multiplications, fixed-point arithmetic .c 4.12
2297 | model memory contention paging machine | paper concerned aspect contention main memory resource multiprogrammed computer system operating demand paging model presented number page frame main memory allocated problem program varies time memory configuration represented explicitly model cpu requirement page exception characteristic program material statistically expression distribution number page frame allocated executing program long run expected fraction program execution time number page frame average execution interval multiprogrammed load obtained pointed heuristically demonstrated numerically increase obtain able average execution interval multiprogrammed load resulting equal fixed partitioning main memory | oden, p. h. shedler, g. s. .k paging machines, demand paging, operating systems studies, queuing analysis, memory contention,  memory management .c 4.32
2298 | environment research microprogramming emulation | development research project microprogramming emulation state university york buffalo consisted phase evaluation machine support research decision purchase machine appears superior considered organization definition goal group project phase reported emphasis early result achieved research | rosin, r. f. frieder, g. eckhouse jr., r. h. .k microprogramming, emulation, computer systems, language processors, input-output systems, nano-program,  project management, hardware evaluation .c 4.1 4.2 4.3 6.2
2299 | extensible editor small machine disk storage | design philosophy developing sophisticated utility program illustrated actual design implementation text editor versatile data structure employed small number programmed subroutine type data manipulation data structure merit illustrated ease powerful extension implemented term basic editing function | benjamin, a. j. .k command processing, context searching, executive program, garbage collection, interpreter, list  processing, macro language, paging, parameter substitution, recursion, state table, storage allocation,  string manipulation, text editing, virtual memory .c 3.73 3.74 3.75 4.13 4.22 4.43 4.49
2300 | political redistricting computer | problem political redistricting considered computer method redistricting presented criterion acceptable redistricting discussed including population equality compactness contiguity preservation natural political boundary nonpartisan criterion considered bureau census population data specific result ten congressional district state missouri st louis county council seat result algorithm feasibility political redistricting aid computer | helbig, r. e. orr, p. k. roediger, r. r. .k political redistricting, reapportionment, compactness, equal population, contiguity, transportation  algorithm, legislative districts, population units .c 2.12 3.35 5.41
2301 | generating parser affix grammar | affix grammar level grammar similar van wijngaarden level grammar definition algol affix grammar shown koster equal power van wijngaarden grammar suited parsing koster inventor affix based recursive procedure paper present bottom scheme parsing based extension floyd production language fpl included algorithm similar deremer converting large class affix grammar fpl paper concludes discussing briefly applicability conversion algorithm affix grammar general extension koster definition affix grammar | crowe, d. .k algorithmic language processing,bottom-up parsing, floyd production language, parsing, syntax  directed compiling, translator writing systems, two-level grammars .c 3.42 4.12 4.13 4.20 5.23
2302 | computer employment | relationship computer automation employment part general relation technological change employment obvious effect increase productivity due technology eliminate job technology affect individual worker nature amount work attitude work technological change affect occupational structure entire labor force central importance effect impact technology subject extensive study economist sociologist political scientist psychologist single discipline study contradictory conclusion colored political overtone wish delineate issue present argument support viewpoint | borodin, a. gotlieb, c. c. .k employment, unemployment, social implications, attitudes, skills, obsolescence, technology, unions,  displacement .c 2.1
2303 | archaeology computer reminiscence | period preceding founding acm dominated large computer eniac characteristic foreshadow later development | alt, f. l. .k history of computers .c 1.2
2304 | western view computer history | history digital computer field tended impersonal heavy emphasis eastern university commercial development article record event early year personal people organization technology computer period western part united statesare happened | sprague, r. e. .k history, computer history .c 1.2 6.0
2305 | plankalkul konrad zuse forerunner today programming language | plankalkul attempt korrad zuse devise notational conceptual system writing today termed program early approach programming language lead practical plan feature standard today programming language investigation historical interest provide insight lead advancement state art modern programming terminology plankalkul presented extent reconstruct published literature | bauer, f. l. wossner, h. .k higher programming languages, programming, theory of programming, history of programming .c 1.2 4.22 5.29
2306 | ancient babylonian algorithm | early origin mathematics discussed emphasizing aspect greatest interest standpoint computer science number babylonian tablet translated english quoted | knuth, d. e. .k history of computation, babylonian tablets, sexagesimal number system, sorting  .c 1.2
2307 | dynamic document processing | role computer automatic document processing briefly outlined reason early promise library automation mechanization documentation process fulfilled dynamic document environment outlined clustered searched information retrieved interactive user controlled search process method automatic query modification based user need continuous reorganization stored information function earlier processing normal collection growth proposed procedure provide powerful tool information retrieval control dynamic library collection item continually added retired | salton, g. .k automatic indexing, automatic search and retrieval, iterative searching, mechanized library processing,  collection growth, collection retirement, feedback search .c 3.62 3.71 3.73 3.74
2308 | computer urban society | survey computer urban society cover broad range activity found city future scope application limited imagination inventiveness future system designer programmer analyst decision maker computer properly respect human dignity civil liberty significant factor improving efficiency urban process expected benefit computer usage outweigh cost look forward expansion usage | sturman, g. m. .k urban systems, urban applications, data acquisition, data management, engineering analysis, information  systems .c 3.23 3.39 3.53 3.72 3.82 3.89
2309 | computer instructional process direction research development | survey computer application instructional process suggests computer professional contribute effective educational system | zinn, k. l. .k education .c 1.5 3.32
2310 | language analysis humanity | computer language oriented humanity exhaustive listing detail index concordance widespread accepted desirable implication computer science humanity science entailing gathering data construction testing model widely recognized accepted paper argues computer major role language analysis humanity establishing science area humanity rigor precision analyzing literature teaching student write composition computer critically important facilitator | sedelow, s. y. .k language analysis, humanities, science of the humanities, pattern recognition, pattern generation,  interdisciplinary cooperation .c 1.3 2.19 3.42 3.43
2311 | generational perspective information system development | system development categorized generational point view parallel commonly computing system generation generation scope development project technological world view system developer examined | benjamin, r. i. .k computing milieu, management data processing, hardware systems, software systems, systems development  process, functional systems, management systems .c 2.0 3.50 4.0 6.20
2312 | present future scientific computation | pessimistic forecast expected happen application computer physical science | rice, j. r. .k scientific computation .c 3.1 5.0
2313 | evolution storage structure | data base management system grown rapidly power complexity year history data processing commercially computer original concept split term adopted refer concept data structure diagram graphic technique illustrate splitting concept structural relation exist concept point evolution | bachman, c. w. .k block, cylinder, device, field, extent file, page, record, physical record, logical record, track,  volume, entity, set, entity class, set class, data structure diagram, storage structure, physical storage  structure, logical storage structure, storage allocation structure, integrated data store, index sequential,  hash, randomize, item .c 1.4 4.41 4.9
2314 | requirement advanced programming system list processing | list processing system designed facilitate production large program manipulate large complex symbolic data store paper present overview number system feature author feel important improve productivity programmer working domain system view focusing language feature algorithm coded language form debugged modified made efficient run data general framework requirement applicable design advanced programming system wide range application aspect programming system highlighted good interactive facility programmable control structure sophisticated data communication mechanism interactive feature facilitate program composition entry testing debugging editing optimization packaging implementation generalized environment structure model allow programming control regime including multiprocesses coroutines backtracking alternative method procedure invocation required include invocation pattern monitoring condition need extended data form storage management extensibility stressed duality data retrieval function evaluation syntax directed input output data facilitate complex data store | bobrow, d. g. .k list processing, programming languages, design of programming languages, interactive systems, control  structures, data structures, programming primitives, semantics, advanced programming systems .c 1.3 4.2 4.22 4.3 4.32 5.23 5.24
2315 | production mathematical software | observation made step creation mathematical software step suggest need coordinated effort creation center focus activity area | fosdick, l. d. .k mathematical software, programming .c 4.0
2316 | programming language history future | paper discus history future programming language higher level language difficulty writing history key part paper tree showing chronological development language interrelationship reason proliferation language major language listed reason importance section chronology happening significant previous time period major topic key concept specific language discussed | sammet, j. e. .k programming languages, higher level languages, languages, history, future directions, language  interrelationships, programming language tree, programming language history, programming language future .c 1.2 4.2
2317 | programming system language | spite impressive gain pl fortran cobol remain language world production program written remain foreseeable future great deal theoretical interest algol extensible language practical impact problem oriented language important language development area ten year operating system area major computer manufacturer set produce ambitious multiprogramming system ran similar problem number university project directly comparable manufacturer contributed greatly understanding operating system principle important trend include increased interest development system measurement evaluation technique increased microprogramming programming system function | rosen, s. .k languages, operating systems, programming systems, multiprogramming, history .c 1.2 4.22 4.32
2318 | role computer system model performance evaluation | model constitute mean investigating computer system performance paper examines interrelationship model method evaluating performance computer system establishes circumstance model | kimbleton, s. r. .k modeling, evaluation, performance, analytic-models, simulation-models, system-models .c 2.43 2.44 6.2 8.3
2319 | operating system performance | overview future position respect operating system performance great deal information large number model subsystem developed gap exist knowledge severe interaction subsystem operating system model total system developed able analyze design performance aspect operating system total system design exceptional today projected increasingly common future design philosophy clearly severe impact modularizing operating computer system | lynch, w. c. .k computer system, operating system, performance evaluation, performance measurement, measurement,  techniques, modularity, layering, structured programming, paging, virtual memory, input/output, disk  storage facility, drum storage facility, sector queueing .c 4.30 6.20
2320 | structured multiprogramming | paper present proposal structured representation multiprogramming high level language notation explicitly associate data structure shared concurrent process operation defined clarifies meaning program permit large class time dependent error caught compile time combination critical region event variable enables programmer control scheduling resource competing process degree desired concept sufficiently safe operating system user program | hansen, p. b. .k structured multiprogramming, programming languages, operating systems, concurrent processes, shared  data, mutual exclusion, critical regions, process communication, synchronizing events. .c 4.2 4.3
2321 | interface computer data communication system | future system combine computer digital terminal communication equipment present design optimization problem require reconsideration traditional functional responsibility respective subsystem standard interface mean computer digital terminal connect communication system required interface consideration problem coordination synchronization error control signaling stream multiplexing switch control addition minimizing technological interdependence specific subsystem design focus problem obtained discussion detailed specification computer communication system interface | fraser, a. g. .k communications, standard interface communications protocol, virtual channel, multiplexed input/output,  coordination of input/output .c 3.81 6.0 6.35
2322 | view computer architecture | attempt made predict development year field computer architecture standardized inexpensive microcomputer single chip predicted extensively provide logical function noncomputational device incidentally design superscale computer | foster, c. c. .k computer architecture, projection, microcomputers, computer design, computer organization .c 1.2 2.1 6.0 6.2
2323 | general theory special function | list number natural development field algebraic manipulation prospect general theory function defined ordinary differential equation discussed claim made recent development mathematics algorithmically generate property solution differential equation theory preferable general effort make algebraic manipulation system knowledgeable usual special function exponential hypergeometric | moses, j. .k algebraic manipulation, special functions, algebraic simplification, symbolic integration, algebraic  geometry, differential algebra .c 1.50 3.15 5.19 5.9
2324 | management science view nonlinear programming | history integer continuous nonlinear programming presented obstacle practical mathematical programming technique forecast contribution nonlinear programming actually made year likely consolidation theoretical breakthrough contribution likely documentation standard test problem construction user oriented software comparison known algorithm demonstrate technique specific problem | shanno, d. f. weil, r. l. .k integer programming, linear programming, mathematical programming, nonlinear programming, quadratic  programming, management science, operations research, algorithms .c 5.41 8.3
2325 | numerical mathematics computer science | numerical mathematics viewed analysis continuous algorithm component numerical mathematics discussed foundation finite precision number system computational complexity synthesis analysis algorithm analysis error program program library | traub, j. f. .k numerical mathematics, computer science, mathematics of computation, algorithms, continuous algorithms .c 1.3 5.0 5.1 5.25
2326 | fix point approach theory computation | fix point theory scott semantics computer program defined term fix point recursive program justification existing verification technique extension handling uniform manner property computer program including correctness termination equivalence | manna, z. vuillemin, j. .k verification techniques, semantics of programming languages, least fix points, recursive programs,  computational induction .c 5.23 5.24
2327 | automaton theory brain | source idea automaton theory study brain pushed mathematical development theory paper suggests way automaton theory evolve year contribute understanding brain process information | arbib, m. a. .k automata theory, brain theory, network complexity, resolution of redundancy of potential command,  frog visual system, reticular formation mode selection .c 3.36 3.65 5.22
2328 | individualizing instruction generative cai tutor | koffman, e. b. .k computer-assisted instruction, generative cal, adaptive instruction .c 3.32 3.51 3.62
2329 | computer science vicious circle | kandel, a. .k education, computer engineering, computer science curriculum, systems design .c 1.52 6.0
2330 | calculation fourier integral algorithm r418 | einarsson, b. .k quadrature, filon quadrature, integration, filon integration, fourier coefficients, fourier integrals,  fourier series, spline,spline approximation, spline quadrature, extrapolation, richardson extrapolation .c 5.16
2331 | integer programming problem algorithm r397 | johnson, s. c. kernighan, b. w. .k integer programming, change-making problem .c 5.41
2332 | special series summation arbitrary precision algorithm r393 | sale, a. h. j. .k function evaluation, series summation, approximation .c 5.12 5.13
2333 | random vector uniform solid angle algorithm r381 | schrack, g. f. .k random vector generator, points uniform on sphere, spherically symmetric probability distribution .c 5.5
2334 | general random number generator algorithm r370 | proll, l. g. .k random number generator, probability density function, transformation, cumulative distribution  function .c 5.13 5.5
2335 | eigenvalue eigenvectors real general matrix algorithm r343 | niessner, h. .k eigenvalues, eigenvectors, qr-algorithm, nonsymmetric matrices, general matrices  .c 5.14
2336 | complex error function algorithm c363 | kolbig, k. s. .k error function for complex argument, voigt function, special functions, function evaluation .c 5.12
2337 | sorting problem complexity | technique proving min max norm sorting algorithm algorithm finding minimum maximum element set fewest comparison proved optimal technique | pohl, i. .k sorting, computational complexity, computational combinatorics .c 5.29 5.31
2338 | starting method solving nonlinear volterra integral equation kind | fourth order starting method volterra integral equation kind numerical example presented | iguchi, k. .k algorithm, volterra integral equations, starting method .c 5.18
2339 | computer assigned code verbal response | desirable convert verbal response multidigit code conversion generally accomplished clerk coder study conducted test feasibility translating verbal description numerical code computer program primary emphasis computerized construction reference verbal description program result study clearly show procedure feasible | o'reagan, r. t. .k verbal responses, computer coding, reference list, historical response patterns, word strings,  concept translation, word coding .c 3.30 3.42 3.63 3.66 3.71 3.74 3.75 5.6
2340 | boolean matrix method computation linear precedence function | modified version bell boolean matrix method computation linear precedence function conflict free matrix precedence relation algorithm detects precedence function exist indication exist corrective action sufficient condition existence precedence function boolean matrix prove existence precedence function class conflict free grammar illustrated | martin, d. f. .k precedence grammars, context-free parsing .c 4.12
2341 | block data type snobol4 | data type called block implemented snobol4 block dimensional aggregate character form parallelepiped thought dimensional extension string dimension overstriking block printed concatenated dimension merged basis program defined connection point block adapt size shape environment block operation mainly composing printable output variety graphical problem including flowcharting bargraphs logic diagram mathematical equation formation text justification preparation programmed printer appears easy natural addition specialized application block good general purpose device independent output formation mechanism especially suitable nonnumerical work concept block largely language independent block require specialized syntax readily absorbed external structure programming language | gimpel, j. f. .k character manipulation, output formatting, string processing, graphics, nonnumerical programming,  snobol4, data types, two-dimensional mathematics, test processing, flowcharting .c 4.22 4.41
2342 | interference communicating parallel process | kind interference communicating parallel process examined dijkstra knuth solution mutual exclusion problem subproblems form parallel program informal proof correctness solution paper system parallel process regarded machine proceeds state collection pertinent data value process configuration state accordance transition rule set rule yield sequence state dictate system behavior mutual exclusion problem subproblems formulated question inclusion set state existence sequence mechanical proof procedure shown verify prove correctness discredit prove incorrectness attempted solution respect interference property shown calculate transition rule partial rule individual process operate formation partial rule calculation transition rule applicable hardware process software process symmetry process required | gilbert, p. chandler, w. j. .k concurrent programming control, cooperating processes, formal programs, interference, mutual exclusion,  operating systems, parallel processes .c 4.0 4.10 4.30 4.32 4.42 5.24 6.20
2343 | proposal establish pseudo virtual memory writable overlay | computer system solve executable storage size problem large program overlay appears overlay scheme balanced combination capability found existing technique proposal presented utilizes capability existing scheme complemented additional feature writable overlay writable overlay capability virtual memory effect programmer required design overlay configuration overlay structuring complex task tool including graphic display included proposal order aid programmer design content overlay briefly discussed noted detail final overlay configuration decided fact | spacek, t. r. .k overlay, overlay structure, segment, segmentation, folding, paging, linkage editor, collector,  loader, virtual memory .c 4.10 4.12 4.39 4.49
2344 | optimization performance time sharing system simulation | simulation model time sharing system finite noncontiguous store infinite auxiliary store study variation system parameter store size number job allowed execute simultaneously job scheduling algorithm effect variation measure system performance ascertain parameter controllable job scheduling algorithm including scheduling require optimization parameter controllable scheduling algorithm marked effect system performance system performance based mean cost delay job processed shown significant improvement measure system performance obtained variable time slice technique selecting optimum round robin cycle time appears feature benefit optimization parameter controllable scheduling algorithm affect system performance predictable manner benefit optimization feature control scheduling algorithm marked effect measure performance supervisor overhead size store speed cpu comparison made result simulation model analytical equation quantum oriented nonpreemptive time sharing system comparison found favorable | blatny, j. clark, s. r. rourke, t. a. .k time-sharing, simulation studies, optimization, measure of performance, scheduling algorithms .c 3.80 4.30 4.32
2345 | curriculum recommendation graduate professional program information system | need education related information system organization discussed curriculum proposed graduate professional program university master level material program identified course incorporating detailed course description presented program organization discussed implementation question considered | ashenhurst, r. l. .k education, management systems, systems analysis, management information systems, information systems  development, information analysis, system design .c 1.52 3.51
2346 | hu tucker minimum redundancy alphabetic coding method algorithm a428 | yohe, j. m. .k information theory, coding theory, hu-tucker method, minimum redundancy coding .c 5.6
2347 | fourier cosine integral d1 algorithm a427 | linz, p. .k numerical integration, quadrature, adaptive quadrature, filon quadrature, fourier coefficients,  fourier integrals .c 5.16
2348 | merge sort algorithm m1 algorithm a426 | bron, c. .k sort, merge .c 5.31
2349 | generation random correlated normal variable g5 algorithm a425 | hurst, r. l. knop, r. e. .k random number, normal density, normal distribution, gaussian density, gaussian distribution, simulation,  monte carlo .c 5.5
2350 | clenshaw curtis quadrature d1 algorithm a424 | gentleman, w.m. .k quadrature, chebyshev series, cosine transform, fast fourier transform .c 5.1
2351 | optimality winograd formula | harter, r. .k inner product, winograd's formula .c 5.14
2352 | minimax nonlinear approximation approximation subset | dunham, c. b. .k minimax approximation, nonlinear approximation, subset .c 5.13
2353 | fast finite difference solution biharmonic problem | setting reynolds number equal method solving navier stroke equation numerically result fast numerical method biharmonic problem equation treated system order equation simple smoothing process essential convergence application made crack type problem | greenspan, d. schultz, d. .k numerical analysis, partial differential equations, biharmonic equation, boundary value problem .c 5.17
2354 | implementing clenshaw curtis quadrature ii computing cosine transformation | companion paper methodology experience automatic clenshaw curtis quadrature scheme quadrature formula scheme requires cosine transformation integrand value shown high cost cosine transformation drawback clenshaw curtis quadrature problem related cosine transformation trouble conventional computation cosine transformation recurrence relation numerically unstable low frequency largest effect integral case automatic scheme require refinement sampling storage required save integrand value cosine transformation computed part paper show cosine transformation computed modification fast fourier transform problem overcome modification applicable circumstance requiring cosine sine transformation polynomial interpolation chebyshev point | gentleman, w. m. .k fast fourier transformation, cosine transformation, clenshaw-curtis quadrature, chebyshev series .c 5.13 5.14 5.16
2355 | implementing clenshaw curtis quadrature methodology experience | clenshaw curtis quadrature important automatic quadrature scheme variety reason especially high accuracy obtained integrand value received requires computation cosine transformation arithmetic cost prohibitive paper part companion paper ii computing cosine transformation show objection overcome computing cosine transformation modification fast fourier transform algorithm part discus strategy error estimate summarizes experience implementation scheme | gentleman, w. m. .k clenshaw curtis, numerical integration, automatic quadrature, error estimates, chebyshev series .c 5.16
2356 | technique software module specification example | paper present approach writing specification part software system main goal provide specification sufficiently precise complete piece software written interact piece additional information secondary goal include specification information meet goal technique illustrated mean variety example tutorial system | parnas, d. l. .k software, specification, modules, software engineering, software design .c 4.0 4.29 4.9
2357 | mux simple approach line computing | line system operating part normal batch system cdc computer system required man year initial software implementation basically simple element input modify submit batch execution provide result user terminal multiplexer designed developed part project cost man year design checkout part fabrication aspect system including design criterion implementation cost overhead user reaction | christman, r. d. .k time-sharing, remote computing, on-line access, on-line computing, remote file manager, real time,  multiplexer, implementation effort, operating overhead, user reactions, remote terminals, operating system .c 3.79 3.89 4.39 4.41
2358 | multics virtual memory concept design | experience line operating system grown need share information system user increasingly apparent contemporary system permit degree sharing sharing accomplished allowing user share data input output information stored secondary storage segmentation multics direct hardware addressing user system program information independent physical storage location information stored segment potentially sharable carry independent attribute size access privilege design implementation consideration segmentation sharing multics discussed assumption information resides large segmented main memory size main memory contemporary system limited shown multics software achieves effect large segmented main memory honeywell segmentation paging hardware | bensoussan, a. clingen, c. t. daley, r. c. .k operating system, multics, virtual memory, segmentation, information sharing, paging, memory management,  memory hierarchy .c 4.30 4.31 4.32
2359 | improved index sequential access method hashed overflow | index sequential access method isam important management system moveable head disk device study investigates unconventional method treating overflow record method hashing technique allocate space record condition satisfied superior conventional isam method chaining overflow record linked list technique condition long overflow chain significant overflow lack tight disk space constraint record key small compared total record size significant index opposed sequential mode hashed overflow time locate record dependent total volume overflow record conventional isam percentage space dedicated overflow record | mullin, j. k. .k isam, index sequential, hashing, scatter storage, disk, cylinder, overflow .c 3.72 3.73 3.74
2360 | comment double chained tree | hu, t. c. .k file searching, double-chained tree, binary search tree .c 3.73 3.74 5.32 5.6
2361 | note cheney nonrecursive list compacting algorithm | walden, d. c. .k list compacting, garbage collection .c 4.19 4.49
2362 | linear equation solver f4 algorithm a423 | moler, c. b. .k matrix algorithms, linear equations, fortran, paged memory, virtual memory, array processing .c 4.22 4.32 5.14
2363 | minimal spanning tree algorithm a422 | whitney, v. k. m. .k spanning tree, minimal spanning tree, maximal spanning tree .c 5.32
2364 | complex gamma function error control s14 algorithm a421 | kuki, h. .k complex gamma function, gamma function, complex log gamma function, loggamma function, round-off  error control, inherent error control, run-time error estimates, error estimates, special functions .c 4.9 5.11 5.12
2365 | matrix computation fortran paging | efficiency conventional fortran program matrix computation improved reversing order nested loop modification produce modest saving common situation significant saving large problem run operating system paging | moler, c. b. .k matrix algorithms, linear equations, fortran, paged memory, virtual memory, array processing .c 4.22 4.32 5.14
2366 | complex gamma function error control | algorithm compute gamma function log gamma function complex variable presented standard algorithm modified respect insure continuity function reduce accumulation round error addition computation function value algorithm includes object time estimation round error experimental data regard effectiveness error control presented fortran program algorithm appears algorithm section issue | kuki, h. .k complex gamma function, gamma function, complex log gamma function, loggamma function, round-off  error control, inherent error control, run-time error estimates, error estimates .c 5.11 5.12
2367 | computer society proposed course computer scientist | purpose paper describe course concerned effect computer society responsibility computer scientist society impact computer divided component political economic cultural social moral main part paper defines component present example relevant issue remaining portion format course discussed topic topic outline selected set reference listed hoped proposal make easier initiate course subject | horowitz, e. morgan, h. l. shaw, a. c. .k computers and society, social implications, course proposal .c 1.0 1.52 2.1
2368 | implemented graph algorithm winning shannon switching game | tutorial paper computer program win shannon switching game game played graph program good implementation graph algorithm player shannon switching game connect cut nonsimilar goal connect cut player moving guaranteed existence winning strategy simple strategy explained paper valid case fact major routine need know computer connect cut | chase, s. m. .k graph algorithms, graph processing, shannon switching games, game playing, graph theory, positional  games, demonstration programs, game theory, spinning trees .c 3.69 5.32
2369 | hidden line elimination rotating object | method presented determining part dimensional object visible invisible object rotated axis paper describes polygon comparison scheme relationship polygon classified tree type discus relationship changed pair polygon rotation axis rotation table defined pair polygon remains fixed long rotation axis mean rapidly determining visible hidden line relationship polygon additional work extend approach simultaneous rotation ax | matsushita, y. .k hidden line problem, display programming, computer graphics, displays, graphics, computer drawn  picture .c 4.40 4.41 4.49
2370 | experimental laboratory pattern recognition signal processing | interactive computer controlled scanning display system operation ibm thomas watson research center year system includes flying spot scanner tv camera specially interfaced process control digital computer dot mode vector display analog input output facility variety experimental equipment system design programming support typical application scanner control optical character recognition image processing presented | herbst, n. m. will, p. m. .k scanners, pseudorandom displays, interactive terminal, image processing, pattern recognition .c 4.41 6.35
2371 | system interprocess communication resource sharing computer network | system communication process time sharing system communication system extended process distributed computer network hypothetical application system existing network discussed | walden, d. c. .k interprocess communication, time-sharing, computer networks, resource sharing .c 3.81 4.39 4.82 4.9
2372 | implementation security measure information system | security information system represented model matrix element decision rule row column index user data item set function access matrix translation execution time distinguishing data dependent data independent decision rule enables perform checking security translation time repeatedly execution time model explain security feature existing system serf framework proposal general security system implementation today language operating system | conway, r. w. maxwell, w. l. morgan, h. l. .k security, privacy, access control confidentiality, operating systems, access management, data banks,  management information systems .c 3.50 3.73 4.12 4.22 4.39
2373 | property working set model | program working set time set distinct page recently referenced page relation average working set size missing page rate interreference interval distribution derived time average definition ensemble average statistical definition efficient algorithm estimating quantity relation lru recently paging characterized independent reference model page reference statistically independent ass effect interpage dependency working set size observation general assumption working set size shown distributed | denning, p. j. schwartz, s. c. .k working-set model, paging, paging algorithms, program behavior, program modeling .c 4.3
2374 | study storage partitioning mathematical model locality | fixed dynamic storage partitioning procedure examined multiprogramming system storage requirement program modeled stationary gaussian process experiment justifying model mean model dynamic storage partitioning shown provide substantial increase storage utilization operating efficiency fixed partitioning | coffman jr., e. g. ryan jr., t. a. .k storage partitioning, memory management, dynamic storage allocation, space sharing, multiprogrammed  storage, working-sets, program behavior models, mathematical modeling .c 4.32 4.39
2375 | comparative analysis disk scheduling policy | known scheduling policy movable head disk compared performance criterion expected seek time system oriented expected waiting time individual request oriented analytical simulation result obtained variance waiting time introduced meaningful measure performance showing discrimination individual request choice utility function measure total performance including system oriented individual request oriented measure function differentiate scheduling policy wide range input loading condition selection implementation maximum performance policy algorithm discussed | teorey, t. j. pinkerton, t. b. .k access time, analytical models, auxiliary storage, direct access storage, disk analysis, disk scheduling,  performance criteria, peripheral memory devices, real-time systems, response time, rotational delay,  scheduling policies, seek time, simulation, storage units, time-sharing systems, waiting time .c 3.72 4.32 6.34
2376 | synchronization communicating process | formalization defined synchronization mechanism prove concurrently running process system communicate correctly demonstrated system consisting sending process deposit message buffer receiving process remove message buffer formal description synchronization mechanism make easy prove buffer overflow underflow sender receiver operate message frame buffer run deadlock | habermann, a. n. .k parallel programming, multiprogramming, program correctness, process communication, process scheduling .c 4.30 4.32 4.39 4.9
2377 | hardware architecture implementing protection ring | protection computation information important aspect computer utility system segmentation memory addressing scheme protection achieved part associating concentric ring decreasing access privilege computation paper describes hardware processor mechanism implementing ring protection mechanism implementing ring protection mechanism allow cross ring call subsequent occur trapping supervisor automatic hardware validation reference ring boundary performed call user procedure protected subsystem including supervisor identical call companion user procedure mechanism passing referencing argument case | schroeder, m. d. saltzer, j. h. .k protection, protection rings, protection hardware, access control, hardware access control, computer  utility, time-sharing, shared information, segmentation, virtual memory, multics .c 4.32 6.21
2378 | operating system based concept supervisory computer | operating system organized small supervisor set independent process supervisor handle external device directory system schedule active process manages memory handle error small set primitive function execute process process able request complicated action part supervisor wait occurrence compound event system combining primitive supervisory computer program part supervisor executes program viewed software implemented supervisory computer paper develops concept detail outline remainder supervisor discus advantage approach | gaines, r. s. .k operating systems, supervisors, multiprogramming, time-sharing, cooperating processes .c 4.30 4.31 4.32
2379 | design venus operating system | venus operating system experimental multiprogramming system support concurrent user small computer system produced test effect machine architecture complexity software system defined combination microprograms software microprogram defines machine unusual architectural feature software exploit feature define operating system simply paper development system emphasis principle guided design | liskov, b. h. .k operating systems, system design, levels of abstraction, machine architecture, microprogramming,  segments, semaphores, multiprogramming, virtual machines, processes, process communication, virtual devices,  data sharing, resource management, deadlock .c 4.30 4.32 4.41 6.21
2380 | tenex paged time sharing system pdp | tenex time sharing system implemented dec pdp augmented special paging hardware developed bbn report specifies set goal important time sharing system describes tenex design implementation achieve goal include specification powerful multiprocess large memory virtual machine intimate terminal interaction comprehensive uniform capability clean flexible system structure implementation required compromise achieve system operational month hardware checkout tenex met major goal provided reliable service site arpa network | bobrow, d. g. burchfiel, j. d. murphy, d. l. tomlinson, r. s. beranek, b. .k tenex, paging, virtual machines, time sharing system, scheduling algorithm, process structure,  pdp-10 .c 2.44 4.32 4.39 4.42
2381 | average binary search length dense ordered list corrigendum | flores, i. madpis, g.
2382 | reconstruction picture projection corrigendum | gordon, r. herman, g. t.
2383 | music computer composition | problem discussed simulating human composition western popular music computer relevant theory music harmony problem kind program scheme known work discussed previous computer composition discussed including illiac suite program generate short melody fragment written simulate aspect human composition sample output presented discussed discovered fragment show characteristic popular melody strangely alien sound theorized relevant probability discriminate unfamiliar sequence | moorer, j. a. .k artificial intelligence, heuristic programming, models of cognitive processes, computer music,  computer composition, music theory .c 3.44 3.65
2384 | hidden line plotting program j6 algorithm a420 | williamson, h.  .k hidden-line plot, surface plot  .c 4.9
2385 | zero complex polynomial c2 algorithm a419 | jenkins, m. a. traub, j. f. .k roots, roots of a polynomial, zeros of a polynomial .c 5.15
2386 | dynamic microprogramming processor organization programming corrigendum | tucker, a. b.
2387 | maximum computing power cost factor centralization problem | simple analysis computer economic factor involved comparing multimachine installation versus large single machine installation mathematical model derived assist policy decision | oldehoeft, a. e. halstead, m. h. .k centralization, decentralization, economics of computers, computer management, economies of scale .c 2.41
2388 | optimizing binary tree grown sorting algorithm | item retrieved binary tree grown form algorithm quicksort average time proportional log number item tree binary tree grown algorithm branch longer reduce average retrieval time restructuring tree make branch uniform length algorithm presented algorithm discussed compared restructures tree item added | martin, w. a. ness, d. n. .k retrieving information from binary trees, global and local optimization, sorting, recursion .c 3.74 5.31
2389 | preliminary report system general space planning | computer language set program language allow formulating solving class space planning problem language extension algol includes mean represent space object manipulate test resulting arrangement according variety constraint algorithm solve problem expressed language rely heuristic programming language search algorithm detailed | eastman, c. m. .k automated design, architecture, heuristic programs, space planning .c 3.20 3.40 3.64 3.66
2390 | proposal computer based interactive scientific community | problem created explosion paper mathematical science drawback place research suggested tree mathematical result terminology maintained multiterminal computer system user system store computer updated knowledge selecting paper read obtain computer minimum subtree theorem required bring know background knowledge paper assumes condition mean provided contribution comment reader work interaction commentator author paper describes system organized role required reader writer commentator | pager, d. .k interactive system, organization of scientific community, readers, writers, commentators, computer  utility, information retrieval, trees, data structures .c 1.0 1.1 1.59 2.10 3.15 3.32 3.50 3.51 3.70 3.71 3.74 3.9
2391 | unitary symmetric polynomial algorithm r391 | schrack, g. f. .k symmetric polynomials, elementary symmetric polynomials, unitary symmetric polynomials, polynomial  synthesis, reverse horner scheme, reverse synthetic division, binomial coefficients .c 5.11 5.30 5.5
2392 | situ transposition rectangular matrix f1 algorithm c380 | macleod, i. d. g. .k rectangular matrix, transpose .c 5.14
2393 | calculation fourier integral d1 algorithm a418 | einarsson, b. .k quadrature, filon quadrature, integration, filon integration, fourier coefficients, fourier integrals,  fourier series, spline, spline approximation, spline quadrature, extrapolation, richardson extrapolation .c 5.16
2394 | ordering positive monotonic | salzer, h. e. .k ordering, storage, retrieval, positive functions, monotonic functions, increasing functions, decreasing  function, binary system, chebyshev zeros, square rots, continued fractions .c 5.40
2395 | quadratic programming nonlinear regression | quadratic programming algorithm magnified diagonal method nonlinear regression linear constraint regression method published jacm july | shrager, r. i. .k nonlinear equations, nonlinear regression, nonlinear programming, quadratic programming, least  squares, inequality, constraints, iteration .c 5.15 5.41
2396 | muse model understand simple english | muse computer model natural language processing based semantic memory network quillian tlc muse model understand simple english process english sentence unrestricted content restricted format model applies syntactic analysis eliminate interpretation employ simplified semantic intersection procedure find valid interpretation input semantic processing similar tlc syntactic component includes early parse tree special purpose rule relational triple notation interpretation input compatible muse memory structure allowing direct verification familiar concept addition muse repertoire action range editing reporting content memory indirect form question answering example presented demonstrate model interprets text resolve ambiguity add information memory generalizes example performs action | mccalla, g. i. sampson, j. r. .k natural language processing, semantic memory, text comprehension, question answering, artificial  intelligence, human memory simulation .c 3.36 3.42 3.62 3.65 3.74
2397 | optimizing polyphase sort corrigendum | shell, d. l.
2398 | teacher student authored cai newbasic system | pedagogical advantage general purpose interactive system called newbasic catalyst discussed newbasic catalystincorporates advanced implementation basic system level interactive feature general capability extension user oriented function attachment application feature provide flexible cai scan capability illustrated interaction system level show student mix advantage independent solo mode computing guided dual mode interaction preliminary experience system urban secondary school setting discussed | dwyer, t. a. .k cai, basic, catalyst, newbasic, education, computers in education, extended languages, interactive  systems .c 1.50 1.51 3.32 4.22
2399 | crt editing system | test editing manipulation program program operates low cost cathode ray tube entry display station keyboard function button application potential economy operation aspect implementation discussed | irons, e. t. djorup, f. m. .k editing, text, cathode-ray tube entry display, time-sharing .c 3.7 4.3
2400 | hough transformation todetect line curve picture | hough proposed interesting computationally efficient procedure detecting line picture paper point angle radius slope intercept parameter simplifies computation show method general curve fitting alternative interpretation explain source efficiency | duda, r. o. hart, p. e. .k picture processing, pattern recognition, line detection, curve detection, colinear points, point-line  transformation, hough transformation .c 3.63
2401 | shrinking binary picture pattern | parallel processing algorithm shrinking binary pattern obtain single isolated element pattern presented procedure counting pattern matrix hardware implementation algorithm large scale integrated technology envisioned principal feature method small window employed element parallel nature process possibility shrinking pattern regardless complexity configuration problem regarding merging disconnection pattern process determination maximum number step obtain single isolated element pattern reviewed discussed analogy neural network description term mcculloch pitt neuron presented | levialdi, s. .k counting binary patterns, shrinking, parallel processing, multiple connected pictures .c 3.63
2402 | pictorial pattern recognition phase problem ray crystallography | availability interactive dimensional computer graphic system coupled powerful digital computer encourages development algorithm adapted environment pictorial pattern recognition technique make number approach ray structure determination based molecular model building chemical information frame structural hypothesis computationally tested refined reference experimental data application standard pattern recognition algorithm hindered fact cross correlation model correct structure computed fundamental incompleteness measured data compute upper bound cross correlation simple demonstrates information basis technique structure determination make effective interactive graphic system model building cross correlation intrinsic advantage usual crystallographic technique based autocorrelation patterson function especially large structure significant crystallography biological macromolecule hasbeen continue field intense interest | lesk, a. m. .k pictorial pattern recognition, phase problem, x-ray crystallography, interactive graphics .c 3.13 3.17 3.63
2403 | procedure natural spline interpolation e1 algorithm a472 | herriot, j. g. .k approximation, interpolation, spline, natural spline, spline approximation, cubic natural spline .c 5.13
2404 | exponential integral s13 algorithm a471 | gautschi, w. .k exponential integral, recurrence relations, recursive computation, continued fractions .c 5.12
2405 | linear system tridiagonal matrix f4 algorithm a470 | kubicek, m. .k system of linear equations, almost tridiagonal matrix, sparse matrix .c 5.14
2406 | data definition mapping language | data definition language sa declarative computer language data structure data definition language concentrate declaration logical data structure concern structure physically realized computer system need data definition language describe logical physical aspect data increasingly apparent language key system advanced data management system distributed data base paper review past work data definition language describing logical physical aspect data application generalized data definition language discussed | sibley, e. h. taylor, r. w. .k data definition language, data and storage structure, data translation, data base management systems,  file translation .c 3.51 3.70 3.73 4.29 4.82
2407 | curriculum recommendation undergraduate program information system | need education related information system organization discussed curriculum proposed undergraduate program material program identified course incorporating detailed course description presented program organization problem implementation discussed | couger, j. d. .k education, undergraduate curricula, management systems, information systems, information analysis,  system design, systems analysis .c 1.52 3.51
2408 | solving biharmonic equation square direct versus semidirect method | method solving biharmonic equation compared method direct eigenvalue eigenvector decomposition method iterative solving poisson equation directly iteration | ehrlich, l. w. .k biharmonic, direct method, block iterative, eigenvector-eigenvalue decomposition .c 5.14 5.17
2409 | algorithm approximate solution wiener hopf integral equation | explicit approximate solution equation assumed classical wiener hopf technique applied assumed fourier transforms known explicitly approximate solution depends positive parameter | stenger, f. .k integral equations, wiener-hopf, convolution, approximate solution .c 5.18
2410 | recurrence scheme converting orthogonal expansion | generalization scheme hamming converting polynomial pn chebyshev series combined recurrence scheme clenshaw summing finite series term satisfy term recurrence formula | salzer, h. e. .k orthogonal expansions, series interconversion, recurrence schemes, hamming recurrence, clenshaw  recurrence, three-term recurrence, five-term recurrence, chebyshev series .c 5.12
2411 | tree structured program | wegner, e. .k control structures, flowcharts, goto statements, inductive assertion, least fix points, optimization  in compilers, program documentation, program flow graphs, programming language design, proof of programs,  semantics of programming languages, structured programming. .c 4.12 4.22 5.24
2412 | comment brent scatter storage algorithm | feldman, j. a. low, j. r. .k hashing, information storage and retrieval, scatter storage, searching, symbol table .c 3.7 3.73 3.74 4.1 4.9
2413 | note subexpression ordering execution arithmetic expression | counterexample supposed optimality algorithm generating schedule tree task unequal execution time presented comparison critical path heuristic discussed | denning, p. j. graham, g. s. .k scheduling, tree scheduling, task scheduling, multiprocessor scheduling .c 4.32 8.3 8.1
2414 | arithmetic overa finite field a1 algorithm a469 | lam, c. mckay, j. .k algebra .c 5.19
2415 | algorithm automatic numerical integration finite interval d1 algorithm a468 | patterson, t. n. l. .k automatic integration, numerical integration, automatic quadrature, numerical quadrature .c 5.16
2416 | matrix transposition place f1 algorithm a467 | brenner, n. .k transposition, matrix operations, permutations, primitive roots, number theory .c 3.15 5.14 5.39
2417 | combinatorial algorithm g6 algorithm a466 | ehrlich, g. .k permutations and combinations .c 5.39
2418 | student frequency s14 algorithm a465 | hill, g. w. .k student's t statistic, density function, series approximation .c 5.12 5.5
2419 | eigenvalue real symmetric tridiagonal matrix f2 algorithm a464 | reinsch, c. h. .k eigenvalues, qr algorithm .c 5.14
2420 | experiment automatic theorem prover havingpartial ordering inference rule | automatic theorem provers need made efficient mind slagle shown axiom partial ordering replaced built inference rule theorem proving algorithm based hyper resolution paramodulation rule embody transitivity partial ordering close relationship predicate program developed modified version rule theorem prover found powerful solving problem involving partial ordering paper present detailed description program comprehensive account experiment performed | slagle, j. r. norton, l. m. .k theorem-proving, partial ordering, resolution, hyper-resolution, p1-resolution, paramodulation, inference rules, heuristics .c 3.64 3.66
2421 | scan conversion algorithm reduced storage requirement | graphic system raster scan output device crt hardcopy maintain display xy random scan format scan converter hardware software provided translate picture description xy format raster format published scan conversion algorithm fast reserve buffer area large accommodate entire screen hand small buffer area slow require multiple pass xy display scan conversion algorithm linked list data structure process line drawing strip group scan line small primary memory buffer area accumulate binary image group scan line portion drawing plotted buffer reused portion list processing procedure single pas xy display required generating binary image slight increase execution time fully buffered core result result slow storage requirement reduced percent causing percent increase execution time | jordan, b. w. jr. barrett, r. c. .k graphics, scan conversion, raster plotter, line drawing, discrete image, dot generation .c 4.41 6.35 8.2
2422 | adaptive correction program statement corrigendum | james, e. b. partridge, d. p.
2423 | parser generating system constructing compressed compiler | paper describes parser generating system pgs cdc computer purdue university pgs fortran coded compiler input translation grammar bnf syntactic rule corresponds possibly empty code generator realizable assembly language fortran algol subroutine called syntactic rule applied parse program typical pas compiler constructed pgs translate source program speed approaching card minute xpl compiler parser program table occupy word bit core memory word parsing table entry word link code generator | mickunas, m. d. schneider, v. b. .k parser generators, translator writing systems, syntactic analysis, normal-form grammars, pushdown  automata, translation grammars, translator optimization, compression algorithm .c 4.12 5.22 5.23
2424 | dynamic verification operating system decision | dynamic verification decision implies time decision made consistency check performed decision independent hardware software dynamic verification operating system decision prime system designed constructed university california berkeley prime experimental time sharing property continuous availability data privacy cost effectiveness technique dynamic verification construction operating system make decision improperly presence single hardware software fault multiple fault lead unreliable operation fault happen reinforce prime dynamic verification ensure user information user gratuitously presence single hardware software fault amount additional hardware software required dynamic verification modest | fabry, r. s. .k operating systems, data security, fault tolerance, software reliability, data privacy, program  verification, modular computer systems .c 4.32
2425 | programmer navigator | bachman, c. w.
2426 | algorithm scale1 scale2 scale3 determination scale computer generated plot j6 algorithm a463 | lewart, c. r. .k plotting, scaling for plotting .c 4.41
2427 | bivariate normal distribution s15 algorithm a462 | donnelly,t. g. .k bivariate, normal gaussian, frequency distribution .c 5.5
2428 | cubic spline solution class functional differential equation d2 algorithm a461 | burkowski, f. j. hoskins, w. d. .k differential equation, spline approximation .c 5.17
2429 | calculation optimum parameter alternating direction implicit procedure d3 algorithm a460 | saylor, p. e. sebastian, j. d. .k elliptic difference equations, peaceman-rachford, douglas-rachford, w. b. jordan, optimum parameters,  alternating-direction-implicit, adi .c 5.14 5.17
2430 | elementary circuit graph algorithm a459 | syslo,m. m. .k algorithm, graph theory, circuit search algorithm, path search algorithm, searching .c 3.74 4.22 5.32
2431 | discrete linear l1 approximation interval linear programming e2 algorithm a458 | robers, p. d. robers, s. s. .k discrete approximation, l1 approximation .c 5.13 5.41
2432 | addendum multiple precision division algorithm | mifsud, c. j. bohlen, m. j. .k multiple-precision, division, overflow .c 3.15 4.0 5.1
2433 | control structure illiac iv fortran | part effort design implement fortran compiler illiac iv extended fortran called ivtran developed language mean expressing data control structure suitable exploiting illiac iv parallelism paper review hardware characteristic illiac single unconventional feature expected influence language compiler design implication feature data layout algorithm structure discussed conclusion drawn data allocation code structuring crucial illiac optimization problem satisfactory method data allocation presented language structure utilize storage method express parallel algorithm | millstein, r. e. .k array processing, parallelism detection, explicit parallelism, array allocation, parallel control  structures, illiac iv fortran .c 4.12 4.21 4.22
2434 | page residency select working set parameter | denning method selecting working set parameter interreference interval examined omission model noted assumption introduced overcome omission modified model dening result page residency rederived reconsidered selecting working set parameter | prieve, b. g. .k working set model, paging, program behavior,program modeling .c 4.3
2435 | class dynamic memory allocation algorithm | anew dynamic memory allocation algorithm fibonacci system introduced algorithm similar advantage buddy system generalization mentioned includes system special case | hirschberg, d. s. .k dynamic storage allocation, buddy system, simulation, fibonacci, fragmentation .c 3.89 4.32 4.39
2436 | note confinement problem | note explores problem confining program execution transmit information program caller set example attempt stake boundary problem condition solution stated informally justified | lampson, b. w. .k protection, confinement, proprietary program, privacy, security, leakage of data .c 2.11 4.30
2437 | general performance analysis key address transformation method abstract concept | paper present approach analysis performance key address transformation method approach key assumed selected key space according probabilistic selection algorithm number key selected key space suitably weighted accordance algorithm average performance transformation method potential method analysis method performance classified key distribution partial transformation identified analytically approach applied group transformation method key selected randomly | lum, v. y. .k hashing, hashing techniques, hashing methods, hash coding, key transformation, key-to-address transformation,  direct addressing, randomizing, random access, scatter storage, information retrieval, hashing analysis,  randomization performance analysis .c 3.7 3.72 3.73 3.74 3.79 4.9 5.9
2438 | model stack implementation multiple environment | control access environment structure require storage procedure activation exist time control nested procedure activated straightforward implement dynamic storage allocation linked block activation expensive time space paper present implementation technique single stack hold procedure activation storage retention storage duration necessarily tied control flow technique property simple case run identically usual automatic stack allocation deallocation procedure application technique multitasking coroutines backtracking label valued variable functional argument discussed initial model single real processor assumed implementation assumes multiple process coordinate passing control explicitly multiprocessor implementation requires basic technique | bobrow, d. g. wegbreit, b. .k control structures, environments, stack allocation, dendrarchy, retention, dynamic storage allocation,  access environments, funarg problem, multitasking, coroutines, backtracking, label-valued variables,  functional arguments, multiprocessor systems, extensible control structures .c 4.1 4.2 4.22 4.3 4.32 5.24
2439 | multiple terminal user program control time sharing environment | user written program dartmouth time sharing system communicate remote terminal simultaneously control interaction terminal program written standard input output instruction language system paper describes multiple terminal facility implemented requiring system executive system compiler interpreter | mcgeachie, j. s. .k dtss, multiple terminals, remote terminals, remote consoles, time-sharing, on-line interaction,  on-line games .c 3.81 4.32
2440 | localization root polynomial algorithm r429 | driessen, h. b. hunt, e. w. lem.
2441 | hidden line plotting program algorithm r420 | williamson, h.
2442 | sparse matrix package algorithm r408 | lawrence, e. e.
2443 | generation permutation lexicographic order algorithm r323 | roy, m. k.
2444 | finding clique undirected graph algorithm a457 | bron, c. kerbosch, j. .k cliques, maximal complete subgraphs, clusters, backtracking algorithm, branch and bound technique,  recursion .c 3.71 5.32
2445 | routing problem algorithm a456 | fencl, z. .k routing problem, shortest path, traveling salesman problem, hamiltonian circuit .c 5.40
2446 | analysis skew representation symmetric group algorithm a455 | hunter, d. b. williams, j. m. .k symmetric group, skew representation, partition, young diagram, lattice permutation, binary model,  outer product .c 5.30
2447 | sard kernel bivariate cubatures | error analysis bivariate cubatures remainder obtained sard kernel numerical result computer graph kernel function | barnhill, r. e. pilcher, d. t. .k cubatures, sard kernels, numerical integration, remainder formulas .c 5.13 5.16
2448 | reversible execution | zelkowitz, m. v. .k debugging, pl/i, reversible execution, backtracking .c 4.22 4.42
2449 | simple technique structured variable lookup | simple technique symbol table lookup structured variable based simple automaton theory presented technique offer deterministic solution problem handled nondeterministic manner pl cobol compiler | gates, g. w. poplawski, d. a. .k symbol table organization, pl/i and cobol structured variables .c 4.12
2450 | empirical working set behavior | working set model program behavior proposed recent year basis design scheduling paging algorithm word working set commonly encountered literature dealing resource allocation dearth published data program measurement hope worker field find experimental evidence substantiate base theoretical work | rodriguez-rosell, j. .k virtual memory, paging, working set, software measurement, program behavior .c 4.3
2451 | design tree structure efficient querying | standard information retrieval operation determine record data collection satisfy query expressed term data value process locating desired response represented tree search model paper pose optimization problem design tree serve application problem academic sense ordinarily optimal tree implemented mean practical technique hand potentially comparison affords observed performance intuitively attractive ideal search procedure practical application model paper considers design tree search scheme based bit vector representation data show essentially algorithm design ideal search tree bit vector tree experimental study small formatted illustrates concept | casey, r. g. .k tree file, information storage and retrieval, clustering, search, data structure, data management,  query answering .c 3.62 3.74
2452 | evaluation selection organization model system | work discus factor affect data base organization performance elusive subject present methodology model programmed system estimate primarily total storage cost average access time organization specific data base query characterization device related specification based estimate structure selected specific situation system convenient tool study structure facilitate process data base structure design evaluation | cardenas, a. f. .k file organization, file structures, file management, file organization performance, file organization  model, file structure design, secondary index organization, simulation, data base, access time, storage  requirement, data base analysis, data management .c 3.70 3.71 3.72 3.74 3.79 4.0
2453 | information theory applied conversion decision table computer program | idea information theory paper develops heuristic algorithm convert limited entry decision table tree structured computer program minimum average processing time method applicable limited entry decision table require action single rule cost testing condition equal general previously published heuristic algorithm compared optimal algorithm reinwald soland algorithm easy code take smaller translation time felt practice algorithm suited conversion decision table flowchart | ganapathy, s. rajaraman, v. .k decision tables, optimum computer programs, information measure .c 3.50 4.12 5.6
2454 | computational algorithm closed queueing network exponential server | method presented computing equilibrium distribution customer closed queueing network exponential server expression marginal distribution derived computational algorithm based dimensional iterative technique highly efficient simple implement implementation consideration storage allocation strategy order evaluation examined detail | buzen, j. p. .k queueing theory, queueing networks, equilibrium distributions, steady state distributions .c 5.12 5.5 8.1 8.3
2455 | generalization avl tree | generalization avl tree proposed imbalance triangle shape small integer experiment performed compare tree standard avl tree balanced tree basis mean retrieval time amount restructuring expected worst case retrieval time shown permitting imbalance unit retrieval time increased small amount amount restructuring required decreased factor ten theoretical result derived including correction earlier paper duly compared experimental data reasonably good correspondence found | foster, c. c. .k avl trees, balanced trees, information storage and retrieval .c 3.7 3.72 4.49 5.31
2456 | capability repeat exit statement | formed program defined program loop statement properly nested entered beginning definition formed flowchart shown program formed written repeat multi level exit statement sequence control shown repeat statement single level exit suffice shown flowchart converted formed flowchart node splitting practical implication discussed | peterson, w. w. kasami, t. tokura, n. .k well-formed program, while statement, repeat statement, exit statement, go to statement, flowchart,  node splitting, software reliability .c 4.39 4.49 5.29
2457 | inductive methodsfor proving property program | main purpose paper clarification extension known result computation recursive program emphasis difference theoretical practical approach presentation examination known method proving property recursive program discussed detail powerful inductive method computational induction structural induction including example application | manna, z. nes, s. vuillemin, j. .k recursive programs, least fixed point, computational induction, structural induction .c 4.2 5.23 5.24
2458 | localization root polynomial algorithm r429 | williams, e. j.
2459 | hu tucker minimum redundancy alphabetic coding method algorithm r428 | byrne, j. g.
2460 | clenshaw curtis quadrature algorithm r424 | good, a. j.
2461 | graph plotter algorithm r412 | watkins, r. p.
2462 | efficient prime number generator algorithm r357 | demorgan, r. m.
2463 | complex gamma function algorithm r404 c404 | andrejkova, g. vinar, j.
2464 | complex method constrained optimization e4 algorithm a454 | richardson, j. a. kuester, j. l. .k optimization, constrained optimization, box's algorithm .c 5.41
2465 | gaussian quadrature formula bromwich integral d1 algorithm a453 | piessens, r. .k gaussian quadrature, bromwich's integral, complex integration, numerical inversion of the laplace  transform .c 5.16 5.13
2466 | enumerating combination object g6 algorithm a452 | liu, c. n tang, d. t. .k permutations, combination .c 5.30
2467 | chi square quantiles g1 algorithm a451 | goldstein, r. b. .k chi-square, asymptotic approximation, normal deviate, chi-square deviate, degrees of freedom .c 5.12 5.5
2468 | rosenbrock function minimization e4 algorithm a450 | machura, m. mulawa, a. .k function minimization, rosenbrock's method .c 5.19
2469 | petri net speed independent design | petri net investigated method modeling speed independent asynchronous circuit study circuit realization petri net lead demonstration usefulness modeling speed independent operation usefulness emphasized design speed independent processor module developed investigation petri net implementation | misunas, d. .k speed independent asynchronous, petri net .c 6.1 6.33
2470 | fen axiomatic basis program semantics | formal system presented abstract notion data item function relation argued system suitable set theory derivative concise accurate description program semantics shown system build composite data type simper operation rowing structuring uniting demonstrated completely primitive type introduced language mechanism singleton data type deterministic nondeterministic function shown definable system local environment modeled data item imperative statement considered function environment nature recursive function briefly discussed technique presented introduced system technique contrasted paradoxical combinator question local global environment mode function calling parameter passing touched theory applied proof elementary theorem concerning semantics assignment conditional iterative statement appendix included present detail formal system governing web fen abstraction informally body paper | maclennan, b. j. .k semantics, formal systems, lambda-calculus, extensible languages, data types, modes, axioms, correctness,  formal language definition, formal description, data structures, description languages, models of computation .c 4.22 5.21 5.24 5.26
2471 | learning program play partnership domino | learning program written basic play player partnership domino domino game incomplete information program principle artificial intelligence program game complete information checker chess program constructed strategy signature table classifies board situation interaction game parameter entry table adaptively determined weight indicating advi sability strategy chosen strategy employ probability analysis linear polynomial evaluation choose move program win approximately third game tournament situation defeated championship player | smith, m. h. .k artificial intelligence, intelligence learning, heuristic procedures, heuristic programming, game  playing, problem solving,dominoes, incomplete information, machine learning, signature table, learning  programs, strategy learning .c 3.62 3.64 3.66 3.69
2472 | minimal spanning tree algorithm r422 | kernighan, b. w. .k spanning tree, minimal spanning tree, prim algorithm .c 5.32
2473 | hidden line plotting program algorithm r420 | macleod, i. d. g. collins, a. m. .k hidden-line plot, surface plot .c 4.9
2474 | difsub solution ordinary differential equation algorithm c407 | nikolai, p. j. .k differential equations, stiff differential equations, boundary value problems .c 5.17
2475 | solution linear programming problem variable h1 algorithm a449 | fiala, f. .k linear programming, zero-one variable  .c 5.41
2476 | equivalence graph context free grammar | hall, p. a. v. .k artificial intelligence, and/or graphs, language theory, context-free grammars .c 3.60 3.64 5.23
2477 | multiple exit loop goto | bochmann, g. v. .k control structures, goto free programming, multiple exits from loops, exit statement .c 4.20 4.22
2478 | computer science seminar undergraduate | kandel, a. .k education, computer science, curriculum, imprecise synthesis, fuzzy educational structure .c 1.52 6.0
2479 | curriculum recommendation graduate professional program information system recommended addendum information system administration | addendum report acm curriculum committee computer education management proposed proposed addendum include curriculum course information system administration important reason system designer understand administrative framework operate work effectively important objective curriculum recommendation prepare future manager computer activity felt importance reason justifies addition recommended course course outlined format original report | mcfarlan, f. w. nolan, r. l. .k education, management information systems, information systems administration, information systems  management, computer management .c 1.52 3.51
2480 | teaching programming | paper present goal organization course programming designed provide entering student graduate program cultural enrichment professional life student expected programming course prior familiar programming language student user teaching program similar teaching play musical instrument skill taught learned teacher serf vital purpose present set rule producing formed utterance offer numerous demonstration skill function involved critic finally teacher source information process student involved | rosin, r. f. .k education, programming concepts, professionalism .c 1.52 2.2 4.22
2481 | distribution program primary fast buffer storage | virtual memory computer system fast buffer cache memory primary memory central processing unit considered optimal distribution program buffer primary memory studied program lifetime function expression distribution program maximizes fraction cost time integral primary fast buffer storage obtained swapping nonswapping buffer management policy | gelenbe, e. .k cache, virtual memory, lifetime function, cost-time integral, fast buffer .c 4.3 6.2 6.3
2482 | mixed solution deadlock problem | mixture detection avoidance prevention provide effective practical solution deadlock problem individual technique tailored subproblems resource allocation operate prevent deadlock paper present method based concept hierarchical operating system constructing mixture suggests subsystem frequently occurring resource allocation problem | howard, j. h. jr. .k deadlocks, resource allocation, operating systems, multiprogramming, hierarchical systems .c 4.30 4.32
2483 | coko iii cooper koz chess program | coko iii chess player written entirely fortran ibm coko iii play minimal chess game rate sec cpu time move level close lower chess club play selective tree searching procedure controlled tactical chess logistics deployment multiple minimal game calculation achieve optimal move selection tree searching algorithm heart coko effectiveness conceptually simple addition interesting phenomenon called tree searching catastrophe plagued coko entire development trouble human player standard exponential growth curbed large extent definition trimming fischer set clear distinction tree pruning selective tree searching made representation chess environment strategical preanalysis procedure map lasker region specific chess algorithm command structure desiring chess program experimentation comparison made mysterious action human player coko iii | kozdrowicki, e. w. cooper, d. w. .k artificial intelligence, selective searching, tree searching, tree searching catastrophe, heuristic  programming,chess algorithms, lasker regions, fischer set, minimal chess game, strategical, tactical,  tactical control mode, game playing, alpha beta, machine learning, concept formation, command structure,  minimax, computer chess tournament, auxiliary minimal game .c 3.60 3.66 3.74 4.22
2484 | note information organization storage | logical structure data base represented tree graph natural view process designing data base constructing tree graph general method constructing tree graph provided important element general construction method set binary relation algorithm constructing subset set algorithm selecting element set object relation algorithm result information structure list tree ring problem information organization storage reduced defining relation formulating algorithm set constraint result presented valuable designer design concept serve basis developing formal theory subject | huang, j. c. .k data base, data-base management, information retrieval, information structure, file organization,  storage allocation, tree, graph .c 3.70 3.73 3.74 5.32
2485 | managing computer resource stage hypothesis | based study expenditure data processing descriptive stage hypothesis presented suggested planning organizing controlling activity managing computer resource change character period time evolve pattern roughly correlated stage computer budget stage computer acquisition stage ii intense system development stage iii proliferation control stage iv user service orientation stage related individual task managing computer resource | nolan, r. l. .k computer management, computer budget, computer expenditures, stage hypothesis, planning, organizing,  control, computer resource .c 2.41 2.43 3.50
2486 | computer photocomposition technical text | computer assisted typesetting mean photocomposition special problem arise highly technical material mathematical formula solution problem devised information system american institute physic include representation special character foreign alphabet mathematical symbol input keyboard photocomposer generation symbol overprinting precise positioning accent mark floating diacritic line break word formula partly end line partly beginning aspect error correction | alt, f. l. yuni kirk, j. .k photocomposition, typesetting, printing, graphics, text processing .c 3.79 3.82
2487 | cubic spline solution fourth order boundary problem | cubic spline approximation fourth order differential equation shown reduce solution term recurrence relationship special case approximation shown simply related finite difference representation local truncation error order delta | hoskins, w. d. .k cubic spline, differential equations, boundary value problem .c 5.13 5.17
2488 | square piecewise cubic curve fitting | matrix involved linear square formulation determined problem fitting piecewise cubic function possessing continuous derivative array planar data | ferguson, j. staley, p. a. .k curve fitting, data reduction, function approximation, approximation splines .c 5.13
2489 | number multiply restricted partition a1 algorithm a448 | beyer, t. swinehart, d. f. .k partitions, enumeration, change making, energy-level degeneracies, molecular vibrational energy-levels .c 3.13 5.30
2490 | efficient algorithm graph manipulation algorithm a447 | efficient algorithm presented partitioning graph connected component biconnected component simple path algorithm partitioning graph simple path iterative iteration produce path vertex path start vertex dynamically number vertex number edge algorithm requires time space proportional max executed random access computer | hopcroft, j. tarjan, r. .k graphs,analysis of algorithms, graph manipulation .c 5.32
2491 | threaded code | concept threaded code presented alternative machine language code hardware software realization software realized interpretive code needing interpreter extension optimization mentioned | bell, j. r. .k interpreter, machine code, time tradeoff, space tradeoff, compiled code, subroutine calls, threaded  code .c 4.12 4.13 6.33
2492 | development decision table parsing complex decision situation | parsing technique proposed parsing based syntactical characteristic decision problem requires description problem decision grid chart format development decision table defined limit avoiding minimizing repetition condition action resulting table | strunz, h. .k decision tables, parsing, decision grid chart,problem analysis .c 4.0 4.1 4.2
2493 | optimum data base reorganization point | data base organization scheme cost access increase due structural inefficiency caused update reorganizing data base cost access reduced high cost reorganization prohibits frequent reorganization paper examines strategy selecting optimum reorganization point | shneiderman, b. .k data base, reorganization, files, information retrieval .c 3.73
2494 | computer generated aid cluster analysis | computer generated graphic method conjunction hierarchical scheme cluster analysis illustrated graphic principle representation element data matrix similarity dissimilarity computer printed symbol character overstrikes shade darkness dark symbol corresponds small dissimilarity plot applied data matrix clustering rearranged matrix clustering show glance clustering brought distinctive cluster known set data consisting correlation psychological test illustrate comparison grouping method factor analysis method cluster analysis | ling, r. f. .k computer graphics, cluster analysis, numerical taxonomy, hierarchical clustering, factor analysis .c 3.10 3.30 3.36 4.49
2495 | adapting optimal code generation arithmetic expression instruction set present day computer | stockhausen, p. f. .k arithmetic expressions, code generation, compilers, object-code optimization, register assignment,  trees .c 4.12 5.24 5.32
2496 | optimality shortest latency time drum scheduling discipline | computer system practical determine instantaneous drum position popular discipline determining sequence record accessed called shortest latency time sltf discipline collection varying length record accessed drum position known sltf discipline necessarily minimize drum latency time show total time access entire collection sltf schedule drum revolution longer minimum latency schedule | stone, h. s. fuller, s.  h. .k drum scheduling, shortest-access-time-first, minimal latency scheduling, shortest-latency-time-first .c 4.31 4.41 6.35
2497 | synchronizing processor memory content generated interrupt | implementation lock unlock method synchronizing processor multiprocessor system require uninterruptable memory pause type instruction interlock scheme called read interlock require memory pause instruction developed dual dec pdp system real time requirement read interlock method require special read interlock instruction repertoire processor special read interlock cycle repertoire memory module processor examines lock memory location read interlock instruction interrupted lock set examining lock immediately set set event sequence read interlock cycle writing lock clear processor interrupted encountering set lock branching advantageous branch resulted effective interrupt | hill, j. c. .k interrupts,supervisors, monitors, debugging, parallel processing, associative memories, microprogramming .c 4.32 6.29
2498 | minimizing wasted space partitioned segmentation | paged virtual memory system finite number page size considered algorithm assigning page segment discussed algorithm simple implement problem choosing page size minimize expected total wasted space internal fragmentation page table segment solved probability density function segment size expressed convex combination erlang density | gelenbe, e. .k dynamic storage allocation, virtual memory, paging, multiple page sizes, fragmentation, segmentation .c 4.0 4.3 4.32 6.34 8.3
2499 | efficient multiprogramming resource allocation accounting | thought component time sharing operation multiprogramming involve broader question resource allocation fairness required meet response criterion multiprogrammed system serve maximal resource unfair holding input output channel idle program completes small amount processor usage enabling channel application principle suggested multiprogramming executive dynamically adjust allocation algorithm gain efficiency allocation resource closely connected accounting resource raising problem repeatability minimal uncharged overhead relative weighting charge dependent resource weighting depend allocation algorithm arbitrary accounting parameter repeatable accounting omits extensive overhead paid multiprogramming prove efficient overcharge result multiprogramming turn allocation memory resource essential control resource general suggestion allocation accounting applied question detail provided case monitor control virtual memory machine | hamlet, r. g. .k monitor, executive, multiprogramming, efficiency, resource allocation, resource accounting .c 4.32
2500 | practical approach managing resource avoiding deadlock | resource scheduling allocation expensive regard time space multiprogramming time sharing environment involving large number task resource conflicting requirement detection prevention deadlock require massive amount additional overhead efficient usage resource maintained resource management program linked list technique overcome large portion overhead program running part large scale general purpose operating system keep resource active detect prevent deadlock implemented state permit comprehensive level deadlock prevention detection additional cost incorporated running system due infrequency deadlock situation | frailey, d. j. .k deadlock, resource allocation, scheduling, resource management, multiprogramming, time-sharing,  multiprocessing, deadly embrace .c 4.30 4.32
2501 | wylbur interactive text editing remote job entry system | wylbur comprehensive system manipulating kind text computer program letter manuscript typewriter terminal connected computer facility remote job entry retrieval facility text alignment justification powerful method addressing text content provided paper describes external appearance wylbur internal structure short description major feature orvyl general purpose time sharing system operates conjunction wylbur included | fajman, r. borgelt, j. .k text editing, time-sharing, on-line text editing, interactive text editing, terminal, remote terminal,  terminal system, interactive terminal, remote job entry, remote job retrieval, program preparation, document  preparation, data entry, content addressing .c 3.70 3.79 4.10 4.19 4.41 4.43 4.49
2502 | comment practical aspect computer science education | estell, r. g. .k education, computer engineering, computer sciences curriculum, systems design .c 1.52 6.0
2503 | comment computer music | wexelblat, r. l.
2504 | concerning music computer composition computational linguistics | mcmorrow, c. h. .k artificial intelligence, heuristic programming, models of cognitive processes, computer music,  computer composition,music theory .c 3.44 3.65
2505 | reflection free permutation rosary permutation adjacent transposition algorithm | roy, m. k. .k permutation, permutation generation, scheduling, combinatorial analysis .c 5.39
2506 | sparse matrix package algorithm r408 | sale, r. h. j. .k matrix, sparse matrix, matrix manipulation, fortran standards .c 5.14
2507 | exact solution linear equation residue arithmetic algorithm r406 | howell, j. .k residue arithmetic, symmetric residue, modulus, mixed-radix representation, symmetric mixed-radix  representation, mixed radix conversion, prime number, linear equations, gaussian elimination, matrix  inversion, determinant, adjoint matrix, ill-condition .c 3.5 5.14
2508 | increasing efficiency quicksort algorithm r402 | wheeler, r. e. .k sorting, quicksort .c 3.73 4.49 5.31 5.6
2509 | minit algorithm linear programming algorithm r333 | obradovic, d.
2510 | minit algorithm linear programming algorithm r333 | holmgren, b. obradovic, d. kolm, a.
2511 | maxflow algorithm r324 | bayer, g.
2512 | coulomb wave function algorithm r300 | vos, h. .k coulomb wave functions, wave functions, special functions, function evaluation .c 5.12
2513 | nonrecursive list moving algorithm | efficient nonrecursive algorithm moving lisp type list algorithm requires storage node list moved additional bit node marking algorithm run time proportional number node list original list structure destroyed moved | reingold, e. m. .k list moving, list copying, list traversal, garbage collection lisp .c 4.19 4.49
2514 | array grammar programming system | package fortran program developed permit user interactively design test array grammar user control rule selection procedure derivation parse weighted programming matrix choice instance selection scheme raster random parallel example involving array language consisting simple geometrical pattern language neuron picture | mercer, a. rosenfeld, a. .k picture grammars, array grammars .c 3.63 5.23 8.2
2515 | minimal event node network project precedence relation | procedure constructing minimal event node network represent set precedence relation parallel activity presented minimal event node network event node network number node number arc minimum preserve precedence relation counterexample show algorithm presented fisher liebman nemhauser produce event node network minimal procedure includes set covering problem time required grow exponentially number activity | corneil, d. g. gotlieb, c. c. lee, y. m. .k network, project, event-node network, activity-node network, minimal event-node network, dummy  activity, project precedence relations .c 3.57 5.32 8.3
2516 | hierarchical storage information retrieval | probabilistic analysis employed determine effect hierarchical storage organization information retrieval operation data storage hardware assumed consist level linearly connected memory hardware increasing data access time increasing data storage capability system consist fast semiconductor memory computer core memory extended core storage disk memory data cell equation derived predict effect system data access time sequential random access structured employing multiple hierarchical linked list | salasin, j. .k information retrieval, hierarchical storage .c 3.70 3.72 3.73 3.74 3.79 3.90 6.20 6.34
2517 | comment ambiguous decision table conversion computer program | paper comment recently published work decision table translation method similar rule mask technique applicability method convention table meaning discussed argued place multi rule single rule action set convention decision tale usage | king, p. j. h. johnson, r. g. .k decision tables, systems analysis, programming .c 3.50 3.59 4.19 4.29 4.49
2518 | programming questionnaire effective decision table | programming questionnaire combine aspect decision table programming general purpose programming decision table construct application program selection source statement predefined proposed programming questionnairies compromise general special purpose programming significant class large scale problem element approach discussed existing application | low, d. w. .k customizing, modeling, applications development, programmer productivity, simulator generation,  automatic program generation, no reprogramming .c 4.20 4.22 4.29
2519 | problem communicating complex information | nature difficulty involved communicating mathematical result scientist computer based information retrieval system examined problem analyzed term psychological information processing process turn vicious circle effect include way augmenting written natural language notational linguistic device exhibition structure inherent information communicating sophisticated interactive system controlled computer | pager, d. .k complex information, information, communication, mathematics, proof, interactive system, language .c 1.0 1.1 1.50 1.52 1.59 2.42 3.32 3.51 3.62 3.70 3.81
2520 | greatest common divisor integer multiplier algorithm c386 | ragland, l. c. good, d. i. .k proof of algorithms, greatest common divisor, euclidean algorithm, inductive assertion method .c 3.15 4.42 5.10 5.24
2521 | ten subroutine manipulation chebyshev series c1 algorithm a446 | broucke, r. .k chebyshev series, differentiation, integration, curve fitting,approximations, negative powers .c 5.12 5.13 5.16
2522 | design implementation evaluation working set dispatcher | behavior computer system largely dependent algorithm employed allocate system resource process competing recent research time sharing paging system developed working set model program behavior source allocation strategy based model proposed implementation principle reported case result announced report discus design implementation dispatcher based working set principle present data permit analysis behavior future direction research method controlling computer system | rodriguez-rosell, j. dupuy, j. p. .k working set, dispatcher, scheduler, time-sharing systems, resource allocation, software evaluation,  operating systems, supervisory systems .c 4.31 4.32
2523 | region coloring technique scene analysis | method converting picture cartoon map region correspond differently textured region texture edge picture detected solid region surrounded broken edge colored propagation process resulting map cleaned comparing region color texture region picture merging region according criterion based topology size method applied construction cloud cover map cloud cover picture obtained satellite | strong iii, j. p. rosenfeld, a. .k picture processing, scene analysis, edge detection .c 3.63 8.2
2524 | approach match searching | problem searching set key find key closest query key discussed closest term metric key space suitably defined structure presented search algorithm intended reduce number comparison required achieve desired result method derived inequality satisfied metric graph theoretic concept empirical result presented compare efficiency method | burkhard, w. a. keller, r. m. .k matching, file structuring, file searching, heuristics, best match .c 3.73 3.79 4.9
2525 | statistical study accuracy floating point number system | paper present statistical result test accuracy arithmetic system evaluating sum product product analytic error estimate computation arithmetic system studied digit hexadecimal digit binary floating point number representation combined usual chop round mode arithmetic number guard digit modified round mode guard digit sense arithmetic system differing binary hexadecimal number representation shown approximately statistically equivalent inaccuracy usual round mode guard digit shown statistically superior accuracy usual chop mode case save modified round mode found superior chop mode case | kuki, h. cody, w. j. .k error analysis, floating point arithmetic, rounding, guard digits, number representation .c 5.11 5.5 6.32
2526 | asymmetric memory hierarchy | study presented system implication memory hierarchy backing secondary store small read time relative time required writing read time conventional backing storage device analytic model introduced shown hierarchy operate way differ conventional hierarchy shown multiprogram situation past backing storage device roughly symmetric respect read write time situation continue device development small read time write time ratio study place emphasis system rca read write holographic optical memory | williams, j.g. .k asymmetric memory hierarchy, demand paging, holographic optical memory, memory device, memory hierarchy,  paging, storage device, storage hierarchy, virtual memory .c 4.3 4.32 5.2 6.2 6.34
2527 | implementation high level language machine | computing machine directly execute statement high level language proposed past report describes actual implementation machine computer machine language apl machine fully operational correctly executes apl operation scalar vector array machine allocates memory executes statement call function convert number type check subscript detects type programmer error | hassitt, a. lageschulte, j. w. lyon, l. e. .k computer architecture, high level language machine, emulators, microprogramming, interpreters,  execution speed, apl .c 4.1 6.2
2528 | binary pattern reconstruction projection algorithm r445 | lau, j. .k pattern reconstruction, image reconstruction, data compression, picture processing .c 3.63 5.30
2529 | binary pattern reconstruction projection algorithm a445 | chang, s. .k pattern reconstruction, image reconstruction, data compression, picture processing  .c 3.63 5.30
2530 | algorithm extracting phrase space optimal fashion algorithm a444 | wagner, r. a. .k information retrieval, coding, text compression .c 3.70 5.6
2531 | graduate education ph glut | payne, w. h. .k graduate education, ph.d. production, accreditation .c 1.5 2.2 2.3
2532 | harrison substring testing technique | bookstein, a. .k string, substring, hashing, information storage and retrieval .c 3.74 5.30 5.5
2533 | gray code sign sequence ordered | salzer, h. e. .k gray code, sign sequences, ordering, positive monotonic functions, binary system, galois sum .c 5.10
2534 | design implementation diagnostic compiler pl | pl compiler dialect pl design objective provide maximum degree diagnostic assistance batch processing environment part assistance implicit provided compiler remarkable characteristic pl perseverance completes translation program submitted continues execution user established error limit reached requires compiler repair error encountered translation execution design pl dominated consideration pl introduces explicit user controlled facility program testing accommodate extension pl abandoning compatibility ibm compiler pl permit pseudo comment construction content optionally considered source test comment spite diagnostic effort pl fast efficient processor effectively demonstrates compiler provide diagnostic assistance customarily offered sophisticated source language employed assistance need prohibitively costly | conway, r. w. wilcox, t. r. .k compilers, debugging, pl/i, programming languages .c 1.5 4.12 4.42
2535 | effect multiplexing computer communication system | study made asynchronous time division multiplexing stochastic nature arrival process user computer affect performance time shared computer communication system concluded value system parameter noticeable improvement performance computer model sense time shared scheduling delay reduced improvement offset transmission delay imposed multiplexing change computer communication system performance analytical simulation result based model computer communication system queue multiplexor tandem single exponential server computer analytical result include general description output process queue condition output process approximately poisson | pack, c. d. .k computer communications, time-sharing, multiplexing, scheduling algorithms, operating systems .c 3.80 3.81 6.20
2536 | telecommunication front end minicomputer | front end minicomputer provide varied remote terminal access large scale computer considered problem embedding telecommunication operating system discussed shown decentralization intelligence acquired front end processing vastly simplifies problem specific implementation discussed emphasis main processor minicomputer link hardware software implementation effect main processor operating system assessment advantage hard wired line controller | feinroth, y. franceschini, e. goldstein, m. .k telecommunications, minicomputer, front-end processor, remote job entry, remote terminals .c 3.81 4.32 4.41
2537 | common phrase minimum space text storage | method saving storage space text string compiler diagnostic message method relies hand selection set text string common message phrase stored storage technique rise mathematical optimization problem determine message phrase minimize storage requirement problem nontrivial phrase overlap exist dynamic programming algorithm presented solves problem time grows linearly number character text algorithm applies paper | wagner, r. a. .k diagnostic messages, error messages, common phrases, minimum space, text storage, optimization,  dynamic programming .c 3.73 4.10 5.41
2538 | computer science course program small college | acm subcommittee small college program committee curriculum computer science cccs appointed consider unique problem small college university make recommendation regarding computer science program school report authorized subcommittee cccs supply set recommendation course resource implementation problem discussed specifically constraint limited faculty purpose satisfying wide variety objective detailed description course suggestion made advanced work extensive library list included | austing, r. h. engel, g. l. .k computer science education, course proposals, small colleges, programming course, social implications  course, computer organization course, file organization course, bibliographies .c 1.52
2539 | solution transcendental equation exp c5 algorithm a443 | fritsch, f. n. shafer, r. e. crowley,w. p. .k transcendental function evaluation, solution of transcendental equation .c 5.12 5.15
2540 | property working set model corrigendum | denning, p. j. schwartz, s. c.
2541 | overview ispl computer system design | paper explores advantage concurrent design language operating system machine microcode create interactive programming laboratory describes synergistic effect freedom move alter feature domain design system implemented freedom simplified incremental compilation system addressing structure centralized communication mechanism enabling construction hierarchical subsystem suggested important concept operating system separation scheduling maintenance function resource allocation separation enables incorporation scheduling algorithm decision endangering system integration correctly performing scheduling decision | balzer, r. m. .k concurrent design, operating-system, scheduling, interprogram communication, incremental compilation,  virtual addressing, debugging, hierarchical subsystems .c 4.0 4.13 4.22 4.30 4.32 4.41 4.42 6.20
2542 | software design evaluation system | critical failure software system design implementation methodology performance proposed design evaluated actually implemented paper reason failure explored methodology overcomes difficulty proposed system integrates performance evaluation design implementation system based simple high level language describe evolving system stage development source language description direct input performance analysis simulation routine performance information obtained routine feedback problem adversely affect performance detected early corrected costly major reimplementation proposed system | graham, r. m. clancy, g. j. jr. devaney, d. b. .k operating system development, language processing software evaluation, compilers, system programming,  supervisory systems, debugging, program maintenance, modeling, system integration, simulation .c 4.0 4.12 4.22 4.30 4.42 4.43 8.1
2543 | reducing retrieval time scatter storage technique | method entering retrieving information hash table method intended efficient entry looked time expected number probe look entry predicted theoretically verified monte carlo experiment considerably comparable method table nearly full fortran implementation | brent, r. p. .k address calculation, content addressing, file searching, hash addressing, hash code, linear probing,  linear quotient method, scatter storage, searching, symbol table .c 3.7 3.73 3.74 4.1 4.9
2544 | automatic error bound simple zero analytic function | cauchy ostrowski theorem convergence newton iterates analytic function variable extended include computational error complex interval arithmetic numerical example polynomial real complex root bessel function kind | rokne, j. .k real intervals, complex intervals, real interval arithmetic, complex interval arithmetic, newton's  method, cauchy-ostrowski theorem, zeros of polynomials, zeros of bessel functions .c 5.11 5.12 5.15
2545 | theory discrete pattern implementation snobol4 | notion discrete pattern formalized property deduced pattern shown generalization formal language algorithm implementing kind pattern snobol4 general approach create bottom parse top specification | gimpel, j. f. .k patterns, snobol4, pattern theory, parsing, pattern matching, string processing, pattern implementation .c 4.29 5.39
2546 | grammatical inference designing programming language | designing programming language extending existing language designer faced problem deriving natural grammar language proposing interactive approach grammar design problem designer present sample sentence structure input grammatical inference algorithm algorithm construct grammar reasonable generalization example submitted designer implementation presently restricted subclass operator precedence grammar algorithm outlined applies larger class context free grammar | crespi-reghizzi, s. melkanoff, m. a. lichten, l. .k grammar design, language definition, inference, identification in the limit, extensible languages .c 3.61 4.2 5.23
2547 | representation contour ad region efficient computer search | computer searchable representation basic pictorial feature contour map region coverage line structure representation practical storage requirement rapid mean searching large data geometric position attribute application representation handling terrain information illustrates utility algebraic property data structure make computationally easy determine point lie closed boundary compute area contained closed boundary generate closed boundary representing union intersection closed boundary determine neighboring boundary point minimum distance point | merrill, r. d. .k contour map representation, region boundary representation, computer-search-able structure, graphic  data retrieval, graphic language, two-dimensional patterns, computer graphics, graphic display .c 3.21 3.23 3.79 6.35
2548 | normal deviate s14 algorithm a442 | hill, g. w. davis, a. w. .k normal distribution inverse, probit transform, taylor series approximation .c 5.12 5.5
2549 | random deviate dipole distribution g5 algorithm a441 | knop, r. e. .k random number, probability density, probability distribution, dipole distribution, cauchy distribution,  simulation, monte carlo .c 3.17 5.5
2550 | multidimensional monte carlo quadrature adaptive stratified sampling d1 algorithm a440 | gallaher, l. j. .k monte carloquadrature, stratified sampling, adaptive quadrature, sequential stratification .c 5.16 5.5
2551 | mutual recursion algol restricted compiler | atkins,m. s. .k algol 60, mutual recursion, compiler restrictions .c 4.12 4.22
2552 | note chain overflow item direct access table | bays, c. .k hash code, open hash, chaining, information retrieval, collision .c 3.7 4.9
2553 | practical aspect computer science education discussion | blount, s. e. .k education, computer engineering, computer science curriculum, systems design .c 1.52 6.0
2554 | reduction band symmetric generalized eigenvalue problem | algorithm reducing generalized eigenvalue problem ax lambda bx ordinary problem case symmetric band matrix positive definite order matrix bandwidth matrix partitioned block algorithm term block algorithm reduces generalized problem ordinary eigenvalue problem symmetric band matrix bandwidth algorithm similar rutishauser schwartz reduction symmetric matrix band form calculation requires order mn operation round error calculation order sum error step algorithm error largely determined condition respect inversion | crawford, c. r. .k generalized eigenvalues, symmetric band matrices .c 5.14
2555 | variable precision exponentiation | previous paper presented efficient algorithm called recomputation algorithm evaluating rational expression desired tolerance computer performs variable precision arithmetic operation recomputation algorithm applied expression involving variable precision operation sum |ei
2556 | adaptive correction program statement | method analyzing statement programming language tolerate considerable inaccuracy specification proposed method involves principle present mainly confined study area artificial intelligence feature extraction approximate tree matching strategy improvement feedback matching process pilot program incorporating principle preliminary operating result presented final section survey principle investigated | james, e. b. partridge, d. p. .k adaptive, linguistic pattern matching, automatic parsing, approximate match, compiler, program  statement analysis, syntax analysis .c 3.62 3.63 3.65
2557 | time required sequence matrix product | paper discus multiplication conformable sequence row vector column vector square matrix minimum time required evaluate product ordinary serial computer parallel computer discussed algorithm presented properly parse matrix sequence subject constraint machine organization | muraoka, y. kuck, d. j. .k matrix expressions, matrix multiplication, operation minimization, parallel machine, time minimization .c 4.22 5.14
2558 | protection programming language | linguistic mechanism protect subprogram malfunctioning function producing function type tagging scheme considered attempt made distinguish access limitation authentication | morris, j. h. jr. .k protection, types, environments,trademarks, seals, access keys, access control authentication,  secrecy .c 4.2 4.3
2559 | reallocation hash coded table | space allocation hash coded table altered table entry rescattered space technique accomplishing rescattering presented technique independent length table hashing function utilized conjunction linear reallocation table rescattered eliminate previously flagged deletion hash coded table change hashing method efficiency technique discussed theoretical statistic | bays, c. .k reallocation, dynamic storage, hash code, scatter storage, deletions .c 3.7 3.73 3.74 4.9
2560 | queuing model multiprogrammed computer level storage system | result presented analysis probabilistic model multiprogrammed computer system level storage system sequential dependency access device expression obtained long run probability cpu storage device busy numerical result quantify gain cpu utilization obtainable multiprogramming presence type storage system | shedler, g. s. .k multiprogrammed computer system, storage system, hierarchical index sets .c 4.32
2561 | heuristic approach inductive inference fact retrieval system | heuristic procedure presented developed perform inference generalizing information procedure make similarity structure imposed data base nonnumerical clustering algorithm implemented model fact retrieval system formal query language property list data structure program experiment procedure test data base altered deleting part data purposely introducing false data found system infer correct response variety condition involving incomplete inconsistent data | skinner, c. w. .k inference, inductive inference, clustering, fact retrieval, heuristics .c 3.61 3.71 3.79
2562 | routing problem algorithm r456 | tesch, g.
2563 | merge sort algorithm r426 | bron, c.
2564 | hidden line plotting program algorithm r420 | ellis, t. m. r.
2565 | gaussian pseudo random number generator algorithm | brent, r. p. .k random numbers, pseudo-random numbers, gaussian distribution, normal distribution .c 5.39 5.5
2566 | exact cumulative distribution kolmogorov smirnov statistic small sample algorithm a487 | pomeranz, j. .k kolmogorov-smirnov test, k-s statistic, goodness-of-fit testing .c 8.1 5.5
2567 | exponential method solution system ordinary differential equation | explicit coupled single step method numerical solution initial problem system ordinary differential equation presented method designed general purpose nature especially efficient dealing stiff system differential equation general order case linear system constant coefficient linear forcing term case method order implemented put routine usage biological application stiffness frequently appears favorable result compared standard fourth order runge kutta implementation computation time required method ranged comparable nonstiff problem order magnitude faster highly stiff system | chu, s. c. berman, m. .k numerical solution, ordinary differential equations, initial value problems, stiff systems .c 5.17
2568 | graph formulation school scheduling algorithm | problem classically titled examination schedule problem take form literature formulation presented terminology classical network theory formulation nondirected network partition node minimal number subset member subset connected anarc obvious lower limit number size largest strongly connected subgraph kirchgassner proved upper limit size logical extension previous work introduction variable length examination number period exam object paper generalize definition largest strongly connected subgraph include weighting node present approximate algorithm find largest strongly connected subgraph discus application algorithm solution school scheduling exam scheduling problem | salazar, a. oakford, r. v. .k scheduling, school scheduling, examination scheduling, nondirected network, graph, subgraph, strongly  connected subgraph .c 3.51 3.52
2569 | computer generation gamma random variate non integral shape parameter | shape parameter integral generating gamma random variable digital computer straightforward simple method generating gamma random variate non integral shape parameter common procedure approximately generate random variable called probability switch method procedure exact due johnk paper present rejection method exactly generating gamma random variable greater efficiency rejection method shown efficiency johnk method paper concludes non integral mix procedure yield combination accuracy efficiency johnk method rejection method greater probability switch method | wallace, n. d. .k simulation, gamma random variables, probability distribution, random numbers .c 5.5 8.1
2570 | comparison list schedule parallel processing system | problem scheduling processor minimize execution time program consists set partially ordered task studied case task execution time deterministic execution time random variable analyzed shown algorithm suggested literature vary significantly execution time schedule coffman graham optimal dynamic programming solution case execution time random variable presented | adam, t. l. chandy, k. m. dickson, j. r. .k parallel processing, precedence graphs, scheduling, list scheduling, optimization, dynamic programming .c 4.3 4.32 4.34 4.35 5.3 5.32 5.4 5.42 8.1
2571 | analytic model hasp execution task monitor | hasp execution task monitor periodically rearranges o dispatching chain give task preemptive execution priority inverse order cpu utilization history effect bound task active prevent cpu bound task locking task paper develops simple model execution task monitor employ study effectiveness monitor improving system performance modified strategy monitor control investigated case task execution memory hierarchy varying speed | strauss, j. c. .k hasp, os/360, dispatching, scheduling, modeling, performance evaluation .c 4.32 8.1
2572 | argument moratorium construction community information utility | article author urge prudent decentralized approach question design desirability computerized community information utility accepting inevitability desirability technology sure feasibility internally externally proposed project wait complementary technique evaluate projected supplementary technique establish existence demand proposed take step involve representative group ultimate user system design carefully think side effect man world view proposal community information utility examined framework conclusion drawn society position justify construction information utility prototype community acceptance policy favor widespread implementation | press, l. i. .k community information utilities, social implications, public policy .c 2.1 2.3
2573 | computer programming art | knuth, d. e.
2574 | multiple exists loop label | evans, r. v. .k goto free programming, control structures, multiple exists from loops, exit statement .c 4.20 4.22
2575 | match problem document retrieval | van rijsbergen, c. j. .k document retrieval, best match, clustering, file searching, matching, dissimilarity, hierarchy,  classification .c 3.73 3.74 3.79 5.30
2576 | simple technique representing string fortran iv | hanson, d. r. .k string processing, fortran iv, string representation,structured programming, data structures .c 3.70 4.0 4.19 4.9
2577 | site data management system application field archaeology | brown, j. a. werner, b. .k apl-plus, archaeology, koster prehistoric site data management, retrieval systems .c 3.36 3.70 3.73 3.89
2578 | stabilizing system spite distributed control | dijkstra, e. w. .k multiprocessing, networks, self-stabilization, synchronization, mutual exclusion, robustness, sharing,  error recovery, distributed control, harmonious cooperation, self-repair .c 4.32
2579 | register allocation usage count | paper introduces notion usage count show usage count developed algorithm eliminate redundant computation describes usage count provide basis register allocation paper compare register allocation based usage count commonly register allocation technique present evidence show usage count technique significantly technique | freiburghouse, r. a. .k optimization, redundant computations, common subexpressions, register allocation, compilers, programming  languages, virtual memory, demand paging .c 4.12 4.2 4.39
2580 | method composing simple traditional music computer | method composing musical round computer method music theory additional heuristic fundamental method set production set applicability rule weight rule operate production deciding extent round generated computer implementation method presented generally resultant music sound mediocre professional pleasing layman appears full blown music theory needed round hardware required structural level piece author tried address musician computer scientist | rader, g. m. .k artificial intelligence, heuristic programming, models of cognitive processes, computer music,  computer composition, music theory, formal languages, probabilistic grammars .c 3.44 3.65 5.23
2581 | locally organized parser spoken input | paper describes lpars locally organized parsing system designed continuous speech recognizer lpars process string phoneme ambiguity error system locally organized sense build local parse structure reliable word candidate recognized input utterance local structure island reliability guide search highly garbled word complete utterance | miller, p. l. .k parsing, speech recognition, speech understanding, augmented transition network, local parsing .c 3.42 3.65 3.69
2582 | improving locality critical working set | approach program locality improvement restructuring method suited system primary memory managed according working set strategy based concept critical working set working set memory reference data method operates extracted trace program restructured shown special case method optimum experimental result obtained method restructure interactive text editor system module operating system shown substantial superiority method proposed literature | ferrari, d. .k program restructuring, program segmentation, locality improvement, memory hierarchies, virtual  memory, multiprogramming, restructuring techniques, static restructuring, dynamic restructuring, working  set strategy, critical working set .c 4.32 4.39 4.43 4.49 4.9
2583 | guideline humanizing computerized information system report stanley house | sterling, t. d. .k humanization, social implication, management, information systems, regulations, social and behavioral  sciences, philosophy .c 1.5 2 3.3 3.4 3.5
2584 | enumerating full time programmer | data census department labor area wage survey derive estimate number full time programmer employed year figure considerably suggested earlier report recommended educational administrator consider course aimed training programmer justified vocational basis | gilchrist, b. weber, r. e. .k programmer, employment, 1970 census, area wage survey .c 1.50 2.2 2.42
2585 | efficient implementation variable projection algorithm nonlinear square problem erratum | krogh, f. t.
2586 | adapting optimal code generation arithmetic expression instruction set present day computer erratum | stockhausen, p. f.
2587 | construction representative synthetic workload erratum | sreenivarsan, k. kleinman, a. j.
2588 | rosenbrock function minimization algorithm r450 | klemes, j. klemsa, j.
2589 | computer routine quadratic linear programming problem algorithm r431 | proll, l. g.
2590 | hypergeometric algorithm c191 | kopelaar, h.
2591 | numerical inversion laplace transform algorithm a486 | veillon, f. .k laplace transform inversion .c 5.16
2592 | generation test problem linear programming code | user linear programming computer code realized necessity evaluating capacity effectiveness accuracy solution provided code large scale linear programming code installation assumed generating correct solution bench marked test problem known solution reason failure adequately test code rarely large problem known solution readily paper present theoretical justification illustrative implementation method generating linear programming test problem known solution method permit generation test problem arbitrary size wide range numerical characteristic | charnes, a. raike, w. m. stutz, j. d. walters, a. s. .k linear programming, test problem generation, lp program evaluation, lp program validation .c 5.41
2593 | back end computer data base management | proposed data base management function dedicated back end computer accepts command high level language codasyl data base task group april report host computer access data base secondary storage result advantage configuration discussed experimental implementation called experimental data management system xdms conclusion back end approach drawn implementation | canaday, r. h. harrison, r. d. ivie, e. l. ryder, j. l. wehr, l. a. .k data base management, information retrieval, computer configurations, computer networks, data base  task group language, data base protection, data base portability, back-end computer .c 3.79 4.22 4.33 4.35
2594 | structured data structure | programming system permit arbitrary linked list structure enable user create complicated structure sufficient protection deletion result unreachable data element guarantee addition performed properly remedy situation paper proposes gauge creation restricted class data structure ensures correctness program accomplished explicit structure declaration facility restriction permissible operation execution time check | shneiderman, b. scheuermann, p. .k structured programming, data structures, data base management system .c 3.50 3.51 3.72 3.73 3.79 4.20 4.22
2595 | note calculation working set size | finite length reference string arbitrary structure considered exact expression average working set size term corrected interreference interval statistic derived discussed upper lower bound obtained average working set size function shown efficiently obtained set page size single pas reference string work follows development paper denning schwartz consider infinite length reference string satisfy statistical property derive expression relating asymptotic average working set size asymptotic missing page rate function working set replacement | slutz, d. r. traiger, i. l. .k working-set model, paging, program behavior .c 4.3
2596 | weighted buddy method dynamic storage allocation | extension buddy method called weighted buddy method dynamic storage allocation presented weighted buddy method block size original buddy method allowed block size extension achieved additional cost bit block simulation result presented compare method buddy method result uniform request distribution buddy system total memory fragmentation weighted buddy algorithm total fragmentation smaller weighted buddy method request exponentially distributed block size | shen, k. k. peterson, j. l. .k weighted buddy algorithm, buddy systems, memory allocation, dynamic storage allocation .c 3.89 4.32 4.39
2597 | monitor operating system structuring concept | paper develops brinch hansen concept monitor method structuring operating system introduces form synchronization describes method implementation term semaphore suitable proof rule illustrative example include single resource scheduler bounded buffer alarm clock buffer pool disk head optimizer version problem reader writer | hoare, c. a. r. .k monitors, operating systems, scheduling, mutual exclusion, synchronization, system implementation  languages, structured multiprogramming .c 4.31 4.22
2598 | extending information theory approach converting limited entry decision table computer program | paper modifies earlier algorithm converting decision table flowchart minimize subsequent execution time compiled computer program algorithm considered paper perform limited search necessarily result globally optimal solution greater search effort needed obtain globally optimal solution complex decision table justified sufficient saving execution time analogy problem converting decision table efficient flowchart understood problem information theory noiseless coding result noiseless coding literature explore limitation algorithm solve decision table problem analogy problem develop improvement information algorithm extending depth search condition proposing additional condition added decision table finally information algorithm compared algorithm proposed recent paper verhelst | shwayder, k. .k coding, decision tables, flowcharting, information theory, noiseless channel, sorting .c 3.50 5.31
2599 | order approximation optimum checkpoint interval | young, j. w. .k checkpoint, job failure, operations, programming checkpoint, random failure, operations, programming .c 2.43 4.0
2600 | computation spline factorization method e2 algorithm a485 | eidson, h. d. schumaker, l. l. .k approximation, spline approximation .c 5.13
2601 | evaluation modified bessel function k0 k1 complex argument s17 algorithm a484 | burrell, k. h. .k bessel functions, hankel functions, modified bessel functions, gauss-hermite quadrature .c 5.12
2602 | masked dimensional plot program rotation j6 algorithm a483 | watkins, s. l. .k plotting, three-dimensional plotting .c 4.41
2603 | equivalence reducing transition language deterministic language | class reducing transition language introduced eickel paul bauer samelson shown morris proper superclass simple precedence language paper result extended showing fact class equivalent class deterministic context free language | schkolnick, m. .k reducing transition languages, syntax controlled generators, deterministic context-free grammars .c 4.12 5.23
2604 | interactive graphic display region partitioning linear programming | linear programming interactive graphic display system implemented solve region design problem partitioning region nonoverlapping subregions area proportion total cost servicing minimum conversational manner user easily obtain partitioning modifying boundary service center location area proportion cost function example included | cheung, t. .k interactive graphic display, region partitioning, area specification, linear programming .c 5.41 8.2 8.3
2605 | precise numerical analysis program | description program computing solution small number standard numerical analysis problem accuracy limit correct decimal place computed number bounded interval multiple precision midpoint arithmetic operation involving number executed according interval arithmetic concept non significant digit discarded detail supplied problem specification problem computation | aberth, o. .k interval arithmetic, multiple precision, list structure, error control .c 4.49 5.10 5.11 5.12 5.14 5.19
2606 | integration algorithm ordinary differential equation based continued fraction approximation | integration algorithm found implementation compared programmed algorithm algorithm step step procedure solving initial problem ordinary differential equation designed approximate pole small integer order solution differential equation continued fraction obtained manipulating sum truncated taylor series expansion method compared gragg bulirsh stoer taylor series method taylor series method method shown superior speed accuracy method shown superior solution required singularity method finally seen pas singularity method discussed failed | willers, i. m. .k ordinary differential equations, initial value problem, integration, taylor series, singularities,  continued fractions, program comparison .c 5.17
2607 | problem list issue concerning computer public policy | acm committee .k economic and sociological effects, the public and computers .c 2.11 2.12
2608 | recurrence relation fresnel integral similar integral | acton, f. s. .k recurrence relations, fresnel integral, exponential integral .c 5.12
2609 | interpolation rounded ramp function | interpolation function introduced infinitely continuous derivative composition ramp function smoothed bend called rounded ramp function interpolation function extended variable shown efficient fortran program interpolation function obtained point set | lagerlof, r. o. e. .k interpolation, approximation, smooth interpolation, multi variable interpolation, interpolation  function, approximation function, spline-like function .c 5.13
2610 | gauss harmonic interpolation formula | let open bounded simply connected region plane let point assuming starlike respect discus method computing gauss harmonic interpolation formula point formula approximate harmonic function term linear combination value selected point boundary formula approximating solution dirichlet problem | stroud, a. h. .k interpolation, quadrature, harmonic interpolation, harmonic quadrature, dirichlet problem .c 5.13 5.16 5.17
2611 | complex method constrained optimization algorithm r454 | shere, k. d.
2612 | rosenbrock function minimization algorithm r450 | bultheel, a.
2613 | transitivity set g7 algorithm a482 | mckay, j. regener, e. .k transitivity, sets .c 5.39
2614 | arrow precedence network transformation algorithm a481 | crandall, k. c. .k critical path, networks, precedence networks .c 3.23 5.40
2615 | procedure computing smoothing interpolating natural spline e1 algorithm a480 | lyche, t. schumaker, l. l. .k approximation, interpolation, spline, natural spline, spline smoothing .c 5.13
2616 | conversion program decision table method objective | problem converting program decision table investigated objective conversion mainly program debugging optimization practice extension theory computation computability suggested | cavouras, j. c. .k decision tables, program optimization, debugging, semantics, theory of programming, systems analysis .c 4.19 4.42 4.43 5.21 5.29
2617 | note subexpression ordering evaluation arithmetic expression | denning, p. j. graham, g. s.
2618 | solution dijkstra concurrent programming problem | simple solution mutual exclusion problem presented system continue operate despite failure individual component | lamport, l. .k critical section, concurrent programming, multiprocessing, semaphores .c 4.32
2619 | graph coloring condition existence solution timetable problem | sufficient condition presented existence solution gotlieb class teacher timetable problem relationship established class teacher timetable problem graph precondition precondition place additional restriction coloration graph precondition correspond unavailability constraint preassigned meeting class teacher timetable problem recent result convert graph precondition graph shown existence coloration graph required sufficient condition | neufeld, g. a. tartar, j. .k graphs, coloration, preassignment, prevention of assignment, class-teacher timetables .c 3.9 5.30 5.32 5.59
2620 | execution time requirement encipherment program | encipherment discussed mean protect computer data cost established experiment conducted measure cpu time cdc required additive cipher programmed assembly language fortran null transformation measure time move data encipherment encipherment word key encipherment word key double key encipherment encipherment pseudo random key result analyzed consistency run effect constant intermittent error considered timing rate assembly language encipherment ranged character pseudo random key cipher character constant word key cipher equivalent rate required simply move data encipherment fortran test required time cpu time paper introduces idea enciphering time coefficient ratio enciphering time time fetch store data encipherment | friedman, t. d. offman, l. j. .k encipherment, ciphers, security, privacy transformations, protection, cryptography, cryptology .c 2.12 2.43 3.70 3.81 4.32 4.39
2621 | high security log procedure | protection time sharing system unauthorized user achieved password cipher code password risk involved storing password computer avoided discus selection suitable cipher suggest purpose polynomial prime modulus superior cipher derived sannon code | purdy, g. b. .k operating systems, time sharing systems, security, cryptography .c 4.35
2622 | user authentication scheme requiring secrecy computer | computer operating system user authenticates entering secret password known solely system system compare password recorded password table authentication program integrity system depends keeping table secret paper password scheme presented require secrecy computer aspect system including relevant code data base known attempting intrude scheme based function intruder unable invert function applied user password result compared table entry match interpreted authentication user intruder know access table penetrate system invert determine input produce output paper discus issue surrounding selection suitable plausible argument penetration exceedingly difficult argued rigorous result unlikely finally human engineering problem relating scheme discussed | evans, a. jr. kantrowitz, w. weiss, e. .k operating system security, security, authentication, passwords, one-way encryption, cryptology .c 4.39 5.39
2623 | technique compression storage data | widespread tendency storage large program block text produced need efficient method compressing storing data paper describes technique case decrease storage size factor technique involve special handling leading trailing blank encoding symbol group fixed size unique fixed point number efficiency system considered pertinent statistic compared statistic information coding technique | hahn, b. .k file maintenance, information retrieval, utility programs, text compression, coding techniques,  data storage, data management .c 3.70 3.73 4.49
2624 | formal requirement virtualizable generation architecture | virtual machine system implemented limited number generation computer system cp ibm previous empirical study known generation computer system dec pdp support virtual machine system paper model generation computer system developed formal technique derive precise sufficient condition test architecture support virtual machine | popek, g. j. goldberg, r. p. .k operating system, third generation architecture, sensitive instruction, formal requirements, abstract  model, proof, virtual machine, virtual memory, hypervisor, virtual machine monitor .c 4.32 4.35 5.21 5.22
2625 | capability based addressing | addressing scheme making segment table examined inadequacy scheme dealing shared address explained inadequacy traced lack efficient absolute address object system direct capability address shown overcome difficulty needed absolute address implementation capability based addressing discussed predicted tag identify capability dominate hardware address translation scheme requires modification representation capability suggested scheme main memory hash table obtaining segment location main memory unique code hash table avoided recently accessed segment mean set associative register computer capability based addressing substantially superior present system basis protection simplicity programming convention efficient implementation | fabry, r. s. .k addressing, capabilities, addressing hardware, protection, protection hardware, shared addresses,  information sharing, operating systems, computer utility, segmentation, tagged architecture .c 4.30 4.32 4.34 6.21
2626 | protection control information sharing multics | design mechanism control sharing information multics system design principle help provide insight tradeoff design key mechanism include access control list hierarchical control access specification identification authentication user primary memory protection paper end discussion known weakness protection mechanism design | saltzer, j. h. .k multics, protection, security, privacy, access control, authentication, computer utilities, time-sharing  systems, proprietary programs, protected subsystems, virtual memory, descriptors .c 3.70 4.30 6.2
2627 | scheduling independent task reduce mean finishing time | sequencing minimize mean finishing time mean time system desirable user tends minimize point time storage required hold incomplete task paper deterministic model independent task introduced result derived extend generalize algorithm known minimizing mean finishing time addition presenting analyzing algorithm shown general mean finishing time problem independent task polynomial complete unlikely admit non enumerative solution | bruno, j. coffman, e. g. jr. sethi, r. .k minimizing mean finishing time, minimizing mean flow time, sequencing algorithms, optimal scheduling  algorithms, deterministic scheduling models .c 4.32 5.39
2628 | minimal total processing time drum disk scheduling discipline | article investigates application minimal total processing time mtpt scheduling discipline rotating storage unit random arrival request allowed fixed head drum moving head drum moving head disk storage unit considered emphasis relative merit mtpt scheduling discipline respect shortest latency time sltf scheduling discipline result simulation study presented show scheduling discipline unconditionally superior fixed head drum application sltf discipline preferable mtpt intra cylinder disk scheduling mtpt discipline offer distinct advantage sltf discipline computational requirement algorithm implement mtpt scheduling discipline shown comparable sltf algorithm case sorting procedure time consuming phase algorithm | fuller, s. h. .k drum scheduling, disk scheduling, shortest-latency-time-first (sltf), minimal-total-processing-time  (mtpt), rotating storage units .c 4.31 4.41 6.34 6.35
2629 | time sharing system | general purpose multi user interactive operating system digital equipment corporation pdp computer offer number feature seldom found larger operating system including hierarchical system incorporating demountable volume compatible device inter process ability initiate asynchronous process system command language selectable user basis subsystem including dozen language paper discus nature implementation system user command interface | ritchie, d. m. thompson, k. .k time-sharing, operating system, file system, command language, pdp-11 .c 4.30 4.32
2630 | computing set shortest path graph | algorithm presented construct shortest path pair vertex directed graph algorithm generalize floyd algorithm dantzig algorithm finding shortest path pair vertex directed graph | minieka, e. .k graph, network, shortest path, algorithm .c 5.32
2631 | information theoretic approach text searching direct access system | direct access computer bibliographic information attempt made overcome problem information retrieval maintenance large dictionary greater part infrequently method presented map hyperbolic frequency distribution suited implementation storage device method treat text string character word bounded space chooses subset string frequency occurrence word type member subset index key retrieval rectangular distribution key frequency result simplified organization promise considerable cost advantage | barton, i. j. creasey, s. e. lynch, m. f. snell, m. j. .k text searching, information theory, file organization, direct access, information retrieval, character  string, bit vector .c 3.42 3.70 3.73 3.74 5.6
2632 | hydra kernel multiprocessor operating system | paper describes design philosophy hydra kernel operating system mmp carnegie mellon multi mini processor philosophy realized introduction generalized notion resource physical virtual called object mechanism presented dealing object including creation type specification operation applicable type sharing protection reference object improper application operation defined respect type object mechanism provide coherent basis extension system direction introduction facility creation highly secure system | wulf, w. cohen, e. corwin, w. jones, a. levin, r. pierson, c. pollack, f. .k operating system, kernel, nucleus, protection, security .c 4.3 6.2
2633 | compact representation contour plot phone line transmission | method compact representation contour plot tested intended reduce cost transmitting contour plot phone line feel method transmit contour plot voice grade phone line | adams, j. gary, j. .k contour plotting, data transmission, remote terminal, data compaction .c 4.41 5.13
2634 | evaluation statistical software social science | hundred college university computer installation offer type statistical package general widely osiris spss bmd data text tsar order provide user basis selection test made system result summarized cost performance | slysz, w. d. .k statistical computation, statistical software, descriptive statistics, bivariate tables, pearson  correlation, regression, factor analysis, one-way analysis of variance .c 1.3 3.30 4.19 4.22 4.49 5.5
2635 | exact probability contingency table algorithm r434 | boulton, d. m.
2636 | generation random correlated normal variable algorithm r425 | page, r. l.
2637 | hidden line plotting program algorithm r420 | ellis, t. m. r.
2638 | hidden line plotting program algorithm r420 | gaither, b.
2639 | calculation fourier integral algorithm r418 | piessens, r.
2640 | modified havie integration algorithm r400 | piessens, r.
2641 | minimal spanning tree clustering method algorithm a479 | page, r. l. .k clustering, pattern recognition, feature selection, minimal spanning trees .c 3.63 5.39 5.5
2642 | solution overdetermined system equation l1 norm f4 algorithm a478 | barrodale, i. roberts, f. d. k. .k l1 approximation, l1 norm, overdetermined system of equations, linear programming, simplex method  .c 5.13 5.41
2643 | minimization spatially multiplexed character set | paper describes technique compacting character set digital computer retaining fast access individual bit considers problem minimizing storage needed table reduction technique developed problem shown reduce covering problem | gimpel, j. f. .k parsing, lexical analysis,scanning, string processing, spatial multiplexing .c 4.9
2644 | theorem proving language experimentation | large number strategy inference rule presently consideration automated theorem proving need developing language especially oriented automated theorem proving paper discus feature instruction language language permit easy extension automated theorem proving program include strategy inference rule extend ability permit general experimentation alternative system | henschen, l. overbeek, r. wos, l. .k theorem proving, resolution, factoring, paramodulation, programming languages .c 3.60 4.22 5.21
2645 | language estimating program efficiency | language enabling user estimate efficiency computer program presented program efficiency wish estimate written language programming language includes feature algol language consists interactive command enabling user provide additional information program written language output result estimating efficiency processor language processor syntax directed translator compiles program symbolic formula representing execution time program sound processor set procedure program processor set procedure algebraic manipulation called user operate formula produced processor example usage language included limitation present system relation knuth work analysis algorithm direction research discussed | ccohen, j. zuckerman, c. .k programming languages, syntax-directed translation, symbolic manipulation, program efficiency,  analysis of algorithms .c 4.12 4.20 5.24 5.25
2646 | model masking rotational latency dynamic disk allocation | paper present background algorithm masking rotational latency disk drum discus anticipatory input output block data buffer primary memory mono programmed computer system basic permutation algorithm variation anticipatory nature scheduling algorithm restricted class program predictable behavior method restricted numerical computation matrix partial differential equation method typical example shown latency masked small amount buffer memory method discussed independent size data base considered | gold, d. e. kuck, d. j. .k buffer memory, memory hierarchy, permutation algorithm, rotational latency, staging, storage allocation .c 4.41 6.20
2647 | algorithm reveal property floating point arithmetic unit | gentleman, w. m. marovich, s. b. .k floating-point arithmetic, high-level languages, philosophy of language design .c 4.9 5.19
2648 | design number theory package optimized trial division routine | number theory package doubly linked list structure storing multiprecise integer package coded ibm basic assembly language make heavy macro language conditional assembly optimally coded trial division routine determine unique factorization large integer | wunderlich, m. c. selfridge, j. l. .k number theory package, trial division, multiprecise arithmetic, factorization, doubly linked lists,  pseudoprime .c 3.15
2649 | distribution significant digit roundoff error | generalized logarithmic law derived distribution significant digit random digital integer result determine distribution roundoff error floating point operation mixture uniform reciprocal distribution | tsao, n. .k significant digits, floating-point operations, roundoff errors, uniform distribution, reciprocal  distribution, variance, mean valve .c 5.10 5.11
2650 | order correction regular language | method presented calculating string belonging regular language nearest number edit operation input string viewed reasonable correction possibly erroneous string originally intended string calculation method presented requires time proportional |a
2651 | treatment data type el1 | constructing general purpose programming language key issue providing sufficient set data type operation manner permit natural problem oriented notation efficient implementation el1 language number feature specifically designed simultaneously satisfy requirement resulting treatment data type includes provision programmer defined data type data type generic routine programmer control type conversion flexible data type behavior context efficient compiled code compact data representation | wegbreit, b. .k data types, modes, mode unions, type conversion, coercion, generic functions, extensible languages,  data type definition, data description language, compilation .c 4.12 4.13 4.22
2652 | reduction compilation cost language contraction | programming language tailored group user constructed removing unwanted feature general purpose language paper describes simulation technique predict saving compilation cost achievable approach result suggest function describes effect power language compilation cost algorithm expressed language feature actually algorithm removed language cost compiling algorithm decrease moderately feature needed removed compilation cost increase sharply | shaw, m. .k design of programming languages, language contraction, compiler design, compilation cost, algol .c 4.12 4.20
2653 | solution transcendental equation exp algorithm r443 | einarsson, b.
2654 | generator set partition exactly subset g7 algorithm a477 | ehrich, g. .k partitions, subset generation, permutations .c 5.39
2655 | subprogram curve fitting spline tension e2 algorithm a476 | cline, a. k. .k interpolation, splines, contouring, curve fitting .c 5.13 8.2
2656 | scalar planar valued curve fitting spline tension | spline tension introduced schweikert attempt imitate cubic spline avoid spurious critical point induce defining equation presented efficient method determining parameter computing resultant spline standard scalar valued curve fitting problem discussed fitting open closed curve plane curve importance tension fitting contour line mentioned application | cline, a. k. .k interpolation, splines, contouring, curve fitting .c 5.13 8.2
2657 | improved program synthesizing algorithm correctness | improved program synthesizing algorithm based algorithm proposed waldinger lee algorithm program synthesizing problem translated theorem proving problem program obtained analyzing proof improved algorithm analysis program obtained soon proof completed achieved modified variable tracing mechanism invented green correctness improved algorithm proved program obtained satisfies specification | lee, r. c. t. chang, c. l. waldinger, r. j. .k program-synthesizing algorithms, theorem proving, consequence finding, primitive resolutions .c 3.60 3.64 4.20 4.42 5.21 5.22 5.24
2658 | alternative approach mutual recursion algol restricted compiler | balfour, a. .k algol 60, mutual recursion, compiler restrictions .c 4.12 4.22
2659 | remark lookup structured variable | abrahams, p. w. .k pl/1, symbol table, structured variables, qualified references, compilers  .c 4.12 4.22
2660 | addendum patrick paper | simmons, g. c. .k parallelism, polynomial root finding, real zeros .c 5.15
2661 | ideal teaching machine solution pedagogic language problem | sterling, t. d. pollack, s. v. .k education, programming languages, simulators .c 1.52 4.2
2662 | graduate education ph glut response rebuttal | freeman, p. malcolm, m. a. payne, w. h. .k graduate education, ph.d. production, accreditation .c 1.5 2.2 2.3
2663 | study computer graduate school business | lucas, h. c. jr. montgomery, d. b. larreche, j. c. .k education, management, business schools .c 1.50 1.52
2664 | parallelism tape sorting | method employing parallelism tape sorting presented method natural parallelism method approximately achieve goal reducing processing time divisor number processor | even, s. .k tape sorting, parallelism, external sorting, queues, stacks .c 5.31 6.22
2665 | copying list structure bounded workspace | algorithm presented list structure copying bounded workspace primarily theoretical interest show cell tag bit task performed time algorithm assuming tag bit cell delivers attractive practical speed noncyclic structure copied linear speed cyclic structure copied average time nlogn foreknowledge cycle absence achieve linear speed variation algorithm solves open problem concerning list structure marking result demonstrates marking average time nlogn aid supplemental tag bit stack | lindstrom, g. .k list processing, copying, marking, space complexity .c 4.34 5.25
2666 | lion counter gotlieb method construction school timetable | timetable problem essentially discrete problem discrete problem feasible solution exist solution equivalent continuous problem nondiscrete solution interpreted set timetable differing week week satisfy long term requirement timetable problem | smith, g. sefton, i. m. .k combinatorial, multi-index problem, necessary conditions, schedule, school timetable, timetable .c 3.51 5.39
2667 | execution characteristic program page demand system | data presented show execution characteristic type commonly program large scale time shared computer system software monitoring facility built supervisor data collection normal system operation data analyzed result analysis presented fortran compiler interactive line editor probability distribution function data thing cpu interval interval number interval execution empirical distribution compared simple theoretical distribution exponential hyperexponential geometric data show paging characteristic task function number page task core | boyse, j. w. .k program behavior, virtual memory, paging, demand paging, software monitor, program execution characteristics,  compiler execution behavior, editor execution behavior .c 4.12 4.19 4.32 4.39 4.9 8.1
2668 | computation page fault probability program transition diagram | algorithm calculating page fault probability virtual memory system operating demand paging memory size replacement rule order markov model program behavior assumed representation system based memory state control state memory substates presented algorithm general sense page fault probability calculated nonpredictive replacement rule applied program represented step markov chain detailed illustrate algorithm random recently lru replacement rule | franklin, m. a. gupta, r. k. .k virtual memory, demand paging, replacement rule, program model, program behavior, markov model,  page fault, page fault probability .c 4.30 6.20
2669 | simple linear model demand paging performance | predicting performance proposed managed multilevel memory system requires model pattern program refer information stored memory recent experimental measurement multics virtual memory suggest rough approximation remarkably simple program reference model suffice simple model combine effect information reference pattern effect automatic management algorithm produce single composite statement mean number memory reference paging exception increase linearly size paging memory resulting model easy manipulate applicable diverse problem choosing optimum size paging memory arranging reproducible memory usage charge estimating amount core memory sharing | saltzer, j. h. .k paging, demand paging, memory models, program models, performance measurement, multilevel memory  systems, virtual memory, associative memory, memory usage accounting, multics .c 3.79 4.30 4.32
2670 | efficient implementation variable projection algorithm nonlinear square problem | nonlinear square frequently arise variable solved separated linear nonlinear part variable projection algorithm developed recently designed take advantage structure problem variable separate paper slightly efficient slightly general version algorithm appeared earlier | krogh, f. t. .k nonlinear least squares, parameter estimation, variable projection .c 5.14 5.15
2671 | note combinatorial problem burnett coffman | stone, h. s. .k memories, interleaving, derangements, rencontres, combinatorial analysis .c 5.39 6.34
2672 | emotional content considered dangerous | smoliar, s. w. .k artificial intelligence, heuristic programming, models of cognitive processes, computer music, computer  composition, music theory .c 3.44 3.65
2673 | quadratic search hash table size | ackerman, a. f. .k hashing, quadratic search .c 4.10
2674 | scan conversion algorithm cell organized raster display | raster scan computer graphic real time character generator previously limited alphanumeric character display extends capability organization include general graphic fundamentally scan conversion algorithm developed support display presented suitable non interactive application interactive application algorithm implemented fortran cdc computer result obtained implementation show noninteractive algorithm significantly reduce display storage requirement cost execution time conventional raster display interactive algorithm improve response time reduce storage requirement | barrett, r. c. fordan, b. w. jr. .k graphics, scan conversion, raster display, line drawing, discrete image, dot generation, matrix displays .c 4.41 6.35 8.2
2675 | computer routine quadratic linear programming problem algorithm r431 | ravindran, a.
2676 | zero complex polynomial algorithm r419 | withers, d. h.
2677 | incomplete beta ratio algorithm r179 | bosten, n. e. battiste, e. l.
2678 | visible surface plotting program j6 algorithm a475 | wright, t. .k hidden line problem, computer graphics, contour surface .c 3.65 4.41 8.2
2679 | performance test quicksort descendant | detailed performance evaluation presented acm algorithm quicksort shellsort stringsort treesort3 quickersort qsort algorithm refinement algorithm discussed detail evidence demonstrates qsort requires comparison author claim algorithm quickersort requires fewest comparison sort random array | loeser, r. .k sorting, in-place sorting, sorting efficiency, sorting performance tests, quicksort, quickersort,  qsort, shellsort, stringsort, treesort3,utility sort algorithm, general-purpose sort algorithm, sorting  algorithm documentation .c 4.49 5.31
2680 | optimal space allocation disk storage device | amount space required storage exceeds amount line decision made permanently resident mountable decision affect number mount request issued operator bottleneck computing facility reducing number mount decrease turnaround time optimization model assignment disk pack pack resident nonresident status presented heuristic suggested case inefficient compute actual optimum | morgan, h. l. .k disk analysis, disk optimization, disk files,file systems, file scheduling, space allocation,  memory hierarchy .c 3.72 3.73 4.39
2681 | dynamic memory repacking | probabilistic model multiprogramming system exercised order determine condition dynamic repacking main memory beneficial expression derived maximum interference repacking process introduce original performance system degraded alternative approach repacking discussed operating condition lead improved system throughput repacking delineated | balkovich, e. chiu, w. presser, l. wood, r. .k dynamic memory repacking, memory compaction,storage fragmentation, multiprogramming system model,  probabilistic model, central processor productivity, resource utilization, system throughput .c 4.32 5.5 6.20
2682 | construction representative synthetic workload | general method constructing drive workload representative real workload real workload characterized demand system resource characteristic real workload obtained system accounting data characteristic drive workload determined matching joint probability density real workload drive workload drive workload realized synthetic program characteristic varied varying parameter calibration experiment conducted determine expression relating synthetic program parameter workload characteristic general method applied case variable cpu second number activity synthetic workload job constructed represent month workload consisting job | sreenivasan, k. kleinman, a. j. .k benchmarks, calibration, drive workload, input to simulation, probability distribution, representative  workload, synthetic workload, workload characteristics .c 5.5 5.9 8.1
2683 | synthesis loop predicate | method mechanical program verification require complete predicate specification loop tedious error prone producing program complete correct predicate reasonably difficult facilitated machine assistance paper discus technique mechanically synthesizing loop predicate class technique considered heuristic method derive loop predicate boundary condition partially inductive assertion extraction method input predicate weak interpretation obtain class loop predicate evaluation weak interpretation | wegbreit, b. .k program verification, loop predicates, inductive assertions, synthesis of loop predicates, weak  interpretations, well-founded sets, property extraction, theorem proving .c 3.64 4.19 4.22 5.24
2684 | production system bnf | development bnf definition syntax programming language universally context free requirement numerous interesting difficult issue syntax stem context sensitive requirement notably compatibility declaration identifier correspondence actual formal parameter issue arising block structure paper explores formal notation called production system providing readable complete formal definition syntax practical illustration small significant subset pl considered detailed presentation application define abstract syntax translation language previous paper author | ledgard, h. f. .k syntax, translation, context-sensitive grammars, compilers, formal definition, pl/i standards .c 4.2 5.21 5.23
2685 | parallel execution loop | method developed parallel execution iteration loop asynchronous multiprocessor computer array computer considered practical application design compiler computer discussed | lamport, l. .k parallel computing, multiprocessor computers, array computers, vector computers, loops .c 4.12 5.24
2686 | approximate method generating asymmetric random variable | tukey lambda distribution generalized provide algorithm generating value unimodal asymmetric random variable algorithm advantage symmetric random variable generator previously author addition parameter complicates problem finding parameter value fit distribution | ramberg, j. s. schmeiser,b. w. .k simulation, monte carlo, probability, statistics, approximations, random variables, random numbers,  moments, distribution .c 5.5 8.1
2687 | cell organized raster display line drawing | raster scan computer graphic display real time character generator previously limited alphanumeric character display extends capability organization include general graphic feasibility display shown deriving minimum number pattern required read memory character generator synthesize arbitrary line synthesis process compromise picture quality resulting dot pattern identical conventional raster display time constraint raster display shown satisfied typical design complex line drawing | jordan, b. w. jr. barrett, r. c. .k graphics, raster display, line drawing, discrete image, dot generation, matrix displays .c 4.41 6.35 8.2
2688 | attribute based organization paged memory environment | high cost page accessing implies need careful data organization paged memory typical inverted similar approach multi key retrieval article analysis cost proposes method called multiple key hashing attempt minimize approach preferable inversion combined method exact specification combination data traffic characteristic formulated mathematical program proposed heuristic solution program improve simple inversion technique factor | rothnie, j. b. jr. lozano, t. .k file organization, paging, retrieval algorithm, inverted file, multiple key hashing .c 3.70 3.73 3.74 3.79
2689 | crt report generating system | lucas, h. c. jr. .k report generation, automated systems design, data processing, management .c 3.50 4.12 4.22
2690 | numbering system combination | knott, g. d. .k combinatorics, coding system, storage mapping function .c 4.9 5.30
2691 | comment algorithm verhelst conversion limited entry decision table flowchart | king, p. j. h. johnson, r. g. .k decision table, flowcharting, preprocessor, optimal programs, search  .c 3.50 3.59 4.19 4.29 4.49 5.31
2692 | reentrant polygon clipping | family clipping algorithm algorithm able clip polygon irregular convex plane faced volume dimension removing part polygon lie volume dimension algorithm permit clipping irregular convex window polygon clipped represented ordered sequence vertex repetition marked contrast representation collection edge heretofore common procedure output polygon identical format vertex introduced sequence describe newly cut edge edge algorithm easily handle difficult problem detecting vertex required corner clipping window algorithm achieve considerable simplicity clipping separately clipping plane window boundary code capable clipping polygon single boundary reentered clip subsequent boundary reentrant stage clipping need store vertex value begin processing soon output vertex proceeding stage ready code reentered clipping subsequent boundary clipping complex window shape practical perspective application dimentions plane truncated pyramid chosen clipping volume additional plane parallel projection screen serve limit range depth preserved projection perspective projection method arbitrary view angle depth field spite simple fixed clipping plane method ideal subsequent hidden surface computation | sutherland, i. e. hodgman, g. w. .k computer graphics, hidden-surface, clipping .c 5.31 6.32 6.35
2693 | bivariate interpolation smooth surface fitting based local procedure e2 algorithm a474 | akima, h. .k bivariate interpolation, interpolation, partial derivative, polynomial, smooth surface fitting .c 5.13
2694 | computation legendre series coefficient c6 algorithm a473 | piessens, r. .k legendre series, chebyshev series .c 5.13
2695 | tridiagonalization permutation | tridiagonalizing matrix similarity transformation important computational tool numerical linear algebra consider class sparse matrix tridiagonalized row column permutation advantage transformation include absence round error improved computation time compared standard transformation graph theoretic algorithm examines arbitrary matrix determines permuted tridiagonal form algorithm requires arithmetic number comparison number assignment number increment linear compare favorably standard transformation method matrix permutable tridiagonal form algorithm explicit tridiagonal form early rejection occur | gibbs, n. e. poole, w. g. jr. .k tridiagonal matrix, permutation, algorithm, eigenvalues, graph, bandwidth, sparse matrix .c 5.14 5.32
2696 | method bivariate interpolation smooth surface fitting based local procedure | method designed interpolating value point rectangular grid plane smooth bivariate function interpolating function bicubic polynomial cell rectangular grid emphasis avoiding excessive undulation grid point proposed method extension method univariate interpolation developed earlier author likewise based local procedure | akima, h. .k bivariate interpolation, interpolation, partial derivative, polynomial, smooth surface fitting .c 5.13
2697 | fast method solving class tridiagonal linear system | solution linear system real symmetric diagonally dominant tridiagonal coefficient matrix constant diagonal considered proved diagonal lu decomposition converges floating point precision proved computed lu decomposition converges floating point arithmetic limit lu diagonal floating point roughly machine precision limit real arithmetic fact exploited reduce number floating point operation required solve linear system 8n 5n 2k order matrix element subdiagonals superdiagonals 4n 2k operation needed entire lu decomposition take word storage considerable saving array subscripting achieved upper lower bound obtained term ratio coefficient matrix diagonal constant parameter floating point number system generalization result discussed | malcolm, m. a. palmer, j. .k numerical linear algebra, linear systems, toeplitz matrices, tridiagonal matrices .c 5 5.1 5.11 5.14 5.17
2698 | syntax directed error analysis context free language practical approach | error recognizer developed informally known recognizer earley element bellman dynamic programming analyzer take general class context free grammar driver finite string input recognition consists error count corrected version input relative driver grammar algorithm design emphasizes practical aspect help programming | lyon, g. .k arbitrary input strings, context-free grammars, parsing, dynamic programming, stored subanalyses,  separability, state merging, least-errors correction .c 4.12 5.23 5.42
2699 | automatic data structure choice language high level | setl set theoretically oriented language high level repertoire semantic object includes finite set ordered tuples set ordered tuples usable mapping paper describes structure optimizer language method interest optimizer technique allow relation inclusion membership established domain range tabulated mapping estimated single valuedness tabulated mapping proved fact kind established automatic choice data structure method employed based extend known technique data flow analysis | schwartz, j. t. .k program optimization, automatic programming, high-level languages, set-theoretic languages, data  structure choice .c 4.12 4.20 4.22
2700 | reduction method proving property parallel program | proving parallel program property convenient assume statement indivisible statement interleaved rest program sufficient condition obtained show assumption statement indivisible relaxed preserve property halting correctness proof parallel system greatly simplified | lipton, r. j. .k deadlock free, reduction, interruptible, indivisible, parallel program, semaphore, verification  method, process, computation sequence .c 4.32 4.35 5.24
2701 | fast linear algorithm global flow analysis abstract complete paper jacm january | algorithm global flow analysis reducible graph presented algorithm shown treat general class function space graph edge algorithm worst case time bound log function operation shown programming term number operation proportional number exit program loop restriction entry exit control structure linearity algorithm extended larger class function space graph relaxing time bound example code improvement problem solved algorithm | graham, s. l. wegman, m. .k global flow analysis, data flow, code optimization, common subexpression elimination, live-dead  analysis, information propagation, flow graph, reducibility, go-to-less programming, depth-first search,  path compression .c 4.12 5.24 5.25 5.32
2702 | complexity lr testing | problem determining arbitrary context free grammar member easily parsed subclass grammar lr grammar considered time complexity problem analyzed considered fixed integer considered parameter test case shown exists algorithm testing lr property size grammar question hand subject grammar problem parameter complexity problem depends strongly representation chosen specifically shown problem np complete expressed unary expressed binary problem complete nondeterministic exponential time result carry parameterized class grammar ll strong ll slr lc strong lc grammar | hunt, h. b. iii szymanski, t. g. ullman, j. d. .k computational complexity, context-free grammars, parsing, lr(k) grammars, np-complete problems .c 4.12 5.23 5.25
2703 | intrinsically exponential complexity circularity problem attribute grammar | attribute grammar extension context free grammar devised knuth mechanism including semantics context free language syntax language circularity problem grammar determine semantics sentence program fact defined proved problem general computationally intractable specifically shown deterministic algorithm solves problem infinitely case exponential amount time improved version knuth circularity testing algorithm actually solves problem exponential time | jazayeri, m. ogden, w. f. rounds, w. c. .k attribute grammars, circularity problem, context-free grammars, computational complexity, exponential  time, semantics .c 4.12 5.25
2704 | exception handling issue proposed notation | paper defines exception condition discus requirement exception handling language feature satisfy proposes language feature dealing exception orderly reliable proposed language feature serve highlight exception handling issue showing deficiency approach remedied | goodenough, j. b. .k multilevel exit, goto statement, error conditions, structured programming, on conditions, programming  languages .c 4.22
2705 | programming language natural language mathematics | social aspect programming illuminated analogy similar aspect mathematics natural language split pure applied mathematics found similarly programming development natural language flexion word order based language type speaks programming language design based general abstract construct analogy incident history artificial auxiliary language suggested fortran cobol remain dominant long time come promising avenue work wide influence seen high quality program literature program general utility study question related program style | naur, p. .k analogies related to social aspects,pure and applied mathematics, language quality, language development,  artificial auxiliary languages, literature, style, descriptive and prescriptive attitudes .c 4.20
2706 | note set basis problem related compaction character set | note discus reduction set basis problem clique cover problem | kou, l. t. wong, c. k. .k compaction of character sets, set basis, set covering, computational complexity, polynomial completeness,  clique cover  .c 4.9 5.25 5.39
2707 | backtrack programming technique | purpose paper twofold exposition general backtrack technique history shown macro considerably shorten computation time case technique allowed solution previously open combinatorial problem computation term known series substantial reduction computation time solution combinatorial problem | bitner, j. r. reingold, e. m. .k backtrack, depth-first search, exhaustive search, macros, combinatorial computing, non-attacking  queen's problem, difference-preserving codes, pentominoes, tiling problems, squaring the square .c 5.30
2708 | practical syntactic error recovery | paper describes recovery scheme syntax error generated high quality recovery good diagnostic information low cost previous recovery technique summarized empirical comparison made suggestion research topic conclude paper | graham, s. l. rhodes, s. p. .k syntax errors, error recovery, error correction, parsing, simple precedence, compilers, debugging .c 4.12 4.42 5.23
2709 | genealogy control structure | issue program control structure history heated controversy put issue solid footing paper review numerous theoretical result control structure explores practical implication classic result bohm jacopini theoretical completeness discussed recent idea control structure explored include review control structure result time space limitation theorem relating relative power control structure notion equivalence conclusion impact theoretical result practicing programmer importance control structure operational abstraction discussed argued insufficient evidence warrant variant | ledgard, h. f. marcotty, m. .k structured programming, control structures, goto statements, language design, pascal .c 4.2 5.24
2710 | query relational expression square data sublanguage | paper present data sublanguage called square intended ad hoc interactive problem solving non computer specialist square based relational model data shown relationally complete avoids quantifier bound variable required language based relational calculus facility query insertion deletion update tabular data base syntax suggestion made alternative syntax including syntax based english key word user limited mathematical background | boyce, r. f chamberlin, d. d. king, w. f. iii .k database, data sublanguages, relations, query languages, casual user, relational data model, tabular  data, interactive problem solving, nonprocedural languages, relational completeness .c 3.50 3.70 4.20
2711 | vector space model automatic indexing | document retrieval pattern matching environment stored entity document compared incoming pattern search request appears indexing property space entity lie circumstance indexing system expressible function density object space retrieval performance correlate inversely space density approach based space density computation choose optimum indexing vocabulary collection document typical evaluation result shown demonstrating usefulness model | salton, g. wong, a. yang, c. s. .k automatic information retrieval, automatic indexing, content analysis, document space .c 3.71 3.73 3.74 3.75
2712 | horner rule evaluation general closed queueing network | solution separable closed queueing network requires evaluation homogeneous multinomial expression number term expression grows combinatorially size network direct summation impractical algorithm show combinatorial operation count algorithm based generalization horner rule polynomial shown mean queue size throughput obtained negligible extra cost normalization constant evaluated | reiser, m. kobayashi, h. .k queueing networks, queueing theory horner's rule, evaluation of multinomial sums, load-dependent  service rate .c 5.12 5.5 8.1 8.3
2713 | remark stably updating mean standard deviation data corrigendum | cotton, i.
2714 | merging parallel processor | consider linearly ordered set |a
2715 | implementation structured english query language | relational model data xrm relational memory system sequel language covered previous paper reviewed sequel relational data sublanguages intended ad hoc interactive problem solving non computer specialist version sequel implemented prototype interpreter interpreter designed minimize data accessing operation required respond arbitrary query optimization algorithm designed purpose | astrahan, m. m. chamberlin,d. d. .k relational model, query language, nonprocedural language, database, data structure, data organization .c 3.74 3.75 4.22 4.33 4.34
2716 | optimizing performance relational algebra database interface | approach implementing smart interface support relational view data proposed basic idea employ automatic programming technique interface analyzes efficiently refines high level query specification supplied user relational algebra interface called squiral designed approach detail squiral seek minimize query response time space utilization performing global query optimization exploiting disjoint pipelined concurrency coordinating sort order temporary relation employing directory analysis maintaining locality page reference algorithm implementing operator codd relational algebra presented methodology composing optimize performance user query | smith, j. m. yen-tang chang, p. .k relational database, database optimization, inverted file, automatic programming, query language,  data manipulation language, very high level language .c 3.70 4.13 4.33
2717 | convert high level translation definition language data conversion | paper describes high level nonprocedural translation definition language convert powerful highly flexible data restructuring capability design based simple underlying concept form enables user visualize translation process make data translation simpler task convert chosen conveying purpose language confused language program bearing | shu, n. c. housel, b. c. lum, v. y. .k data conversion, data restructuring, data translation, database reorganization, translation definition,  utility program, programming languages, nonprocedural languages .c 3.50 3.75 4.29 4.4 4.9
2718 | preliminary system design dbtg data structure | functional approach database design introduced approach goal design derive data structure capable supporting set anticipated query structure model business operational computer program utilizer functional approach design data structure conforming data base task group specification automatic programming technology utilized program typically generate procedure generate declarative | gerritsen, r. .k network model of databases, data base task group, database design, data structure, automatic programming,  translation, nonprocedural languages .c 3.5 3.64 3.7 4.2 5.23
2719 | mechanical program analysis | mean analyzing program performance deriving closed form expression execution behavior paper discus mechanization analysis describes system metric able analyze simple lisp program produce closed form expression running time expressed term size input paper present reason mechanizing program analysis describes operation metric explains implementation discus limitation | wegbreit, b. .k analysis of programs, performance analysis, execution time, execution behavior, difference equations,  generating functions, list processing, lisp, algebraic manipulation, programming languages, analysis  of algorithms .c 3.69 4.22 5.24 5.25
2720 | optimal balancing request disk | determining policy efficient allocation utilization set disk drive differing operational characteristic examined analytical technique standard queueing theory disk drive characterized queueing model service time disk drive represented probability density function sum uniform distribution total response time set disk model minimized varying load condition result faster device higher utilization factor number device type utilized tends decrease decreasing load specific example combination examined | piepmeier, w. f. .k disk drive hierarchies, system evaluation, input/output, modeling, queueing theory, balancing,  scheduling, device assignment .c 2.44 4.35 5.15 5.5 6.35 8.1 8.3
2721 | digital simulation river plankton population dynamic | paper deal development mathematical model digital simulation fortran iv phytoplankton zooplankton population density river previously developed rate expression order study relationship ecological mechanism involved simulation parameter varied illustrating response ecosystem condition including type chemical thermal pollution investigation accuracy simulation method simulation actual population dynamic asterionella columbia river made based approximation condition river totally accurate simulation found predict general annual pattern plankton growth fairly specifically revealed importance annual velocity cycle determining pattern addition study demonstrates usefulness digital simulation examination aquatic ecosystem environmental planning involving examination | claudson, r. m. .k digital simulation, mathematical modeling, plankton population dynamics, phytoplankton, zooplankton,  river ecosystems, ecological mechanisms, environmental simulation, modeling ecosystems, pollution, environmental  impact, environmental planning .c 3.12 3.19
2722 | multidimensional binary search tree associative searching | paper develops multidimensional binary search tree tree dimensionality search space data structure storage information retrieved associative search tree defined example shown storage requirement significant advantage structure single data structure handle type query efficiently utility algorithm developed proven average running time record insertion log deletion root deletion random node log optimization guarantee logarithmic performance search log search algorithm partial match query key proven maximum running time nearest neighbor query empirically observed average running time log performance surpass known algorithm task algorithm presented handle general intersection query main focus paper theoretical felt tree application example potential | bently, j. l. .k associative retrieval, binary search trees, key, attribute, information retrieval system, nearest  neighbor queries, partial match queries, intersection queries, binary tree insertion .c 3.63 3.70 3.74 4.49
2723 | multiprocessing compactifying garbage collection | algorithm multiprocessing compactifying garbage collector presented discussed simple case processor performing lisp list operation performing garbage collection continuously examined capability processor defined interprocessor communication interlock complete procedure garbage collection standard list processing primitive presented explained attention problem marking relocating list cell processor operating primary aim allow list processor run unimpeded processor reclaims list storage complex case involving list processor garbage collection processor briefly discussed | steele, g. l. jr. .k garbage collection, storage reclamation, reclaimer, storage allocation, multiprocessing, synchronization,  semaphores, parallel processing, compactification, relocation, lisp, list processing, free storage, pointers,  data structures, gc processor .c 4.19 4.32 4.40 4.49 4.9
2724 | lemniscate constant corrigendum | todd, j.
2725 | comparison simulation event list algorithm corrigendum | vaucher, j. c. duval, p.
2726 | combining decision rule decision table | technique minimizing logic circuit applied simplification decision table combining decision rule method logically equivalent quien mccluskey method finding prime implicants decision rule implied rule occur low frequency rule simplify decision table objective merit consideration optimizing decision table reducing machine execution time reducing preprocessing time reducing required machine memory reducing number decision rule improves clarity decision table human reader shown objective furthered method objective attained overspecified decision rule combined objective compared potential benefit objective deciding method | shwayder, k. .k the quine-mccluskey method, prime implicants, minimization, maximization, logic circuit, boolean  method, coding, decision tables, flowcharting, sorting .c 3.5 3.74 4.12 5.31 5.6
2727 | multiple byte processing full word instruction | method parallel processing packed data item ordinary full word computer instruction processing requires operation execution contingent datum technique processing small data item alphanumeric character | lamport, l. .k byte processing, character processing, packed data .c 4.9
2728 | consecutive storage relevant record redundancy | paper study property class organization crwr record relevant query stored consecutive storage location organization redundancy theorem provide tool reducing redundancy crwr organization developed redundancy obtained application theorem compared query inverted organization crwr organization minimum redundancy developed query set key | ghosh, s. p. .k consecutive, retrieval, storage, file, records, query, redundancy, key .c 3.70 3.73 3.74
2729 | comment paper chen ho | smith, a. j. .k binary coded decimal digits, decimal data storage, data compression, huffman codes, variable length  codes .c 6.32 6.34
2730 | interactive consulting natural language | interactive programming system help command give programmer line instruction regarding system command argued easy make help command significantly helpful accept request natural language demonstration weizenbaum eliza program provided script turn natural language system consultant | sharo, s. c. kwasny, s. c. .k interactive programming, time-sharing systems, natural language processing, computer assisted instruction .c 3.32 3.42 3.79 4.49
2731 | remark stably updating mean standard deviation data | cotton, i. w. .k mean, standard deviation .c 5.5 5.19
2732 | guarded command nondeterminacy formal derivation program | called guarded command introduced building block alternative repetitive construct allow nondeterministic program component activity evoked final state necessarily uniquely determined initial state formal derivation program expressed term construct calculus shown | dijkstra, e. w. .k programming languages, sequencing primitives, program semantics, programming language semantics,  nondeterminacy, case-construction, repetition, termination, correctness proof, derivation of programs,  programming methodology .c 4.20 4.22
2733 | deterministic parsing ambiguous grammar | method describing syntax programming language way flexible natural conventional bnf description considered method involve ambiguous context free grammar rule resolve syntactic ambiguity shown efficient lr ll parser constructed directly class specification | aho, a. v. johnson, s. c. ullman, j. d. .k programming language specification, parser generation, translator writing systems, syntax analysis,  lr parsing, ll parsing, ambiguous grammars .c 4.12 4.22 5.23
2734 | external storage fragmentation produced fit fit allocation strategy | published comparison external fragmentation produced fit fit memory allocation consistent simulation series experiment performed order obtain data relative performance fit fit understanding reason underlying observed difference time memory product efficiency fit fit generally percent small population size request population effect allocation efficiency exponential hyperexponential distribution request fit outperformed fit normal uniform distribution exponential distribution distorted way fit outperformed fit hypothesized fit outperforms fit fit preferentially allocating end memory encourages large block grow end sufficient contiguous space likely large request result simulation experiment supported hypothesis showed relative performance fit fit depends frequency request coefficient variation request distribution greater approximately equal unity fit outperformed fit | shore, j. e. .k storage fragmentation, dynamic memory allocation, first-fit, best-fit .c 3.73 4.32 4.35
2735 | discrimination employment woman computer industry | weber, r. e. gilchrist, b. .k discrimination against women, salaries, employment, programmers, systems analysis, keypunch operators,  machine operators .c 2.40 2.41 2.42
2736 | note hash linking | bobrow, d. g. .k hash search, address space extension, implicit pointers, monitor conditions .c 3.7 3.73 4.1
2737 | determining minimum area encasing rectangle arbitrary closed curve | paper describes method finding rectangle minimum area arbitrary plane curve contained method interest packing optimum layout problem consists determining minimal perimeter convex polygon encloses curve selecting rectangle minimum area capable polygon theorem introduced show side minimum area rectangle colinear edge enclosed polygon minimum area encasing rectangle convex polygon minimum area rectangle curve | freeman, h. shapira, r. .k enclosed curve, optimum layout, optimum packing, minimum-area encasing rectangle .c 5.19 5.49
2738 | concept transparency design hierarchically structured system | paper deal design hierarchically structured programming system develops method evaluating cost requiring programmer work abstraction real machine number example hardware software illustration method | parnas, d. l. siewiorek, d. p. .k hierarchical systems, bottom up design, levels of abstraction, synchronization primitives .c 4.20 4.30 6.1 6.20
2739 | restriction language computer grammar natural language | past year number system computer analysis natural language sentence based augmented context free grammar context free grammar defines set parse tree sentence group restriction tree conform order valid sentence analysis coverage grammar increased efficient representation essential development paper present programming language designed specifically compact perspicuous statement restriction natural language grammar based ten year experience parsing text sentence comprehensive english grammar linguistic string project embodies syntax routine relation found adequate computerized natural language analysis language implementation linguistic string parser | sager, n. grishman, r. .k natural language, parsing, grammar, programming languages .c 3.42 3.79 4.22
2740 | large semaphore based operating system | paper describes internal structure large operating system set cooperating sequential process process synchronize mean semaphore extended semaphore queue semaphore number parallel process carefully justified semaphore construction explained system proved free deadly embrace deadlock design principle alternative dijkstra hierarchical structuring operating system project management performance discussed operating system large rc multiprogramming system | lauesen, s. .k cooperating processes, operating system, semaphores, semaphore applications, queue semaphores,  deadlock, deadly embrace, hierarchical structuring, multiprogramming, operating system structure, asynchronous  structuring, buffering, parallel processes, synchronizing primitives, reentrant code, rc 4000, project  management, time schedule, debugging, project planning, project scheduling, reliability, program proving,  coroutines, correctness, program maintenance, software paging .c 4.30 4.31 4.32 4.42 4.43 5.24
2741 | decomposability instability saturation multiprogramming system | step step approach model dynamic behavior evaluate performance computing system proposed based technique variable aggregation concept nearly decomposable system borrowed econometrics approach order identify multiprogramming paging system unstable regime operation ii critical computing load bring system state saturation analysis lead complete definition circumstance thrashing set | courtois, p. j. .k multiprogramming, paging, performance evaluation, saturation, instabilities, thrashing, aggregation,  system levels, hierarchy,networks of queues .c 4.31 4.32 8.1 8.2
2742 | improved event scanning mechanism discrete event simulation | simulation model large complex real world application occasionally earned reputation eating hour computer time problem attributed part difficulty slow stochastic convergence additional problem lie fact significant amount bookkeeping time required future event proper sequence paper present method significantly reducing time spent scanning future event list discrete event simulation model presented improve effectiveness event list scan problem burdensome | wyman, f. p. .k discrete event simulation, simulation, event scanning mechanisms .c 4.34 5.5 8.1
2743 | sorting | harper, l. h. payne, t. h. savage, j. e. straus, e. .k merge sorting, computational complexity, data modeling, computing models, binary comparisons .c 5.25 5.31
2744 | addition arbitrary base radix conversion | paper present generalization programming technique add subtract number represented radix including mixed radix stored digit byte byte sufficient size radix conversion unnecessary looping required number stored display format application cobol mix hexadecimal sum discussed | soule, s. .k addition, subtraction, decimal arithmetic, arbitrary radix arithmetic, radix conversion, mix arithmetic,  cobol display arithmetic, mixed radix arithmetic .c 4.49 4.9 5.9
2745 | linear space algorithm computing maximal common subsequence | problem finding longest common subsequence string solved quadratic time space algorithm presented solve problem quadratic time linear space | hirschberg, d. s. .k subsequence, longest common subsequence, string correction, editing .c 3.63 3.73 3.79 4.22 5.25
2746 | efficient string matching aid bibliographic search | paper describes simple efficient algorithm locate occurrence finite number keywords string text algorithm consists constructing finite state pattern matching machine keywords pattern matching machine process text string single pas construction pattern matching machine take time proportional sum length keywords number state transition made pattern matching machine processing text string independent number keywords algorithm improve speed library bibliographic search program factor | aho, a. v. corasick, m. j. .k keywords and phrases, string pattern matching, bibliographic search, information retrieval, text-editing,  finite state machines, computational complexity. .c 3.74 3.71 5.22 5.25
2747 | simplified recombination scheme fibonacci buddy system | simplified recombination scheme fibonacci buddy system requires table repetitive calculation additional bit buffer presented | cranston, b. thomas, r. .k fibonacci buddy system, dynamic storage allocation, buddy system .c 3.89 4.32 4.39
2748 | indirect threaded code | efficient arrangement interpretive code related bell notion threaded code requires space amenable machine independent implementation | dewar, r. b. k. .k threaded code, snobol4, interpretors, code generation .c 4.12 4.13
2749 | significant event simulation | paper compare method simulation organization called significant event method called clock pulse method example automobile traffic model significant event method found efficient clock pulse method low level system interaction efficient high level simple mathematical model trade relative running time method developed model aid choosing simulation method experiment concluded significant event method simulation system computational efficiency sufficient importance | babich, a. f. grason, j. parnas, d. l. .k simulation organization, event simulation, clock pulse simulation, significant event simulation. .c 8.1
2750 | cost oriented algorithm data set allocation storage hierarchy | data set allocation today multilevel storage system based qualitative ad hoc decision desirable obtain optimal solution allocation problem clear number parameter involved make intractable straight forward solution situation find set assumption simplify problem greatly provide basis considering significant cost element paper present quantitative allocation step considers significant detailed cost system utilization data storage data staging data migration avenue improvement present algorithm usefully accurate aid quantifying problem data set allocation storage system configuration device design | lum, v. y. senko, m. e wang, c. p. ling, h. .k data set allocation, hierarchical storage, storage system configuration, data staging, data migration,  storage allocation analysis .c 3.5 3.9 6.2
2751 | illumination computer generated picture | quality computer generated image dimensional scene depends shading technique paint object cathode ray tube screen shading algorithm depends part method modeling object determines hidden surface algorithm method object modeling shading hidden surface removal strongly interconnected shading technique method object modeling related hidden surface algorithm presented human visual perception fundamental law optic considered development shading rule quality increased realism generated image | phong, b. t. .k computer graphics, graphic display, hidden surface removal. .c 3.26 3.41 8.2
2752 | generation cycle graph set basic cycle algorithm | gibbs, n. e. .k basic cycle, cycle, graph .c 5.32 3.24
2753 | heuristic problem solving design system equipment furniture layout | designer problem solver dp demonstrates computer perform simple design task design furniture equipment layout task chosen simple defined characteristic design task architecture engineering urban planning natural resource management space planning task involve manipulating dimensional representation object create feasible optimal solution problem involving topological metric spatial constraint paper describes extensive test performed program dp heuristic problem solver planning phase prefixed planning process give sense direction diagnostic procedure locate difficulty remedial action recover difficulty convex polygon representation accurately describe object layout representation topological metric constraint tested design easily updated dp applied problem slow limited scope idea general demonstrates need selectivity controlling search method achieve task specific information planning diagnostic procedure remedial action selective alternative generator | pfefferkorn, c. e. .k artificial intelligence, computer-aided design, design synthesis, diagnostic search, heuristics,  planning, problem solving, representations, search strategies, space planning, spatial representations .c 3.20 3.25 3.64 3.66
2754 | syntactic algorithm peak detection waveform application cardiography | peak digitized waveform detected algorithm incorporating piecewise linear approximation tabular parsing technique parameter serve identify waveform context enabling accurate measurement peak amplitude duration shape algorithm sufficient speed allow line real time processing application demonstrated electrocardiogram | horowitz, s. l. .k peak detection, digitized waveform, piecewise linear approximation, context-free grammar, bottom-up  parsing, electrocardiogram. .c 3.12 3.24 3.34 3.63 4.19 5.13 5.23
2755 | math computer programming corrigendum | mills, h. d.
2756 | problem list public policy issue concerning computer health care | wasserman, a. i. .k economic and social implications, the public and computing, medicine and health care .c 2.11 2.12 3.34
2757 | kth shortest path | fox, b.l. .k networks, kth shortest paths .c 5.32
2758 | note lu factorization symmetric matrix | evans, d. j. hatzopoulos, m. .k symmetric matrices, factorization, test matrices, matrix inversion, separable systems .c 5.14
2759 | solution overdetermined system equation l1 norm algorithm r478 | fritsch, f. n. hindmarsh, a. c.
2760 | visible surface plotting program algorithm r475 | doran, c. j.
2761 | visible surface plotting program algorithm r475 | mashburn, r. g.
2762 | ten subroutine manipulation chebyshev series algorithm r446 c446 | piessens, r. mertens, i.
2763 | basic cycle generation algorithm | gibbs, n. e. .k graph, basic cycles,fundamental cycle, spanning tree, vertex adjacency matrix .c 5.32 3.24
2764 | intelligent analyzer understander english | paper describes working analysis generation program natural language handle paragraph length input core system preferential choice deep semantic pattern based call semantic density system contrasted syntax oriented linguistic approach theorem proving approach understanding problem | wilks, y. .k artificial intelligence, computational linguistics, template, paraplate, stereotype, machine translation,  understanding, natural language processing, semantic preference, semantic density .c 3.36 3.42 3.63
2765 | analysis performance inverted data base structure | need envision architecture data base system hierarchical level level framework stressed inverted data base organization analyzed considering implementation oriented aspect inverted directory viewed realistically large data base subjected inversion formulation derived estimate average access time read storage requirement formalizing interaction data base content characteristic logical complexity query machine timing blocking specification identified order effect performance formulation presented conjunction index selection criterion determine optimum set index key | cardenas, a. f. .k data base architecture, inverted file organization, data base performance and measurement, secondary  index organization, information storage and retrieval, query answering .c 3.70 3.71 3.72 3.74 3.79 4.0
2766 | copying cyclic list structure linear time bounded workspace | bounded workspace copying algorithm arbitrary list structure algorithm operates linear time require tag bit previous bounded workspace copying algorithm achieved time tag bit log time tag restriction algorithm copy contiguous section memory method applicable fixed variable size node | fisher, d. a. .k list processing, copying, linear time, space complexity .c 4.49 5.25
2767 | comparison simulation event list algorithm | algorithm considered schedule event general purpose discrete simulation system algorithm based end order tree structure event notice indexed linear list algorithm tested set typical stochastic scheduling distribution especially chosen show advantage limitation algorithm end order tree algorithm shown advantageous replacement algorithm simulation language promising algorithm indexed list concept require adaptive routine employed general purpose simulator performance study fruitful | vaucher, j. g. duval, p. .k simulation, time flow mechanisms, event list algorithm, simulation, time flow mechanisms, event  list algorithm, simulation executive, event scheduling routine, discrete system simulation, sorting .c 3.74 4.22 8.1
2768 | algorithm locating adjacent storage block buddy system | simple scheme determination location block storage relative block scheme applicable buddy type storage allocation system | hinds, j. a. .k dynamic storage allocation, buddy system, generalized fibonacci sequences .c 3.89 4.32 4.39
2769 | modification warshall algorithm transitive closure binary relation | algorithm computing transitive closure binary relation represented boolean matrix algorithm similar warshall executes faster sparse matrix computer paging environment | warren, h. s. jr. .k warshall's algorithm, transitive closure, reachability matrix, directed graph, digraph, boolean  matrix, binary relation .c 5.30 5.32
2770 | quadratic hash method table size prime number | previous work quadratic hash method limited mainly case table size prime number result derived composite number shown composite number square component prime full period integer coefficient quadratic hash function | batagelj, v. .k quadratic search, hash code, scatter storage, table size .c 3.74 4.10
2771 | synthesis solid bounded face | technique presented class solid object synthesized stored computer synthesis begin primitive solid cube wedge cylinder solid moved scaled rotated solid added subtracted algorithm perform addition practical designer technique advantage operation concise readily composed term easily imagined solid short sequence operation suffice build complex solid bounded face | braid, i. c. .k computational geometry, computer-aided design, graphics, machined components, polyhedra, shape  synthesis, three-dimensional modeling .c 3.2 8.2
2772 | maintenance opportunity list class teacher timetable problem | principal component procedure solution class teacher timetable problem maintenance opportunity list opportunity list maintenance method based condition existence solution general framework condition specific set condition | smith, g. .k combinatorial, necessary conditions, opportunity list, schedule,school timetable, timetable .c 3.51 5.39
2773 | weighted buddy method dynamic storage allocation corrigendum | shen, k. k. peterson, j. l.
2774 | remark algorithm | frederick, l. w.
2775 | dilogarithm function real argument s22 algorithm | ginsberg, e. s. zaborowski, d. .k dilogarithm .c 5.12
2776 | computer network higher education socio economic political factor | study present result nationwide survey computer network higher education conducted major minor network identified major network included arpa net california state college network university iowa iowa state university network michigan educational research information triad triangle university computation center network north carolina depth study conducted net based experience operating network number factor identified consideration developing network finally recommendation advanced regarding development network higher education future | chambers, j. a. poore, r. v. .k networks, higher education .c 1.3 2.45
2777 | solution cigarette smoker problem conditional statement | report discus problem introduced patil claimed cigarette smoker problem solved operation introduced dijkstra conditional statement examination patil proof show established claim strong restriction restriction eliminate programming technique dijkstra introduction semaphore concept paper solution problem discus need generalized operator suggested patil | parnas, d. l. .k operating systems, co-operating processes,process synchronization primitives .c 4.3
2778 | perturbation eigenvalue non normal matrix corrigendum | sluis, a.
2779 | discrete square polynomial fit | recurrence relation orthogonal polynomial widely discrete square data fitting variant classical algorithm numerical property presented reason improved performance explained | shampine, l. f. .k orthogonal polynomials, data fitting, least squares, recurrence relation between orthogonal polynomials,  residual .c 5.11 5.13
2780 | computing element inverse sparse matrix | recursive algorithm computing inverse matrix lu factor based relationship takahashi al examined formula algorithm dependency relationship derived computational cost developed general comment application stability made | erisman, e. m. tinney, w. f. .k sparse matrices, triangular factorization, elements of inverse, tridiagonal matrix, sensitivities .c 3.24 5.14
2781 | algorithm sequential access method alternative index sequential | whitt, j. d. sullenberger, a. g. .k keys, direct access method, sequential access method, randomizing information retrieval .c 3.7
2782 | reply gentleman marovich | karp, r. a. .k high-level languages, philosophy of language design .c 4.22 5.19
2783 | algorithm select finding ith smallest element m1 algorithm | floyd, r. w. rivest, r. l. .k selection, medians, quantiles .c 5.30 5.39
2784 | expected time bound selection | selection algorithm presented shown efficient average theoretically practically number comparison select ith smallest number min lower bound percent formula derived | floyd, r. w. rivest, r. l. .k selection, computational complexity, medians, tournaments, quantiles .c 5.30 5.39
2785 | glypnir programming language illiac iv | glypnir earliest existing language designed programming illiac iv computer syntax language based algol extended allow programmer explicitly parallelism algorithm term word vector paper describes characteristic goal philosophy language discus problem parallel computer architecture | lawrie, d. h. layman, t. baer, d. randal, j. m. .k glypnir, illiac iv, programming language, parallel computation, parallel architecture .c 4.2 4.21 4.22
2786 | system typesetting mathematics | paper describes design implementation system typesetting mathematics language designed easy learn people secretary mathematical typist know mathematics typesetting experience language learned hour rule fewer exception typical expression size font positioning line drawing print according mathematical convention input sum infinity pi produce formula syntax language small context free grammar compiler compiler make compiler translates language typesetting command output maybe produced phototypesetter terminal forward reverse half line motion system interface directly text formatting program mixture text mathematics handled simply paper typeset author system | kernighan, b. w. cherry, l. l. .k typesetting, photocomposition,compiler-compiler, graphics, printing, text processing. .c 4.12 4.22 8.2
2787 | matrix reduction efficient method | paper describes efficient method reduction binary matrix arise school time tabling problem development john lion generalized adapted fit complete timetabling process compact data representation efficient processing technique take fuller advantage previous knowledge matrix designed structured program readily coded reader high level low level programming language choice practical test method shown good basis realistic timetabling algorithm | johnston, h. c. hoare, c. a. r. .k binary matrices, matrix reduction, tight set, school timetable construction, structured programming .c 3.51 4.9 5.39
2788 | finding circle array accumulator | kimme, c. balard, d. sklansky, j. .k picture processing, pattern recognition, curve detection,line fitting .c 3.63
2789 | minimal spanning tree clustering method algorithm r479 | magnuski, h. s.
2790 | elementary circuit graph algorithm r459 | syslo, m. m.
2791 | exact probability contingency table algorithm r434 | hancock, t. w.
2792 | jacobi polynomial algorithm r332 | skovgaard, o.
2793 | chi square quantiles algorithm c451 | knight,w.
2794 | state space problem reduction theorem proving relationship | paper suggests bidirectional relationship state space problem reduction representation present formalism based multiple input multiple output operator basis viewing type representation manner representation language recognition problem based cocke parsing algorithm illustration method representing problem order logic inference system employed resolution based theorem prover determines set clause interpreted state spacer mode problem reduction mode presented analogous concept problem reduction theorem proving terminology refer noted relationship problem reduction input resolution linear resolution discussed | vanderbrug, g. j. minker, j. .k artificial intelligence, state-space representation, problem-reduction representation, theorem  proving, language recognition .c 3.64
2795 | sentence paraphrasing conceptual base | model natural language based underlying language free representation meaning program based model able produce sentence paraphrase demonstrate understanding respect context generator operates conjunction natural language analyzer combined memory inference model generating sentence meaning structure program employ information retrieval deduction capability memory model model encompasses diverse class linguistic knowledge include executable test conceptual property stored discrimination net information relating conceptual syntactic role stored word sense dictionary surface grammatical knowledge stored formal grammar | goldman, n. m. .k artificial intelligence, natural language processing, language generation, models of cognitive  processes, semantic representation .c 3.42 3.60 3.65
2796 | monitor operating system structuring concept corrigendum | hoare, c. a. r. 
2797 | order approximation optimal checkpoint interval corrigendum | young, j. w.
2798 | analysis interleaved memory system blockage buffer | model interleaved memory system presented analysis model monte carlo simulation discussed simulation investigate performance system structure scheme sending instruction data request memory system performance measured determining distribution number memory module operation memory cycle important observation investigation separately grouping instruction data request memory substantially increase average number memory module operation memory cycle result simulation analytical study displayed system structure | burnett, g. j. coffman, e. g. jr. .k interleaved memory systems, modular memory systems, memory performance analysis, blockage buffer,  conflict buffer, simulation, monte carolo simulation .c 5.5 6.34
2799 | stably updating mean standard deviation data | considering sample mean set data fit data constant function computational method based matrix formulation given transformation sample mean standard deviation updated data accumulates procedure numerically stable require storage data method dealing weighted data data removal presented updating mean square standard deviation process requires square root | hanson, r. j. .k mean, standard deviation, least squares, givens transformation, updating estimates, removing data .c 5.5 5.19
2800 | connection accuracy stability property linear multistep formula | paper concerned stability accuracy family linear step formula depending parameter emphasis numerical solution stiff ordinary differential equation upper bound derived order accuracy inf stable formula criterion stability shown arbitrary inf stability implies condition stability strict stability meaning extraneous root psi satisfy |psi
2801 | storage efficient representation decimal data | decimal digit represented 4n bit computer actually bcd digit compressed optimally reversibly bit digit bit simple algorithm based fixed length combination variable field length encoding half case compressed code result conventional bcd code simple removal redundant bit long decimal message subdivided digit block separately compressed result differs asymptotic minimum length percent hardware requirement small mapping manually | chi chen, t. ho, i. t. .k binary-coded decimal digits, decimal data storage .c 6.32 6.34
2802 | math computer programming | structured programming proved important methodology systematic program design development structured program identified compound function expression algebra function algebraic property function expression permit reformulation expansion reduction nested subexpression independently environment modeling known stepwise program refinement program execution finally structured programming characterized term selection solution elementary equation defined algebra function solution general formula involving single parameter display entire freedom creating correct structured program | mills, h. d. .k structured programming, algebra of functions, stepwise refinement, program correctness .c 4.6 5.21 5.24
2803 | pseudoinverses conjugate gradient | paper devoted study connection pseudoinverses matrix conjugate gradient conjugate direction routine | hestenes, m. r. .k pseudoinverse, conjugate gradients, hermitian matrix, minimization .c 5.14
2804 | elementary divisor tensor product | elementary divisor tensor product linear transformation known year paper short easily accessible proof result point interesting combinatorial consequence proof | marcus, m. robinson, h. .k elementary divisors, tensor products, linear transformations .c 5.14
2805 | perturbation eigenvalue non normal matrix | problem considered give bound finite perturbation simple multiple eigenvalue nonnormal matrix bound term eigenvalue departure normality frobenius norm perturbation matrix term eigen system bound derived shown attainable set matrix | van der sluis, a. .k perturbation of eigenvalues, non-normal matrices, departure from normality, gershgorin circles .c 5.14
2806 | hadamard number matrix | discussion function entry square matrix related hadamard determinant theorem merit alternative norm bound condition number linear system known eigen system | birkhoff, g. .k matrices, eigenvalues, norms, condition numbers, error analysis, gram-schmidt orthogonalization .c 5.11 5.14
2807 | stability gauss jordan elimination pivoting | stability gauss jordan algorithm partial pivoting solution general system linear equation commonly regarded suspect shown respect suspicion unfounded general absolute error solution strictly comparable gaussian elimination partial pivoting back substitution ill conditioned residual gauss jordan solution greater gaussian elimination solution | peters, g. wilkinson, j. h. .k gauss-jordan algorithm, gaussian elimination, back-substitution, backward error analysis, bounds  for error in solution, bound for residual  .c 5.11 5.14
2808 | lemniscate constant | lemniscate constant method actually computing played enormous part development mathematics account method derivation made elementary method material teaching purpose relevant interesting historical material acceleration method developed purpose evaluating constant problem | todd, j. .k lemniscate, acceleration, elliptic functions, euler transformation .c 1.2 5.0
2809 | positivity norm | line joint work householder character algebraic method theory norm demonstrated result concerning norm value archimedian vector lattice necessarily totally ordered generalization order unit norm norm norm application operator norm concerning contraction property positive operator | bauer, f. l. .k matrices, norms, positivity, numerical range, positivity cones, vector lattice,absolute, monotonic .c 5.11 5.14
2810 | professionalism computing field | term professional mean thing people general technical social standard professional term generally applied practitioner researcher broad definition computing practitioner regarded professional type institution academic industry government professional society educate employ regulate mold practitioner contributes nonprofessional status computing practitioner role institution examined shortcoming noted recommended suggested analysis professional status bestowed earned university industry specifically make improvement help computing practitioner achieve professional status | finerman, a. .k professional aspects, educational programs, industry attitudes, professional societies, licensing  and certification .c 1.50 2.10 2.2
2811 | structural pattern recognition carotid pulse wave general waveform parsing system | general waveform parsing system application structural pattern recognition carotid pulse wave carotid arterial pulse wave medical importance variation structure induced arterial aging cardiovascular disease syntax driven waveform analysis system applied good result pulse wave detect measure structural variation waveform parsing system modeled compiler compiler system user enter application specific information data general applicable waveform | stockman, g. kanal, l. kyle, m. c. .k structural pattern recognition, parsing, waveform analysis, pulse waves .c 3.12 3.34 3.63 4.12
2812 | computer aided analysis design information system | paper describes computer aided analysis design development integrated financial management system navy material command support activity nmcsa computer aided analysis consists set procedure computer program specifically designed aid process application software design computer selection performance evaluation major component problem statement language problem statement analyzer generator alternative design performance evaluator statement requirement written ad accurately defined system analyzed problem statement analyzer ad ad problem definition supplemented additional information order create complete problem definition analyzed problem statement translated form soda system optimization design algorithm program generation alternative specification program module logical database structure | nunamaker, j. f. jr. konsynski, b. r. jr. ho, t. singer, c. .k computer-aided analysis, information systems, logical system design, problem statement language,  problem statement analyzer, physical system design, accurately defined systems, systems optimization  and design algorithm .c 2.44 3.50 4.33 4.9 8.1
2813 | computer science engineering research study cosers | computer science engineering research study cosers briefly motivation organization schedule nsf supported study reference subject area panel chairman member steering committee identified | arden, b. .k computer science research, computer engineering research, national research study .c 1.0 1.52
2814 | roster programming language | sammet, j. e.
2815 | high level binding low level linkers | easy implement scheme compiler enforce agreement complex data type separately compiled module scheme designed work existing link editor linking loader matter deficient obscure run time error caused inconsistent usage forestalled static error detected linking time | hamlet, r. g. .k separate compilation, binding, linking, strong typing .c 4.10 4.22
2816 | optimal reorganization distributed space disk | database organization cost accessing database increase due structural caused update insertion reorganizing database access cost reduced basic problem establish proper tradeoff performance storage cost reorganization cost paper considers optimum point reorganize database disk organization distributed free space cost function describing excess cost due physical disorganization defined function minimized obtain optimum reorganization point numerical example based characteristic existing disk storage device | maruyama, k. smith, s. e. .k disk file, free space,retrieval, insertion, deterioration, reorganization .c 3.70 3.73
2817 | notion consistency predicate lock database system | database system user access shared data assumption data satisfies consistency constraint paper defines concept transaction consistency schedule show consistency requires transaction request lock releasing lock argued transaction need lock logical physical subset database subset predicate implementation predicate lock satisfies consistency condition suggested | eswarran, k.. gray, j.. lorie, r.. traiger, i. l. .k consistency, lock, database, concurrency, transaction .c 4.32 4.33
2818 | interference multiprocessor computer system interleaved memory corrigendum | baskett, f. smith, a. j.
2819 | experiment text compression | system compression data viewed string character presented method general applies equally english pl digital data system consists encoder analysis program decoder algorithm encoding string differ slightly earlier proposal analysis program attempt find optimal set code representing substring algorithm operation compared parameter algorithm optimized obtain high degree compression sample text | rubin, f. .k text compression, data file compaction, huffman codes, n-gram encoding, comparison of algorithms .c 3.7 3.73 4.33
2820 | design implementation table driven interactive diagnostic programming system | cap highly interactive diagnostic compiler interpreter beginning programmer prepare debug execute fairly simple program graphic display terminal complete syntax checking semantic analysis performed program entered subsequently edited analysis performed character character remarkable feature cap ability diagnose error compile time run time error corrected cap interacts student help find error component cap table driven reduce space needed implementation increase flexibility multilingual system student cap learn fortran pl cobolin conjunction computer assisted course introductory computer science | wilcox, t. r. davis, a. m. tindall, m. h. .k interactive programming, table driven compilers, error correction, interpreters, debugging, computer  assisted instruction, computer science education .c 1.5 4.12 4.13 4.42 8.2
2821 | cobol control | sample set cobol programming standard offered standard constrain code developed structured form data control structure require syntax existing cobol language fact utilize typical limited subset an cobol standard standard proved extremely valuable practice reduced cost time produce maintain large software system deployed live multiple customer environment | ledgard, h. f. cave, w. c. .k cobol, structured programming,software development, program standards .c 3.5 4.22 4.43
2822 | homily humble standard | copyright association computing machinery general permission republish profit part material granted provided acm copyright notice reference made publication data issue fact reprinting privilege granted permission association computing machinery | ross, d. t. .k standards, case standards criteria for standards, standardization .c 1.3 2.1 2.3
2823 | status woman minority academic computer science | result survey concerning woman minority student faculty computer science year presented analysis data effective affirmative action program recruitment graduate degree program needed enlarge number woman minority qualified later employment computer science discrimination employment woman minority graduate student revealed | montanelli, r. g. jr. mamrak, s. a. .k discrimination against women, discrimination against minorities, graduate students, undergraduate  students, academic employment, faculty, computer science degree programs, affirmative action, title vii,  title ix .c 1.52 1.53 2.2 2.3
2824 | improvement martin algorithm computation linear precedence function | duong-kien, c. hoffmann, h. j. muth, d. .k syntax analysis, precedence functions, boolean matrices .c 4.12
2825 | bmd bmdp series statistical computer program | frane, j. w. .k analysis of variance, cluster analysis, contingency tables, data analysis, discriminant analysis,  factor analysis, graphics, outliers, regression, time series, transformations .c 1.3 3.3 4.0 5.5
2826 | interactive skeleton technique enhancing motion dynamic key frame animation | significant increase capability controlling motion dynamic key frame animation achieved skeleton control technique animator develop complex motion sequence animating stick figure representation image control sequence drive image sequence movement simplicity stick figure image encourages high level interaction design stage compatibility basic key frame animation technique permit skeleton control applied selectively component composite image sequence require enhancement | burtnyk, n. wein, m. .k interactive graphics, computer generated animation, key frame animation, interactive skeleton control,  stick figure animation .c 3.41 3.49 4.9 8.2
2827 | parametric algorithm drawing picture solid object composed quadric surface | algorithm drawing picture dimensional object surface made patch quadric surface emphasis algorithm calculating intersection quadric surface parameterization scheme quadric surface intersection curve qsic represented set coefficient parameter limit parameter represents point easily distinguished scheme find coordinate point quartic fourth order intersection curve equation order method parameterization type osic discussed surface bounding hidden surface removal | levin, j. .k computer graphics, hidden surface removal, quadric surface intersection curves .c 3.41 5.12 5.13 5.19 8.2
2828 | hierarchical geometric model visible surface algorithm | geometric structure inherent definition shape dimensional object environment define relative motion placement assist solving problem system producing picture computer extension traditional structure information geometric hierarchy significant improvement technique range complexity environment greatly increased visible complexity scene fixed upper limit meaningful provided vary amount detail presented scene clipping fast logarithmic search resolvable part environment field view fourth frame frame coherence clipping define graphical working set fraction total structure present primary store access visible surface algorithm finally geometric structure suggests recursive descent visible surface algorithm computation time potentially grows linearly visible complexity scene | clark, j. h. .k visible surface algorithms, hidden surface algorithms, hierarchical data structures, geometric  models .c 5.31 8.2
2829 | texture reflection computer generated image | catmull developed algorithm rendering image bivariate surface patch paper describes extension algorithm area texture simulation lighting model parameterization patch defines coordinate system key mapping pattern surface intensity pattern picture element computed weighted average region pattern definition function shape size weighting function chosen digital signal processing theory patch rendering algorithm accurate computation surface normal patch picture element permitting simulation mirror reflection amount light coming direction modeled similar manner texture mapping added intensity obtained texture mapping example image synthesized technique included | blinn, j. f. newell, m. e. .k computer graphics, graphic display, shading, hidden surface removal .c 3.41 5.12 5.15 8.2
2830 | practitioner guide addressing algorithm corrigendum | severance, d. g. duhne, r. a.
2831 | analysis pff replacement algorithm semi markov model corrigendum | chu, w. w. opderbeck, h.
2832 | faster retrieval context tree corrigendum | context tree provide convenient storing data viewed hierarchy context note present algorithm improves previous context tree retrieval algorithm based observation typical context infrequent relative retrieval data cached speed retrieval retrieval started position previous retrieval auxiliary structure built make search rapid algorithm addition deletion data garbage collection outlined | wegbreit, b. .k context trees, frame problem, variable bindings, data structures .c 3.69 3.74 4.10
2833 | efficient incremental automatic garbage collector | paper describes solving storage reclamation problem system lisp allocates storage heap require programmer give indication item longer accessible reference count scheme reclaiming non referential structure linearizing compacting copying scheme reorganize storage user discretion proposed algorithm designed work system multiple level storage large virtual address space depend fact cell referenced exactly reference count need accurate storage reclaimed transaction store reference count multiple reference table store count item referenced | deutsch, l. p. bobrow, d. g. .k storage management, garbage collection, lisp .c 4.19
2834 | efficient generation binary reflected gray code application | algorithm presented generate bit binary reflected gray code codewords fixed weight code algorithm efficient time required generate element constant application generation combination thing time composition integer permutation multiset discussed | bitner, j. r. ehrlich, g. reingold, e. m. .k gray code, combinations, subsets, compositions, combinatorial computing .c 5.39
2835 | recursion analysis compiler optimization | simple method detection recursive procedure presented compiler optimization implementation consideration discussed modification algorithm improve optimization analysis determine subset value assumed variable take small discrete set value common parameter variable assuming value label procedure pascal enumerated type | walter, k. g. .k recursion, compiler optimization .c 4.12
2836 | weighted derivation tree | node weighted derivation tree weighting function vocabulary context free grammar algorithm presented constructing optimal derivation tree structure weighted derivation tree addition correctness algorithm established method applied problem involving probabilistic parsing combinatorial optimization | loui, m. c. .k derivation tree, parse tree, probabilistic grammar, structural ambiguity, combinatorial optimization .c 5.23 5.49
2837 | upper bound selection | worst case minimum number comparison complexity vi th selection problem considered upper bound vi improves bound standard hadian sobel algorithm generalization kirkpatrick hadian sobel algorithm extends kirkpatrick method wider range application generalization compare favorably recent algorithm hyafil | yap, c. k. .k selection problem, algorithms, comparison problems, concrete computational complexity, upper bounds,  worst-case analysis .c 5.25 5.31
2838 | analysis algorithm real time garbage collection | real time garbage collection system avoids suspending operation list processor long time garbage collection requires performing garbage collection processor parallel list processing operation single processor time shared algorithm recovering discarded list structure manner presented analyzed determine sufficient condition list processor need wait collector technique shown require processing power regular garbage collector efficiently average behavior program shown nearly equal worst case performance sufficient condition suitable measuring typical behavior algorithm | wadler, p. l. .k garbage collection, storage reclamation, list processing, lisp, time-sharing, multiprocessing,  parallel processing, real time, data structures, analysis of algorithms .c 3.69 3.89 4.19 4.29 4.32 4.34 4.9 5.25
2839 | insertion technique sided height balanced tree | restriction height balanced binary tree presented seen restriction reduces extra memory requirement half extra bit node maintains fast search capability cost increased time requirement inserting node | hirschberg, d. s. .k balanced, binary, search, trees .c 3.73 3.74 4.34 5.25 5.31
2840 | protection operating system | model protection mechanism computing system presented appropriateness argued safety problem protection system model determine situation subject acquire object restricted case shown problem decidable algorithm determine system configuration safe general surprisingly weak assumption decided situation safe implication fact discussed | harrison, m. a. ruzzo, w. l. ullman, j. d. .k protection, protection system, operating system, decidability, turing machine .c 4.30 4.31 5.24
2841 | designing surface | experimental system computer aided design free form surface dimension surface represented system parametric basis spline principal feature system surface rendered isoparametric line drawing head mounted display designed aid dimensional wand movement point controlling shape surface interaction surface real time mathematical formulation assume knowledge user system examined feature part practical system designing space form | clark, j. h. .k real-time graphics, computer-aided design, picture processing, b-splines, 3-d displays .c 3.80 6.22 8.2
2842 | denotational semantics programming language | paper tutorial introduction theory programming language semantics developed scott strachey application theory formal language specification demonstrated application surveyed language considered loop elementary definition merely introduces notation methodology approach semantic concept environment store continuation introduced model class programming language feature underlying mathematical theory computation due scott motivated outlined finally paper present formal definition language gedanken | tennent, r. d. .k semantics, programming language, applicative, imperative, environment, store, continuation, theory  of computation, higher-order function, recursive definition, loop, gedanken .c 4.22 5.24
2843 | tool philosophy software education | paper describes set tool philosophy teaching software found course mit past year tool include program simulator grader compiler monitor allow instructor augment basic concept relevant exciting economical student project activity | donovan, j. j. .k software education, simulators, grading programs, student assignments .c 1.5 4.0
2844 | heap applied event driven mechanism | gonnet, g. h. .k discrete event simulation, event-scanning mechanisms, priority queues, heaps .c 4.34 8.1
2845 | buddy system variation disk storage allocation | generalization buddy system storage allocation set permitted block size size satisfy condition size size size meaningful integral valued function make force logical storage block coincide physical storage block track cylinder | burton, w. .k buddy system, dynamic storage allocation .c 3.89 4.32 4.39
2846 | compressed try | paper present data structure called compressed trie trie information retrieval system underlying ary tree structure trie parameter trie field node trie large hold key pointer field trie bit long analysis part paper shown collection key retrieval time measured term bit inspection key order logm storage requirement order log2 bit improvement storage requirement retrieval time achieved cost decreasing flexibility structure updating cost increased trie analyzed data structure method static database discussed | maly, k. .k data structure, database, m-ary tree, trie, retrieval time, storage requirement, keys .c 3.70 3.74 3.75
2847 | sampling gamma distribution computer | paper describes method generating gamma variate appears costly wallace recently suggested method large shape parameter cost computation proportional wallace method proportional experimentation robinson lewis small method suggested dominates method recently suggested dieter ahrens albeit method dominate large method suggested rejection technique | fishman, g. s. .k gamma variates, reflection method, sampling .c 5.5 8.1 8.3
2848 | synthesis decision rule | decision table effective tool interview record logic process automated result interview structure complete decision table set decision rule purpose paper provide procedure synthesizing decision rule provide aid developing structure complete decision table | cheng, c. rabin, j. .k decision rules, decision tables, logical tables, logical design, system design, specification language .c 3.50 4.33
2849 | ethernet distributed packet switching local computer network | ethernet branching broadcast communication system carrying digital data packet locally distributed computing station packet transport mechanism provided ethernet build system viewed local computer network loosely coupled multiprocessor ethernet shared communication facility ether passive broadcast medium central control coordination access ether packet broadcast distributed contending transmitting station controlled statistical arbitration switching packet destination ether distributed receiving station packet address recognition design principle implementation based experience operating ethernet node kilometer coaxial cable model estimating performance heavy load packet protocol error controlled communication included completeness | metcalfe, r. m. boggs, d. r. .k computer networks, packet switching, multiprocessing, distributed control, distributed computing,  broadcast communication, statistical arbitration .c 3.81 4.32 6.35
2850 | symbolic execution program testing | paper describes symbolic execution program supplying normal input program number supply symbol representing arbitrary value execution proceeds normal execution value symbolic formula input symbol difficult interesting issue arise symbolic execution conditional branch type statement system called effigy symbolic execution program testing debugging interpretively executes program written simple pl style programming language includes standard debugging feature ability manage prove thing symbolic expression simple program testing manager program verifier discussion relationship symbolic execution program proving included | king, j. c. .k symbolic execution, program testing, program debugging, program proving, program verification,  symbolic interpretation .c 4.13 5.21 5.24
2851 | formal verification parallel program | formal model parallel computation presented abstract conceptual model parallel program model model distinguish control data state model includes capability representation infinite set control state allowing arbitrarily instruction pointer process executing program induction principle presented treat control data state set ground place variable observed correctness condition expressed enumeration set control state example presented induction principle demonstrate proof mutual exclusion shown assertion oriented proof method special case induction principle special case assertion method called parallel place assertion shown incomplete formalization deadlock presented concept norm introduced yield extension deadlock problem floyd technique proving termination discussed extension program model process local variable permit shared global variable correctness form implementation discussed appendix included relates work previous work satisfiability logical formula | keller, r. m. .k parallel program, correctness, verification, assertions, deadlock, mutual exclusion, petrinet .c 4.6 5.2 6.9 8.1
2852 | technology computer center management proposed course graduate professional program computer science information system | mcfarlan nolan made strong case adding course information system administration course proposed acm curriculum committee computer education management graduate professional program information system paper report course entitled technology computer center management offered purdue past year course suitable graduate professional program information system graduate professional program computer science | conte, s. d. halstead, m. h. .k education, information systems administration, computer center management, computer system performance .c 1.52 2.4 3.51 4.6
2853 | numbering system permutation combination | knott, g. d. .k combinatorics,coding systems, storage mapping functions .c 4.9 5.30
2854 | multiprocessing compactifying garbage collection corrigendum | steele, g. l. jr.
2855 | efficient list moving algorithm constant workspace | efficient algorithm presented moving arbitrary list structure storage program variable required hold original list copy original list destroyed moved mark bit pointer copy distinguishable pointer original algorithm superior execution speed previous algorithm problem variation extension algorithm discussed | clark, d. w. .k list moving, list copying, lisp, space complexity, constant workspace .c 4.34 4.49 5.25
2856 | synthetic approach decision table conversion | previous approach problem converting decision table computer program based decomposition stage condition selected testing smaller problem decision table condition created optimal program respect average execution time storage space located implicit enumeration decision tree technique branch bound approach paper dynamic programming synthesize optimal decision tree program created approach efficiency creating optimal program increased substantially permitting generation optimal program decision table ten twelve condition | schumacher, h. sevcik, k. c. .k decision tables, decision trees, dynamic programming, optimal programs .c 3.50 4.12 5.30 8.3
2857 | referencing list edge | edge reference list structure pair pointer adjacent node reference requires additional space yield efficient algorithm instance circular link end list redundant list referenced edge list traversal easier link null edge reference allow threading nonrecursive list replace header cell enhance famous exclusive trick double link list | wise, d. s. .k list processing, circular, doubly linked, overlapping sublist, header cell, pointer, cursor .c 3.73 4.10 4.22
2858 | process determination address variable length addressing | algorithm presented assignment instruction address format condition length instruction varies function distance instruction target exists optimality criterion implies preferential choice subject addressing constraint achieving smallest number long instruction case total code length minimized minimizing assigned address point program algorithm suitable arbitrary program structure choice optimization criterion | frieder, g. saal, h. j. .k variable length addressing, assembler, paging .c 4.11 4.12
2859 | interference multiprocessor computer system interleaved memory | paper analyzes memory interference caused processor simultaneously memory module exect result computed simple model system limiting derived relative degree memory interference system size increase model limiting behavior system yield approximate result simple model suggests result valid larger class model including nearly real system simple model tested measurement program behavior simulation system memory reference real program model result provide good indication performance expected real system type | baskett, f. smith, a. j. .k memory, memory interference, multiprocessing, interleaved memory, trace driven simulation .c 4.32 6.21 6.34 8.1
2860 | practitioner guide addressing algorithm | paper consolidates number popular rule thumb suggested design record addressing algorithm discus applicability rule large commercial database guideline selecting identifier transformation overflow technique loading factor bucket size loading order considered attention focused reasonableness common heuristic determining primary secondary bucket size mathematical model explicitly considers storage device characteristic time space cost tradeoff analyze effect design parameter system cost specific design presented solved | severance, d. duhne, r. .k data management, file retrieval, searching, addressing techniques, hashing functions, synonym resolution,  loading factor, bucket size, heuristic design, rules of thumb .c 3.50 3.72 3.74 4.33 4.34 4.41 8.1
2861 | production employment ph computer science | taulbee, o. e. conte, s. d.
2862 | analysis pff replacement algorithm semi markov model | analytical model presented estimate performance page fault frequency pff replacement algorithm model program behavior represented lru stack distance model pff replacement algorithm represented semi markov model model parameter inter page fault interval distribution probability number distinct page referenced inter page fault interval able analytically determined model evaluate parameter value permit study performance replacement algorithm simulating page fault event page reference event significantly reduces required computation time estimating performance pff algorithm | chu, w. w. opderbeck, h. .k pff replacement algorithm, semi-markov model, simulation of replacement algorithm .c 4.31 4.32
2863 | vmin optimal variable space page replacement algorithm | criterion comparing variable space page replacement algorithm presented optimum page replacement algorithm called vmin shown optimum respect criterion result simulating vmin denning working set page partitioning replacement algorithm virtual memory program presented demonstrate improvement known realizable variable space algorithm | prieve, b. g. fabry, r. s. .k demand paging, performance measurement, multilevel memory systems, virtual memory, working set,  page replacement algorithms, optimal page replacement .c 4.30 4.32
2864 | characteristic program locality | term locality denote subset program segment referenced phase execution program behavior characterized term residence locality size lifetime transition locality paper concept locality made explicit formal definition constitutes phase localized reference behavior mechanism detection locality actual reference string definition existence hierarchy locality time reasonableness definition supported example actual program empirical data sample production algol program display distribution locality size lifetime result discussed term implication modeling program behavior memory management virtual memory system | madison, a. w. batson, a. p. .k program behavior, memory management, locality .c 4.22 4.35 4.6 4.9 6.21
2865 | verifying property parallel program axiomatic approach | axiomatic method proving number property parallel program presented hoare set axiom partial correctness strong case paper defines powerful deductive system sense complete partial correctness crucial axiom auxiliary variable added parallel program aid proving correct information partial correctness proof prove property mutual exclusion freedom deadlock program termination technique verifying property presented illustrated application dining philosopher problem | owicki, s. gries, d. .k structured multiprogramming correctness proofs, program verification, concurrent processes, synchronization,  mutual exclusion, deadlock .c 4.32 4.35 5.21 5.24
2866 | proving monitor | interesting scheduling sequential property monitor proved state variable record monitor history defining extended proof rule wait signal operation technique defined discussed applied example prove property freedom indefinitely repeated overtaking unnecessary waiting upper bound queue length historical behavior | howard, j.h. .k monitors, correctness, proof rules, historical variables, concurrency, scheduling, bounded buffer,  semaphores, alarm clock, disk head .c 4.32 4.35 5.24
2867 | modularization hierarchy family operating system | paper describes design philosophy construction family operating system shown concept module level coincide hierarchy function family member share software result implementation run time module lowest system level | habermann,a. n. flon, l. cooprider, l. .k incremental machine design, module, data type, address space, virtual memory .c 4.0 4.30 4.35
2868 | reflection operating system design | main feature general purpose multiaccess operating system developed cdc berkeley presented good bad point discussed retrospect distinctive feature design capability protection organization system sequence layer building facility provided earlier protecting malfunction later problem maintaining protection layer level added memory hierarchy problem discussed solution | lampson, b. w. sturgis, h. e. .k operating system, protection, capabilities, layering domains, memory hierarchy, faults .c 4.35
2869 | security kernel validation practice | security kernel software hardware mechanism enforces access control computer system correctness security kernel pdp proved paper describes technique carry step proof validating formal specification program respect axiom secure system | millen, j. k. .k validation, verification, correctness, security kernel, formal specification, protection .c 4.35 4.6 5.24
2870 | lattice model secure information flow | paper investigates mechanism guarantee secure information flow computer system mechanism examined mathematical framework suitable formulating requirement secure information flow security class central component model lattice structure derived security class justified semantics information flow lattice property permit concise formulation security requirement existing system facilitate construction mechanism enforce security model unifying view system restrict information flow enables classification according security objective suggests approach lead construction automatic program certification mechanism verifying secure flow information program | denning, d. e. .k protection, security, information flow, security class, lattice, program certification .c 4.35
2871 | logical analysis program | present system verification computer program incomplete intermediate inductive assertion provided manually user termination proven incorrect program treated unified solution problem paper suggests conducting logical analysis program invariant express actually occurring program part paper devoted technique automatic generation invariant part criterion invariant check simultaneously correctness including termination incorrectness part examines implication approach automatic diagnosis correction logical error | katz, s. manna, z. .k logical analysis, invariants, program verification, correctness, incorrectness, termination, automatic  debugging .c 3.66 4.42 5.24
2872 | counterintuitive computer paging corrigendum | fagin, r.
2873 | lg language analytic geometry | conversational programming language analytic geometry aspect implementation language flexible definition geometric object element computes parameter display result capability geometric figure collection parameter displaying locus parameter characteristic consists possibility language design user oriented language lg specifically designed nonprogrammers easy learn close natural language geometry | raymond, j. .k interactive programming, problem oriented languages, computer graphics, interpreters, analytic  geometry .c 3.20 4.13 4.22 4.9
2874 | comparative evaluation version basic | inception basic language grown term usage scope usage feature article compare ten version basic earlier version proposed standard minimal basic comparison arranged feature version computational comparison computation time processing cost | lientz, b. p. .k basic, interpretive language summary .c 4.20 4.6
2875 | development international system legal protection computer program | smoot, o. r. .k copyright of software, patenting of software, legal protection of software .c 2.3 4.5
2876 | intentional resolution privacy protection database system | traditionally privacy protection database system understood control information user database paper concerned independent dimension privacy protection control user allowed piece information supplied database ability condition supply information intended called intentional resolution privacy protection practical importance intentional resolution demonstrated example realization discussed shown intentional resolution achieved involves radical change traditional approach process user database interaction appears database impose amount control internal behavior user program interact model user database interaction admits control developed | minsky, n. .k protection in database, protection in programming languages, privacy, security, intentional resolution  of privacy, interaction with databases .c 3.50 3.70 4.20 4.30
2877 | program data flow analysis procedure | global data relationship program exposed codified static analysis method paper procedure determines definition possibly reach node control flow graph program definition live edge graph procedure interval ordered edge listing data structure handle reducible irreducible graph indistinguishably | allen, j. e. cocke, j. .k program optimization, data flow analysis, flow graphs, algorithms, compilers .c 4.12 5.24
2878 | joining policy multipriority multiclass batch computer system | consider multipriority batch computer system user class join toll service waiting charge system formulated semi markov decision process aim arriving user minimize expected loss optimal joining policy arriving user join system queue control limit policy single control number queue user class newly arriving user join queue filled control number queue user class paper control number lower upper bound control number capacity system queue derived | babad, j. m. modiano, m. m. .k priority queues, semi-markov process, price scheduling, operating system .c 4.39 8.3
2879 | computer science empirical inquiry symbol search | newell, a. simon, h. a. .k symbols, search, science, computer science, empirical, turing, artificial intelligence, intelligence,  list processing, cognition, heuristics, problem solving .c 1.0 2.1 3.3 3.6 5.7
2880 | fast division technique constant divisor | fast algorithm division constant divisor presented method proved implemented microcode ona binary machine adapted directly hardware mathematical foundation algorithm presented performance measure | artzy, e. hinds, j. a. saal, h. j. .k constant divisors, division algorithms, bit addressable memory, microprogram .c 4.13 4.49 6.32
2881 | counterintuitive computer paging | counterexample exhibited natural conjecture concerning optimal group record page independent reference model computer paging organization optimal recently miss ratio minimized | fagin, r. .k least recently used, most likely together, independent reference model, storage organization, record  allocation .c 3.70 3.73 4.0 5.30
2882 | stochastic evaluation model database organization data retrieval system | experimental work valuation large scale data retrieval system scarce due difficulty prohibitive cost paper discus simulation model data retrieval system effect significantly reducing cost experimentation enabling research attempted model designed estimate retrieval workload alternative data retrieval system data retrieval system organized database organization including inverted list threaded list cellular list organization hybrid combination system effectiveness methodology demonstrated model study effect database organization data retrieval system impact query complexity analyzed | siler, k. f. .k database architecture, database performance and evaluation, invented list, threaded list, cellular  list, information retrieval, database organizations, query complexity, stochastic model, monte carlo  simulation .c 3.70 3.71 3.72 3.73 3.74 3.79
2883 | application heuristic search method edge contour detection | paper present method detecting edge contour noisy picture property edge embedded figure merit edge detection problem problem minimizing figure merit problem represented shortest path problem graph solved known graph search algorithm relation representation minimization problem dynamic programming approach discussed showing graph search method lead substantial improvement computing time heuristic search method computing time depend amount noise picture experimental result show information shape contour object embedded figure merit allowing extraction contour noisy picture separation touching object | martelli, a. .k picture processing, pattern recognition, edge detection, contour detection, contour following,  optimization problems, dynamic programming, shortest path, heuristic search methods, problem solving  methods .c 3.63 3.64 3.66 5.42
2884 | permutation enumeration permutation algorithm | classical permutation enumeration algorithm encounter special case requiring additional computation nth permutation generating permutation mark algorithm attribute special case occur permutation algorithm produce permutation single exchange mark algorithm infrequently exchange mark rule generating permutation simple performance test counted execution assignment statement comparison arithmetic operation subscripted array reference shown superiority algorithm compared boothroyd implementation algorithm ehrlich implementation johnson trotter algorithm | ives, f. m. .k permutations, loop-free algorithms .c 5.30
2885 | organizing sequential search heuristic | paper examines class heuristic maintaining sequential list approximately optimal order respect average time required search element assuming element searched fixed probability independent previous search performed move front transposition heuristic shown optimal constant factor transposition rule shown efficient empirical evidence suggests transposition fact optimal distribution search probability | rivest, r. .k searching, self-organizing, list-processing, heuristics .c 3.74 5.25
2886 | semantic evaluation left | paper describes attribute grammar definition programming language compiler formal definition attribute grammar discussion important aspect included paper concentrate evaluation semantic attribute pass left derivation tree program condition attribute grammar assures semantics program evaluated single pas derivation tree algorithm discussed decides pass left general attribute grammar notion explained term grammar describes scope rule algol practical question relative efficiency evaluation scheme ease adapting attribute grammar programming language left evaluation scheme discussed | bochmann, g. v. .k attribute grammars, semantics of programming languages, semantic attributes, left-to-right parsing,  multipass compilers, semantic evaluation, semantic conditions .c 4.10 4.20 5.23 5.24
2887 | study error error proneness error diagnosis cobol | paper data cobol error frequency correction error student oriented compiler improvement teaching programming language cobol studied economic importance widespread usage error including design lack research type error identified pilot study error type found error classified run cobol student error density high percent type contained percent total frequency implies high potential effectiveness software based correction cobol surprisingly high frequency error error prone implies minimal error inducing design percent cobol misspelling classifiable error category previous researcher implies cobol misspelling correctable existent algorithm reserved word usage error prone implies minimal interference usage reserved word percent error diagnosis found inaccurate feedback optimal user learning user cobol | litecky, c. r. davis, g. b. .k errors in programming, error correction, cobol, programming language errors, error analysis, diagnostics,  error-proneness, error frequency, spelling errors, syntactic errors, learning of programming, teaching  of programming .c 4.22 4.2 4.6
2888 | information reference coding | item business system identified reference code later data code key data processing system business system large collection integrated database vital assign code methodical control future extension maintaining correct program action principle methodical coding discussed logical connection data item reflected reference code framework shown set theoretic information model | florentin, j. j. .k data, file, reference code, systems analysis, information modeling, database .c 3.50
2889 | performance height balanced tree | paper present result simulation investigate performance height balanced hb tree shown statistic hb tree avl tree function size tree time search item tree sufficiently large tree execution time procedure maintaining hb tree independent size tree average restructures required insertion average node revisited restore hb property average restructures required deletion average node revisited restore hb property execution time procedure maintaining hb tree independent size tree average number node revisited delete operation order restore hb property trace back cost maintaining hb tree drop sharply allowable imbalance increase analytical experimental result show cost maintaining hb tree function discussed | karlton, p. l. fuller, s. h. scroggs, r. e. kaehler, e. b. .k hb[k] trees, balanced trees, avl trees, information storage and retrieval, searching .c 3.7 3.72 3.74 4.49 5.39
2890 | quadratic adaptive routing algorithm | analytic model store forward communication network constructed find optimal message routing illustrate equilibrium stationary state maintained adaptive routing algorithm model show adaptive routing satisfy condition optimal routing adaptive routing tends overuse direct path underuse alternate route consider impact routing decision future state network form optimality condition suggests modification adaptive algorithm result optimality modification requires substitution quadratic bias term linear routing table maintained network node simulation result presented confirm theoretical analysis simple network | agnew, c. e. .k routing algorithms, adaptive routing, quadratic routing, alternate routing, store-and-forward network,  distributed network, computer network, message switching .c 3.81 8.0 8.1 8.3
2891 | anomaly disk scheduling comparison fcfs sstf seek scheduling empirical model disk access | model disk access based published measurement developed model show highly probable condition fcfs seek scheduling superior sstf scheduling sense lower mean queue length simple arrival sequence illustration anomaly presented | wilhelm, n. c. .k disks, disk scheduling, seek scheduling .c 3.72 4.35 4.41 4.6 6.35
2892 | study line overhead arpanet | form extent effect communication line overhead arpanet considered source head separated level protocol hierarchy characteristic level summarized line efficiency model system studied measurement line efficiency arpanet presented extrapolation measurement anticipate overhead heavily loaded network similar result derived recently proposed network protocol compared system | kleinrock, l. naylor, w. e. opderbeck, h. .k arpanet, computer communication networks, interprocess communication, measurement, packet switching,  performance evaluation and efficiency, resource sharing .c 3.81 4.39 4.6 4.9
2893 | computer innovation american local government | computer electronic data processing major technological innovation operation american local government paper establishes substantial variation larger local government rate adopt computer technology level financial support provide edp extensiveness sophistication automated application central question addressed explain difference government extent adopt computer hypothesis tested stream explanatory factor data city county government finding identify local government milieu conducive higher level computer innovation unexpected finding reveal significant impact distribution control edp decision dominant political value government important factor include measured need computer application presence external funding support computing finally paper suggests framework identifying key determinant technological innovation | danziger, j. n. dutton, w. h. .k innovation, technological innovation, computer utilization, computer adoption, american local government,  city government computers, county government computers. .c 2.0 2.45 2.49 2.9
2894 | methodology interactive computer service measurement | measurement methodology applicable teractive computer service primary purpose enable external user oriented assessment computer performance frequently ternal system measurement technique nb network measurement system employed external measurement tool data collected analyzed demonstration methodology leading pragmatic figure merit evaluation result included | adrams, m. d. .k in teractive system, computer service, measurement, performance, external measurement, methodology,  measurement model,network measurement system, measures, figure-of-merit. .c 2.4 4.6 6.2
2895 | language formal problem specification | language tended behavior communicating parallel process specification constrain t order event computation occur language write specification reader writer problem writer priority reader writer problem | greif, i. .k formal specifications,program correctness, parallel processing, synchronization, readers/writers  problem .c 4.22 4.32 5.24
2896 | exercise proving parallel program correct | parallel program dijkstra fly garbage collector proved correct proof method developed owicki fine degree terleaving program make especially difficult understand complicates proof greatly difficulty proving parallel program correct discussed | gries, d. .k garbage collection, multiprocessing, program correctness for multiprocessing tasks .c 4.32 4.34 4.35 4.39 5.24
2897 | case study code generation technique compiler | recent development optimizing technique allowed design compiler emerge compiler translates parsed source code lower level code sequence step step expands higher level statement block lower level code performs optimization result statement expansion task tailoring code take advantage special case optimization paper evidence strategy result good object code traditionally difficult pl concatenate statement investigated detailed set fairly simple optimization identified allow compiler produce good code elaborate optimization improve object code context concatenate statement code produced compiler expansion optimization strategy compare favorably code produced conventional pl optimizing compiler | carter, j. l. .k compiler structure, optimizing compiler, code generation, pl/i compiler, concatenation, program  optimization, optimization techniques, data flow analysis .c 4.12 4.13 4.22
2898 | conceptual framework nonprocedural programming language | sequential programming language force programmer prescribe explicitly order operation program executed order relevant solution problem requirement irrelevant sequencing removed language facility task nonprocedural manner general program allow concurrent evaluation paper describes conceptual framework high level programming language providing nonprocedural sequential facility program nonprocedural sequential program module nested freely | kessels, j. l. w. .k parallel programming, descriptive programming, nonprocedural programming, definitional language,  data flow programming, applicative programming .c 4.20
2899 | survey computer science offering small liberal art college | recent curricular development computer science student terest pursuing topic computer science usual programming course encouraged small liberal art college expand offering paper summarizes result survey determine type computer science program offered college result half college computer science program offer programming course | lopez, a. a. raymond, r. tardiff, r. .k computer science, education, curricula, small colleges .c 1.5
2900 | theorem aid solving allocation problem | allocation problem problem finding optimal set network site locate copy known general polynomial complete heuristic aid finding optimal optimal solution needed paper present theorem applied priori site included optimal allocation | grapa, e. belford, g. g. .k file allocation, computer networks, distributed data management .c 4.33
2901 | encoding method multifield sorting indexing | sequence character string order relation imposed sequence considered encoding scheme produce single order preserving string sequence string original sequence recovered encoded string sequence string precedes encoding precedes encoding string variable length maximum length restriction symbol need reserved control purpose symbol occur string scheme multifield sorting multifield indexing application ordering field important | blasgen, m. w. casey, r. g. eswaran, k. p. .k sorting multifield indexes, lexicographic order, searching, encoding .c 3.74 4.19 4.33 4.40 5.31
2902 | dynamic memory allocation computer simulation | paper investigates performance dynamic memory allocation algorithm service simulation program represented test case algorithm performance measured term processing time memory usage external memory fragmentation algorithm main taining separate free space list size memory block tended perform compared algorithm simple algorithm operating memory ordered list free list performed surprisingly algorithm employing power block size favorable processing requirement generally unfavorable memory usage algorithm employing lifo fifo memory ordered free list generally performed poorly compared | nielsen, n. r. .k algorithm performance,dynamic memory allocation, dynamic memory management, dynamic storage allocation,  garbage collection, list processing, memory allocation, memory management, programming techniques, simulation,  simulation memory management, simulation techniques, space allocation, storage allocation .c 3.74 4.49 5.25 8.1
2903 | improving program introduction recursion | technique program transformation called recursion troduction applied algorithm solve pattern matching problem recursion troduction algorithm manipulate stack translated recursive algorithm stack operation occur algorithm subjected transformation method recursion elimination called tabulation produce program efficient running time shown fast linear pattern matching algorithm knuth morris pratt derived step simple nonlinear stack algorithm | bird, r. s. .k program transformation, optimization of programs, recursion elimination, pattern matching algorithms,  stacks, computational induction .c 4.0 4.2 5.20 5.24 5.25
2904 | algorithm reduction operator strength | simple algorithm indexed temporary table perform reduction operator strength strongly connected region presented extension including linear function test replacement discussed algorithm fit integrated package local optimization algorithm | cocke, j. .k compilers, optimization of compiled code, program analysis, operator strength reduction, test replacement,  strongly connected region .c 4.12 5.24 5.32
2905 | perfect hashing function single probe retrieving method static set | refinement hashing retrieval item static table single probe considered set identifier method presented building mechanical perfect hashing function function transforming element unique address method quotient reduction method shown complete sense set smallest table element stored retrieved perfect hashing function constructed method found nonuniformly distributed set method give sparse table method remainder reduction method complete sense give minimal minimal table kind set technique applicable directly small set method extend result larger set presented rough comparison ordinary hashing show method conveniently practical application | sprugnoli, r. .k hashing, hashing methods, hash coding, direct addressing, identifier-to-address transformations,  perfect hashing functions, perfect hash coding, reduction, scatter storage .c 3.7 3.74 4.34
2906 | high level programming language data processing application | application development today labor tensive recent year high level language increasingly explored solution problem business definition language bdl language aimed business data processing problem concept bdl mimic evolved year business method result sublanguages component defining business form describing business organization writing calculation | hammer, m. owe, w. g. kruskal, v. j. wladawsky, i. .k very high level language, nonprocedural language, data flow language, business application, business  data processing, structured programming, modular programming, format specification, and design methodology .c 3.50 4.22 4.32
2907 | optimal approach recursive program | classical fixed poin approach recursive program suggests choosing defined fixed poin solution recursive program approach troduction optimal fixed point contrast defined fixed poin embodies maximal amount valuable information embedded program practical implication approach discussed technique proving property optimal fixed poin presentation informal emphasis example | manna, z. shamir, a. .k recursive programs, fixed poin ts, least fixedpoints, optimal fixed poin ts, proof techniques .c 5.24
2908 | note reflection free permutation enumeration | roy, m. k. .k permutations, reflection-free generation .c 5.30
2909 | unnecessary diversity notation syntactic definition | wirth, n. .k syntactic description language, extended bnf .c 4.20
2910 | equivalence hough curve detection template matching | stockman, g. c. .k picture processing, pattern recognition, curve detection, hough transformation, template matching .c 3.63 6.9
2911 | anomalous behavior fifty percent rule dynamic memory allocation | paper report simulation data showing dynamic memory allocation average free allocated block ratio differ considerably direction prediction percent rule derivation shown previous derivation make assumption violated frequently basis simulation data derivation hypothesized anomalous behavior result combined effect systematic placement statistic release process additional simulation support hypothesis systematic placement refers natural convention allocating storage request end free block selected allocation strategy tends order block contiguous group according allocation time degree anomalous behavior depends extent allocated block released order allocation non markovian release process extent correlation allocation order release order varies approximately inversely coefficient variation memory residence time distribution simulation show allocation efficiency depends strongly residence time distribution efficiency decrease distribution coefficient variation increase practical implication briefly discussed | shore, j. e. .k dynamic memory allocation, storage fragmentation, fifty-percent rule, first-fit, simulation .c 3.73 4.32 4.34 4.35
2912 | concurrent reading writing | problem sharing data asynchronous process considered assumed process time modify data concurrent reading writing permitted general theorem proved algorithm presented illustrate include solution general problem read repeated obtained incorrect result technique transmitting message process solution assume synchronizing mechanism data written process read process | lamport, l. .k asynchronous multiprocessing, multiprocess synchronization, readers/writers problem, shared data .c 4.32 5.24
2913 | aliasing problem computer generated shaded image | defect jagged edge disappearing detail long annoyance digitally generated shaded image increasing resolution defocusing display attenuate understanding defect lead effective method paper explains observed defect term aliasing phenomenon inherent sampled signal discus prefiltering recognized cure method evaluating filter presented application prefiltering hidden surface algorithm discussed implementation filtering tiler shown accompanied example effectiveness | crow, f. c. .k aliasing, computer graphics, convolutional filtering, hidden-surface removal, sampling .c 8.2
2914 | lru stack depth distribution simulation paging behavior | family probability distribution needed virtual memory simulation model headway page fault distribution working set size distribution member family derived lru stack depth distribution simple expression computation kind distribution finally example family distribution computed published stack depth distribution | turner, r. strecker, b. .k virtual memory, paging, lru stack, working set, headway between page faults, computer system simulation .c 4.35 4.6 8.1
2915 | consideration future programming language standard activity | paper review state programming language standard activity respect anomaly exist published proposed standard fortran cobol pl basic proposal made inclusion formalism future standard extension standard include additional item error condition documentation | lee, j. a. n. .k programming languages, standards, formalisms, formal descriptions, fortran, cobol, pl/i, basic,  vienna definition language (vdl) .c 2.4 4.2 4.29 4.6 5.23
2916 | fast string searching algorithm | algorithm presented search location occurrence character string pat string string search operation character pat matched starting character pat information gained starting match end pattern algorithm proceed large jump text searched algorithm unusual property case character string inspected number character actually inspected average decrease function length pat random english pattern length algorithm typically inspect character string finding match algorithm implemented average fewer patlen machine instruction executed conclusion supported empirical evidence theoretical analysis average behavior algorithm worst case behavior algorithm linear patlen assuming availability array space table linear patlen size alphabet | boyer, r. s. .k bibliographic search, computational complexity, information retrieval, linear time bound, pattern  matching, text editing .c 3.74 4.40 5.25
2917 | sitar interactive text processing system small computer corrigendum | schneider, b. r. jr. watts, r. m.
2918 | multiprocessor memory organization memory interference | structure shared memory multiprocessor computer system examined attention nonin terleaved memory alternative memory organization compared shown home memory organization processor memory address space concentrated effective reducing memory terference home memory organization shown suited specialized computation problem posse advantage term terference reliability general purpose computation result terleaved memory drawn previous work comparison trace driven simulation verify conclusion analysis | smith, a. j. .k memory in terference, interleaving, multiprocessing, trace-driven simulation, queueing theory, shared  memory .c 4.30 4.32 6.34
2919 | programmer workbench machine software development | software development project assumption made program development function machine eventual system run production machine unavailable programming environment totally inadequate alternative considered paper suggested situation advantageous separate program development main tenance function specialized computer dedicated purpose computer called programmer workbench basic section paper troduce subject outline general concept discus area approach prove beneficial describe operational system utilizing concept | ivie, e. l. .k computer configurations, computer networks, software development, software engineering, software  main tenance, unix .c 3.2 3.5 3.7 3.8 4.0
2920 | game interpretation deadlock avoidance problem | deadlock avoidance problem defined informally determination priori information process resource operating system safe situation realized endangering smooth running system process specifies future need flowchart need defined step global approach phenomenon terpretation game operating system process formalization risk safety concept bipartite graph representation game construct explicitly set safe state study property | devillers, r. .k operating system, multiprogramming, time-sharing, resource allocation, deadlock, in terlock, deadly  embrace, deadlock avoidance, flowchart .c 4.30 4.32
2921 | regular part grammar parser | paper troduces alternative context free grammar called regular part rrp grammar resemble pascal syntax diagram formally rrp grammar production part nondeterministic finite state machine fsms special case regular expression converted fsms rrp grammar describe syntax programming language concisely understandably cf grammar troduced class parser rrp lr parser includes cf lr parser advantage informally rrp lr parser determine end handle considering symbol handle left end end found considering symbol left handle mechanism determining left end required bound length handle | lalonde, w. r. .k finite state machines (automata), regular expressions, syntax diagrams,lr(k) grammars, parser construction,  parsing, programming languages, language generation, formal definition, compilers, translators, scanners .c 4.2 5.21 5.23
2922 | level control structure nondeterministic programming | basic idea nondeterministic programming critically reconsidered single proper attitude programming style language allowing direct control nondeterministic feature proposed attitude aim retaining purity nondeterministic formulation search process level attempt level deferring coordination problem solving effort choice level feasibility recognizing level discussed stressing structure managed choice level free context leaf computational environment holding alternative inspection node choice poin t according proposed programming style generative function choice poin express desired choice strategy main advantage approach localization search strategy nonterminal node tree keep track state computation choice poin interrogated holding time strategy coordinate alternative example term nd lisp extension lisp designed implemented according guideline | montangero, c. pacini, g. turini, f. .k nondeterministic programming, artificial in telligence, control structures, backtracking, search  strategy planning, context tree .c 3.64 4.22
2923 | high level data flow analysis | contrast predominant low level termediate text high level data flow analysis deal program essentially source level exploit control flow information implicit parse tree need high level flow analysis arises aspect recent work advanced method program certification optimization paper proposes simple general method high level data flow analysis free escape jump statement avoids large graph compiling large program facilitates updating data flow information reflect program derives global information helpful solving familiar global flow analysis problem illustrative application live variable analysis presented graph involved constructed analyzed program compiled avoiding cost low level method incur repeatedly compile time | rosen, b. k. .k data flow analysis, high-level language, control flow graph, structured programming, escapes, exits,  jumps, goto statements .c 5.24 4.12 4.22
2924 | interactive computer graphic approach surface representation | teractive computer graphic method developed rapid generation arbitrary shaped dimensional surface method synthesis spline theory algorithm teractive mean man machine communication software static dynamic graphic display basic technique employed modified lofting method sectional curve represented uniform spline surface terpolated section cardinal spline feature method algorithm enable teractive modification spline representation sectional curve stage process spatial information graphically displayed user complex surface created combination number shape separately generated joined system successfully terfaced variety analytical routine structural medical graphical application | wu, sheng-chuan abel, j. f. greenberg, d. p. .k computer graphics, three-dimensional surface representation, splines, lofting,finite element input  methods .c 3.20 3.23 3.34 8.1 8.2
2925 | optimal surface reconstruction planar contour | scientific technical endeavor dimensional solid reconstructed serial section aid comprehension object structure facilitate automatic manipulation analysis paper present general solution problem constructing surface set cross sectional contour surface composed triangular tile constructed separately determining optimal surface pair consecutive contour determining surface reduced problem finding minimum cost cycle directed toroidal graph fast algorithm finding cycle utilized developed closed form expression term number contour poin t upper bound number operation required execute algorithm illustrated involves construction minimum area surface describing human head included | fuchs, h. kedem,z. m. uselton, s. p. .k surface reconstruction, contour data, serial sections, three-dimensional computer graphics, minimum  cost paths, continuous tone displays .c 5.25 5.32 8.2
2926 | pagination tree variable length record | strategy presented pagination tree variable length record record length uniformly distributed wide distribution record length exists strategy result shallow tree fast access time performance strategy application presented compared strategy analyzed | mccreight, e. m. .k b-tree, index, database, tree storage structure, searching .c 3.73 4.33 4.34
2927 | upper bound generation prime number | integer computational complexity finding prime modified sieve eratosthenes doubly linked list yield algorithm arithmetic complexity upper bound shown equivalent theoretical lower bound sieve method preprocessing preprocessing technique involving space time additive multiplicative tradeoff reduces upper bound log logn bit complexity logn log log logn storage requirement logn log logn bit | mairson, h. g. .k computational complexity, sieve, prime number generation, number theory, linked list, preprocessing,  balancing .c 5.25 5.39
2928 | hardware estimation process primary memory requirement | minor hardware extension honeywell processor demonstrated allow primary memory requirement process multics approximated additional hardware required estimate computed consists program accessible register miss rate associative memory page table word primary memory requirement estimate employed experimental version multics control level multiprogramming system bill memory usage resulting system tuning parameter display configuration insensitivity conjectured system track shift referencing characteristic workload system tune | giffor, d. k. .k primary memory requirement, virtual memory, level of multiprogramming, associative memory, working  set, resource allocation, lru stack model, referencing characteristics .c 4.32 4.35 4.6 6.36
2929 | analysis inline substitution structured programming language | optimization technique known inline substitution analyzed optimization consists replacing procedure invocation modified copy procedure body general problem inline substitution minimize execution time subject size constrain t formulated approximate algorithmic solution proposed algorithm depends run time statistic program optimized preliminary result clu structured programming language program low degree recursion percent procedure call eliminated increase size compiled code small saving execution time conclusion based result presented | scheifler, r. w. .k inline substitution, open coding, open compilation, program optimization, compilers, structured  programming languages, run-time statistics .c 4.12
2930 | gre advanced test computer science | report describes advanced test computer science recently troduced graduate record examination program gre program general event leading establishment advanced computer science test discussed content specification rationale set sample question included | austing, r. h. .k education, computer science, graduate school admissions, test development examinations .c 1.5
2931 | logic programming language | logic long terested answer question computable principle outcome put bound possibility formalization recently precise comparison efficiency decision method development complexity theory application logic big question method logic significance direction applied part computability theory programming language offer obvious opportunity syntactic formalization advanced semantical theory complete example give wide ranging mathematical answer query machine computable process machine simulate process program naturally enter giving description process definition precise meaning program requires explain object computation static problem transformed dynamic theory automaton net teresting dynamic formalized portion field concentration finite state algebraic aspect understanding higher level program feature involves infinite object force pas level explanation conceptual idea final simulation real machine level made mathematically exact find abstraction represent structure experience independent worker method data type lattice partial ordering information content ordering continuous mapping demonstrated flexibility approach providing definition proof clean undue dependence implementation remains showing abstract conceptualization actualized say unified theory | scott, d. s. .k logic, programming languages, automata, denotational semantics, a-calculus models, computability,  partial functions, approximation, function spaces .c 1.2 4.20 5.21 5.24 5.27
2932 | complexity computation | framework research theory complexity computation emphasizing terrelation seemingly diverse problem method illustrative example practical theoretical significance direction research discussed | rabin, m. o. .k complexity of computations, algebraic complexity, in tractable problems, probabilistic algorithms .c 5.25
2933 | advantage keyword notation parameter communication subprogram | francez, n. .k keyword notation, positional notation, parameters, transmission, subprograms, readability, call  by value, call by reference, call by name, compile-time errors .c 4.2 4.20 4.22
2934 | comment computing shortest path graph | lawler, e. l. .k graph, network, shortest path, algorithm, ranking .c 5.32
2935 | production employment ph computer science corrigendum | taulbee, o. e. conte, s. d.
2936 | efficient data structure simulation event set | recently algorithm presented realization event scheduling routine suitable general purpose discrete event simulation system exhibited performance superior commonly simple linked list algorithm paper event scheduling algorithm presented improves aspect previously published algorithm algorithm performance insensitive skewed distribution worst case complexity number event set test conducted estimate average complexity showed nearly independent | franta, w. r. maly, k. .k simulation, time flow mechanisms, event scanning mechanisms, multilinked lists .c 3.34 4.22 5.5 8.1
2937 | experimental evaluation data type convention | language program written substantial effect reliability resulting program paper discus experiment compare programming reliability subject statically typed language typeless language analysis number error number run error show environment statically typed language increase programming reliability detailed analysis error made subject programming solution reasonably small problem show subject difficulty manipulating representation data | gannon, j. d. .k data types, experimentation, language design, redundancy, reliable software .c 4.22
2938 | discipline real time programming | programming divided major category increasing complexity reasoning program validation sequential programming multiprogramming real time programming adhering strict programming discipline suitable high level language molded discipline complexity reasoning concurrency execution time constrain t drastically reduced practical make real time system analytically verifiable ultimately reliable discipline outlined expressed term language modula | wirth, n. .k multiprogramming, real-time programming, process synchronization, processor sharing, program validation,  modula .c 3.80 4.22
2939 | abstraction mechanism clu | clu programming language designed support abstraction program construction work programming methodology led realization kind abstraction procedural control especially data abstraction programming process procedural abstraction supported conventional language procedure subroutine clu addition procedure linguistic mechanism support data control abstraction paper troduction abstraction mechanism clu mean programming example utility kind abstraction program construction illustrated shown clu program written implement abstraction clu library permit incremental program development complete type checking performed compile time discussed | liskov, b. snyder, a. atkinson, r. schaffert, c. .k programming languages, data types, data abstractions, control abstractions, programming methodology,  separate compilation .c 4.0 4.12 4.20 4.22
2940 | abstraction verification alphard defining iteration generator | alphard form programmer great deal control implementation abstract data type paper abstraction technique extended simple data representation function definition iteration statement important poin interaction data control structure language mean specializing alphard loop operate abstract entity explicit dependence representation entity troduced specification verification technique allow property generator iteration expressed form proof rule developed result obtained common special case loop essentially identical construct language mean showing generator terminate provided | shaw, m. wulf, w. a. .k abstraction and representation, abstract data types, assertions, control specialization, correctness,  generators,invariants, iteration statements, modular decomposition, program specifications, programming  languages, programming methodology, proofs of correctness, types, verification .c 4.20 5.24
2941 | early experience mesa | experience mesa user primarily implementers discussed implication mesa similar programming language suggested specific topic addressed module structure defining abstraction data structuring facility mesa equivalence algorithm type type coercion benefit type system breached occasionally difficulty making treatment variant record safe | geschke, c. m. morris, j. h. jr. satterthwaite, e. h. .k programming languages, types, modules, data structures, systems programming .c 4.22
2942 | algol based implementation snobol pattern | brownlee, j. n. .k patterns snobol 4, pattern matching, string processing, pattern implementation, algorithms in pascal .c 4.29
2943 | lucid nonprocedural language iteration | lucid formal system program written proof program carried proof easy follow straightforward produce statement lucid program simply axiom proof proceeds conventional logical reasoning help axiom rule inference special lucid function programming language lucid unconventional thing order statement irrelevant assignment statement equation lucid program need look iterative program conventional structured programming language assignment conditional statement loop | ashcrof, e. a. wadge, w. w. .k program proving, formal systems, semantics, iteration, structured programming .c 5.21 5.24
2944 | shifting garbage collection overhead compile time | paper discus technique enable automatic storage reclamation overhead partially shifted compile time paper assumes transaction oriented collection scheme proposed deutsch bobrow feature summarized implementing optimization requires global flow analysis performed source program shown compile time program action affect reference count cell deduced information find action cancel code executed grouped achieve improved efficiency | barth, j. m. .k garbage collection, global flow analysis, list processing, optimization, reference counts, storage  management .c 3.80 4.12 4.20 4.34
2945 | certification program secure information flow | paper present certification mechanism verifying secure flow information program exploit property lattice structure security class procedure sufficiently simple easily included analysis phase existing compiler semantics presented proved correct important application confinement problem mechanism prove program supposedly nonconfidential result depend confidential input data | denning, d. e. denning, p. j. .k protection, security, information flow, program certification, lattice, confinement, security classes .c 4.3 4.35 5.24
2946 | alternative event queue synchronization monitor | monitor concept proposed brinch hansen hoare event synchronization paper describes synchronizing primitive nearly expressive conditional wait implemented efficiently implementation primitive term operation correctness proof example presented reader writer problem problem information stream sharing finite buffer pool | kessels, j. l. w. .k monitor, operating system, mutual exclusion, synchronization, conditional critical region, structuring  concept .c 4.31
2947 | sitar interactive text processing system small computer | sitar low cost teractive text handling text analysis system nontechnical user way comparable teractive bibliographical search retrieval system additional feature implemented pdp time sharing computer invoked crt microprogrammed editing function simple command language designating function search template consisting textual string desired string delimiting context hit delivered extensive experience sitar show combined power simple command string orientation circular structure crt local memory conversational computing produce system powerful sum part | schneider, b. r. jr. watts, r. m. .k information retrieval, text editing, minicomputers, crts,time sharing, bibliographic search and  retrieval, literary analysis, linguistic analysis, command languages .c 3.4 3.7
2948 | terminal oriented communication system | paper describes system full duplex communication time shared computer terminal system consists communication computer directly connected time shared system number small remote computer terminal attached connecting medium speed telephone line service large number terminal type system design presented algorithm solve specific problem local echoing error detection correction telephone line multiplexing character output | heckel, p. g. lampson, b. w. .k terminal system, error correction, multiplexing, local echoing, communication system, network .c 3.81 4.31
2949 | correctness proof topology information main tenance protocol distributed computer network | order node distributed computer network communicate node information network topology node link crash scheme needed update information major constrain t topology information scheme involve central controller topology information protocol implemented merit computer network presented explained protocol general implemented computer network based baran hot potato heuristic routing doctrine correctness proof topology information protocol presented | tajibnapis, w. d. .k distributed computer network, correctness proofs, computer networks, distributed control, network  topology, routing problem in networks, distributed operating system, store and forward packet switching,  store and forward message switching, traffic control .c 3.81 4.32
2950 | unifying approach scheduling | paper present scheme classifying scheduling algorithm based abstract model scheduling system formalizes notion priority class scheduling algorithm defined related existing algorithm criterion implementation efficiency algorithm developed result definition time invariant algorithm include commonly implemented time invariant algorithm dependence processing rate priority derived abstract model framework implementing flexible scheduler real operating system policy driven scheduler bernstein sharp discussed implementation | ruschitzka, m. fabry, r. s. .k scheduling algorithms, scheduling models, priority, operating systems,processor sharing, implementation  efficiency .c 4.31 4.32 4.34 4.35 8.1
2951 | dynamic response time prediction computer network | ultimate aim computing network resource sharing human component technical component networking fully investigated achieve goal research step assisting user participating vast store resource network analytical simulation statistical performance evaluation tool employed investigate feasibility dynamic response time monitor capable providing comparative response time information user wishing process computing application network computing node research clearly reveals sufficient system data obtainable diverse arpa network system studied detail describe predict response time network time sharing system depends measure system activity load level | mamrak, s. a. .k response time monitor, computer networks, time-sharing systems, comparative response time, arpa  network, anlytic modeling, simulation, benchmark jobs, system measurement .c 4.6 6.20 8.1
2952 | function realizable word parallel logical complement addition instruction | warren, h. s. jr. .k boolean functions, two's-complement, sign propagation .c 4.0 6.32
2953 | note recursion elimination | method recursion elimination applied schematic recursive procedure proc px fx gx fi procedure general form arise connection tree traversal sorting algorithm method recursion removal involves stack solution compared basis running time | bird, r. s. .k recursion elimination, optimization of programs, stacks, trees, sorting algorithms, computational  induction .c 4.0 4.2 5.20 5.24 5.25 5.31
2954 | bounded storage algorithm copying cyclic structure | algorithm presented copy cyclic list structure bounded workspace linear time unlike previous similar algorithm make assumption storage allocation system operation likely high level language distinctive feature algorithm technique traversing structure spanning tree case left left | robson j. m. .k copying, shared subtrees, cyclic structures .c 4.49 5.25
2955 | buddy system | algorithm presented implementing class buddy system dynamic storage allocation buddy system corresponds set recurrence relation relate block size provided analysis ternal fragmentation binary buddy system fibonacci buddy system weighted buddy system comparative simulation result presented ternal external total fragmentation | peterson, j. l. norman, t. a. .k dynamic storage allocation, buddy system, fragmentation, fibonacci buddy system, weighted buddy  system .c 3.89 4.32 4.39
2956 | idea data type high level language | number issue explored concerning notion data type set value set primitive operation value need notation iterating element finite set narrow notation domain array data type need simple notation allowing type parameter parameter restrictive fashion resulting problem conversion value type | gries, d. gehani, n. .k data types, generic procedures, programming languages .c 4.12 4.20 4.22
2957 | database abstraction aggregation | aggregation troduced abstraction important conceptualizing real world aggregation transforms relationship object higher level object data type called aggregation developed criterion definedness specifies aggregation abstraction relational database defined collection aggregate structured hierarchy ary relation main tain definedness update operation database preserve invariant defined relation distinct relation normal form shown notion complementary important database design top methodology database design separate decision concerning aggregate structure decision concerning key identification suggested aggregate type type support real world abstraction troducing implementation detail incorporated programming language | smith, j. m. smith, d. c. p. .k data abstraction, relational database, data type, aggregation, database design, data structure,  knowledge representation, data definition language .c 3.65 3.69 3.79 4.29 4.33 4.34
2958 | abstract data type development data structure | abstract data type play significant role development software reliable efficient flexible paper present discus application algebraic technique specification abstract data type example presented top development symbol table block structured language discussion proof correctness paper discussion problem involved constructing algebraic specification consistent complete | guttag, j. .k abstract data type, correctness proof, data type, data structure, specification, software specification .c 4.34 5.24
2959 | system business automation sba programming language | system business automation sba system application expert nonprogrammers describe execute application computer user sba view application manipulation information dimensional picture table business form report display terminal gradually automate application giving example system manually manipulates information query database language subset sba programming language | zloof, m. m. de jong, s. p. .k programming language, graphics, user in terface, data flow, forms flow, data abstraction, database,  query, data processing, business system specification, application programming .c 3.73 3.74 4.22 4.33 4.34
2960 | view data abstraction | ledgard, h. f. taylor, r. w.
2961 | experimental investigation utility detailed flowchart programming | paper describes previous research flowchart series controlled experiment test utility detailed flowchart aid program composition comprehension debugging modification statistically significant difference flowchart nonflowchart group shown calling question utility detailed flowcharting program research suggested | shneiderman, b. mayer, r. mckay, d. heller, p. .k flowcharts, program composition, program comprehension, debugging, modification, experimental testing,  human factors .c 1.5 4.0
2962 | production employment ph computer science | statistic presented production employment ph computer science calendar year data include profile graduate student faculty ph producing department breakdown degree granted specialty area significant trend noted comparison comparable data gathered calendar year made | taulbee, o. e. conte, s. d. .k computer science, production of ph.d.'s, employment, students .c 1.3 1.52 1.53 1.59
2963 | fast algorithm computing longest common subsequence | previously published algorithm finding longest common subsequence sequence length case running time algorithm problem presented running time log total number ordered pair position sequence match worst case algorithm running time log application position sequence match position sequence running time log expected | hunt, j. w. szymanski, t. g. .k longest common subsequence, efficient algorithms .c 3.73 3.63 5.25
2964 | approach optimal design storage parameter database | milman, y. .k database organization, storage parameter optimization, resident, overflow storage .c 3.73 3.74
2965 | optimal evaluation boolean expression online query system | hanani, m. z. .k query, boolean expression, information retrieval, file organization .c 3.5 3.70 3.74
2966 | choice reference poin t match searching | improvement exhaustive search method match searching previously achieved preprocessing step involving calculation distance reference poin paper discus proper choice reference poin t extends previous algorithm reference poin shown reference poin t located data cluster result computer simulation presented show large improvement achieved proper choice location multiple reference poin t | shapiro, m. .k matching, file searching, best match, nearest-neighbor classification .c 3.73 3.74
2967 | comparison hardware software associative memory context computer graphic | associative processing line drawing apld system utilizes hardware associative memory creates modifies deletes store retrieves dimensional line drawing consisting poin t line rectangle triangle apld function duplicated tx computer lincoln laboratory leap language data structure comparison hardware approach software simulation illustrates advantage hardware associative memory area processing speed storage requirement flexibility major problem area hardware associative memory technology input output cost effectiveness addressed | stillman, n. j. berra, p. b. .k associative memory, associative processor, content-addressable memory, graphics, information retrieval,  data structures, software evaluation, hardware evaluation, parallel processing, database management .c 3.71 3.72 3.73 3.74 4.34 4.6 6.22 8.2
2968 | comparison tree balancing algorithm | algorithm height balance avl extension weight balance bb wb total restructuring building balanced binary search tree compared criterion comparison encompass theoretical aspect path length implementation independent machine algorithm dependent measure run time detailed analysis code presented level believed language compiler independent quality resulting tree overhead spent building analyzed guideline efficient method insertion subsequent query operation terest pure avl tree present quality | baer, j. l. schwab, b. .k binary search trees, avl trees, weight-balanced trees, path length, analysis of algorithms, information  storage and retrieval .c 3.7 3.72 3.74 5.31
2969 | optimal program data location computer network | optimization procedure allocation program data computer network presented algorithm take account dependency program occur real heterogeneous computer network insight convert program computer gained model search procedure location problem application model | morgan, h. l. levin, k. d. .k computer networks, databases, distributed databases, optimal file location .c 3.81 3.51 4.33
2970 | achieving specific accuracy simulation output analysis | paper extends regenerative property queueing system analysis simulation output describes sequential estimation method regenerative property result obtained statistical accuracy method includes test check normality assumption sequential procedure relies paper illustrates method empty idle state regenerative state describes frequently entered state regenerative state reduces chance making costly error preliminary simulation run paper variance reduction method due page obtain accuracy considerably fewer job completion required variance reduction technique applied | fishman, g. s. .k confidence in terval, ratio estimator, regenerative property, sequential estimator, simulation,  stopping rule, variance reduction .c 5.5 8.1
2971 | sp system teaching computer programming | sp compatible subset pl language designed teaching programming feature sp language chosen encourage structured problem solving computer make language easy learn eliminate confusing redundant construct make language easy compile resulting language suitable troducing programming concept application including business data processing scientific calculation non numeric computation sp actually sequence language subset called sp sp sp subset troduces programming language construct retaining construct preceding subset subset precisely defined learned implemented subset | holt, r. c. wortman, d. b. barnard, d. t. cordy, j. r. .k programmer education, universities, community colleges, high schools, pl/i, sp/k, minicomputers,  programming language design, teaching programming, in troductory computing .c 1.5 4.2 4.12 4.13
2972 | proof technique hierarchically structured program | method describing structuring program simplifies proof correctness presented method formally represents program term level abstraction level contained nonprocedural specification proof program structured level proof paper method applicable semi automatic automatic proof preliminary result encouraging indicating method applied large program operating system | robinson, l. levitt, k. n. .k hierarchical structure, program verification, structured programming, formal specification, abstraction,  and programming methodology .c 4.0 4.29 4.9 5.24
2973 | sorting mesh connected parallel computer | algorithm presented sorting element mesh connected processor array require routing comparison step previous algorithm take time log algorithm paper shown optimal time small constant factor extension higher dimensional array | thompson, c. d. kung, h. t. .k parallel computer, parallel sorting, parallel merge, routing and comparison steps, perfect shuffle.  processor in terconnection pattern .c 4.32 5.25 5.31
2974 | comment weighted increment linear search scatter table | bandyopadhyay, s. k. .k hash address, primary clustering, index, sequence, complementary relation, search .c 3.73 3.74 4.9 4.11 4.12
2975 | remark uniform insertion structured data structure | hollander, c.r. .k data structures, directed graphs, uniform insertion .c 4.34
2976 | approximating block access database organization | yao, s. b. .k database, inverted file organization, database performance and measurement, information retrieval,  query answering .c 3.70 3.72 4.33
2977 | stage hypothesis curve contradictory evidence | paper present result study testing shaped budget curve nolan stage model computer development organization research data processing budget california county fails support shaped curve budget basis stage model result invalidate concept stage model analysis suggests alternative model budget growth separation model budgeting growth growth stage development computer resource | lucac, h. c. jr. sutton, j. a. .k budgets, stage theories, stage hypothesis .c 3.50 3.59
2978 | analysis design alternative virtual memory index | class index structure virtual memory environment design alternative class index structure analyzed alternative include choice search strategy page index structured key compressed average cost retrieving entry index expressed wieghted sum cost basic key comparison cost crossing page boundary index structure formula retrieval cost combination design alternative numerical case study compare retrieval cost alternative qualitative comparison main tenance cost insertion deletion reorganization design alternative included | maruyama, k. smith, s. e. .k index, index structure, pages, virtual memory, files, retrieval, main tenance, search strategy,  key compression .c 3.50 3.51 3.02 3.73 3.74
2979 | study machine cognition game poker | progress report presented going research effort concerning human decision making uncertainly risk human problem solving learning process hand machine learning large scale programming system programming technique terest human make deductive inductive inference form optimize heuristic rule machine reach similar result vehicle investigation game poker conceptual framework provided fairly wide range applicability model human judgment choice decision making incorporated large scale complex program represent descriptive normative theory behavior teractive game environment recently established usefulness experiment game playing enables human construct machine strategy line question answering advice taking mode | findler, n. v. .k machine learning, game playing programs, decision making under uncertain ty and risk, automatic  forming and optimizing of heuristic rules, automatic inductive and deductive inference making, models  of game learning, poker, gambling and bluffing .c 3.36 3.62 3.61 3.64 3.65 3.66
2980 | editing picture segmentation local analysis graph | major problem picture processing elimination large number spurious region result initial segmentation region growing technique region eliminated basis semantic information basis size contrast scheme presented performs elimination basis local property region adjacency graph scheme based definition graph property satisfied spurious region present editing equivalent fast graph operation number example shown | tanimoto, s. l. pavlidis, t. .k picture processing, pattern recognition, segmentation, region editing  .c 3.63
2981 | subgoal induction | proof method subgoal induction presented alternative supplement commonly inductive assertion method major virtue prove loop correctness directly input output specification invariant relation subgoal induction commonly induction rule explored shown subgoal induction viewed specialized form computation induction set sufficient condition presented guarantee input output specification strong induction step proof subgoal induction valid | morris, j. h. jr. wegbreit, b. .k program verification, proving programs correct, induction rule, computation induction, inductive  assertions, structural induction, proof rule, recursive programs, iterative programs .c 4.19 4.22 5.21 5.24
2982 | storage requirement precedence parsing | bertsch, e. .k precedence parsing, storage requirement, value table .c 4.12 5.22
2983 | comparison fit fit fit | bays, c. .k memory allocation, first-fit, best-fit, next-fit .c 4.32 4.35
2984 | cost utilization measure system performance | method presented evaluating computer system performance term cost utilization factor measure imbalance coefficient extent total system cost effectively utilized method includes technique visual representation system performance | borovits, i. ein-dor, p. .k computer system, performance evaluation, cost/utilization, system balance .c 2.44
2985 | effect chargeout user manager attitude | relationship ternal pricing system computer service chargeout system user management attitude computer based information system investigated evidence provided relationship conforms general pattern expected hypothesis stage edp growth result chargeout system characteristic advanced edp stage environment high level positive user attitude marked increase edp training user factor important user manager involvement effective control computer based system development main tenance computer based system asserted category organizational change felt need change part user manager prerequisite change taking place research method behavioral science applied investigate user manager environment effect chargeout | nolan, r. l. .k computer management, computer budget, chargeout, stage hypothesis, control .c 2.41 2.43 3.50
2986 | operation sparse relation | computation relation boolean matrix directed graph computation precedence relation context free grammar practical algorithm asymptotically faster common compute operator precedence wirth weber precedence relation step shown compute linear precedence function step shown compute linear precedence function step size grammer heart algorithm general theorem giving sufficient condition expression operand sparse relation operator composition transitive closure union inverse computed efficiently | hunt, h. b. iii szymanski, t. g. ullman, j. d. .k computational complexity, sparse relation, boolean matrix, directed graph, wirth-weber precedence  relation, linear precedence function, slr grammar, t-canonical precedence relation .c 4.12 5.23 5.25
2987 | representation sided polygon polygonal line rapid processing | representation polygon polygonal line set consecutive side collectively examined set side arranged binary tree hierarchy inclusion fast algorithm testing inclusion poin sided polygon speed algorithm discussed ideal practical example shown poin t intersection polygonal line located essentially binary tree search algorithm practical discussed representation overcomes disadvantage fixed grid method representing curve region | burton w. .k boundary line representation, cartography, computer graphics computer-searchable structures, contour  representation, geographic information processing, graphic data retrieval, in tersection of curves, line-drawing  processing, poin ts in polygons, regional boundary representation, spatial information .c 3.14 3.23 3.30 3.79 8.2
2988 | memory management response time | paper present computationally tractable methodology including accurately effect finite memory size workload memory requirement queueing network model computer system empirical analysis analytic study based applying methodology actual multiaccess teractive system reported relation workload variable memory requirement distribution job swap time performance measure response time memory utilization graphically displayed multiphase analytically soluble model proposed broadly applicable analysis teractive computer system nonpaged memory | brown, r. m. browne, j. c. chandy, k. m. .k memory management, system performance, queueing network models, in teractive computer systems .c 4.32
2989 | empirical evaluation feature instruction set processor architecture | paper present method empirical evaluation feature instruction set processor isps isp feature evaluated term time saved feature method based analysis trace program execution concept register life troduced answer question register simultaneously sufficient time time overhead number register reduced register life paper discus problem detecting desirable non existing instruction problem briefly discussed experimental result presented obtained analyzing program running dec system isp | lunde, a. .k computer architecture, program behavior, instruction sets, op code utilization, register structures,  register utilization, simultaneous register lives, instruction tracing, execution time .c 6.20 6.21 6.33
2990 | effective information retrieval term accuracy | performance information retrieval system evaluated number way published evaluation work based measuring retrieval performance average user query unfortunately formal proof difficult construct average case present study retrieval evaluation based optimizing performance specific user query concept query term accuracy troduced probability occurrence query term document relevant query relating term accuracy frequency occurrence term document collection give formal proof effectiveness respect user query number automatic indexing system successfully experimental situation inverse document frequency weighting thesaurus construction phrase generation | yu, c. t. salton, g. .k information retrieval, automatic indexing, content analysis, term accuracy, frequency weighting,  thesaurus and phrase transformations .c 3.71 3.72 3.75
2991 | improving access time random access | clustering key set decreased smoothing key address transformation adding shadow bucket open chaining key pre hashed address division remove effect sequential property key set shadow bucket key search sequence reduce effect nonuniformity loading decrease number maximum probe needed locate record combined effect technique lead improved performance secondary storage device shown empirical study | clapson, p. .k hashing, hashing techniques, hashing methods, hash coding, keys, key transformation, key-to-address  transformation, direct addressing, direct access, direct access method, randomizing, random access, file  addressing, file organizations, file structures, scatter storage, search method, collisions, synonyms,  clustering, information retrieval, open addressing, open chaining, buckets, bucket size, shadow buckets,  combinatorics .c 3.7 3.72 3.73 3.74 4.9 5.39
2992 | numbering system binary tree | knott, g. d. .k binary trees, permutations, binary search trees, ranking function .c 3.79 5.39
2993 | occurrence cycling phenomenon arising class linear programming model | investigation average queue size class queue resulted formulation linear programming problem ill conditioned case attempting solve linear programming model ibm mp package instance cycling encountered small perturbation input data resulted problem cycle fact observed phenomenon suggest primary reason cycling known occur frequently round error computation perturb problem sufficiently prevent cycling prevent indefinite cycling case maximizing minimizing objective function subject constrain set attempted mp solved giving indication infeasibility | kotiah, t. c. t. steinberg, d. i. .k linear programming, cycling, queueing models .c 5.41 5.9
2994 | linear algorithm incremental digital display circular arc | circular arc drawn incremental display device cathode ray tube digital plotter matrix prin ter sign testing elementary addition subtraction paper describes methodology producing dot step pattern closet true circle | bresenham, j. .k graphics, circle drawing, step generation, dot generation, incremental digital plotting, raster  display, integer arithmetic, circle algorithm .c 4.41 8.2
2995 | decomposability instability saturation multiprogramming system corrigendum | courtois, p. j.
2996 | transient free working set statistic | transient free average working set size transient free missing page rate finite sample reference string defined statistic content working set start recorded string unknown stationarity condition hold statistic provide unbiased estimate expected working set size missing page probability terreference distance probability pair estimator shown biased expression transient free statistic obtained term terval statistic method computation discussed usefulness depending length sample number distinct reference amount main storage computer performing calculation method handling long string distinct page name | easton, m. c. bennett, b. t. .k working set, estimation program behavior .c 4.3 4.6 5.5
2997 | convex hull finite set poin t dimension | convex hull set poin t dimension determined log operation presented algorithm divide conquer technique recursively apply merge procedure nonin tersecting convex hull convex hull algorithm requires log operation time complexity proposed algorithm optimal multiplicative constant | preparata, f. p. hong, s. j. .k computational complexity, convex hull, optimal algorithms, planar set of poin ts, spatial set of  poin ts .c 4.49 5.25 5.32
2998 | empirical study list structure lisp | static measurement list structure large lisp program reported analyzed paper measurement reveal substantial regularity predictability poin ters atom especially poin ters list pointer atom found obey roughly zipf law governs word frequency natural language poin ters list poin location physically nearby memory regularity space efficient representation list structure discussed linearization list successive cdrs car consecutive memory location greatly strengthens observed regularity list structure shown reasonable assumption entropy information content car cdr pair program measured bit linearization bit | clark, d. w. green, c. c. .k list structure measurement, lisp, list structure regularity, poin ter compression, zipf's law, list  linearization, poin ter entropy .c 3.69 4.29 4.34 4.6 5.6
2999 | approach multidimensional data array processing computer | recent work development general purpose computer based statistical data processing capability handling multidimensional array data presented attention general problem multidimensional table array processing summary recent development array processing capability world bank system identified wrap world bank retrieval array processing system | muller, m. e. .k array processing, table processing, statistical analysis, data retrieval, data processing, syntax  for data structures, computing techniques, time series, cross tabulation .c 3.10 3.20 3.30 3.70 4.0
3000 | segment size lifetime algol program | characteristic virtual memory requirement sample algol program measured distribution presented thesizes memory request holding time lifetime result presented term johnston contour model simple abstract machine provide empirical evidence aspect construction behavior real program implication design virtual memory system presented discussed | batson, a. p. brundage, r. e. .k virtual memory, program behavior, segmentation, storage allocation, algol 60, contour model .c 4.22 4.34 4.45 6.21
3001 | detection combined occurrence | paper supposed variable x1 xn finite range variable xi taking pi value value variable changing time supposed desired detect occurrence subset variable achieve value finally supposed problem involves detection large number combined occurrence large number value variable efficient solution problem method unusual property faster system sum p1 pn larger solution error free suitable case solution slightly elegant negation conjunction subject possibility error error analysis method empirical study reported | zobrist, a. l. carlson, f. r. jr. .k coding, hash coding, retrieval, secondary keys, pattern recognition, artificial in telligence, demons,  n-tuples, sorting, chess .c 3.63 5.31
3002 | record partitioning model | main objective design system reduction storage data transfer cost paper present model request access system request requires information variable length data item probability access distribution data item length assumed known mutually independent system storage device record partitioned subrecords stored device subrecords designated primary record request record made primary record accessed subrecords accessed pertinent information stored primary record model presented paper nonlinear programming model mixed integer programming model general type system derived selection parameter model optimization library routine storage large scale operating system | babad, j. m. .k file system, file design, file partitioning, record partitioning .c 3.73
3003 | survey literature computer science education curriculum | bibliography approximately hundred reference computer science education appearing literature publication curriculum presented bibliography preceded descriptive material organizing reference category survey report activity professional organization philosophy program description program description course material | austing, r. h. barnes, b. h. .k education, computer science, curricula .c 1.5
3004 | structured programming cobol approach application programmer | technique designing writing cobol program presented previous work structured programming drawn adapted presentation informal terminology nonmathematical theorem proved example frequently top program design implemented structured flowchart disciplined specification step step verification formed cobol program defined proper cobol coding practice discussed | van gelder, a. .k structured programming, top-down, well-formed program, go to statement, repeat statement, flowchart,  application programming, cobol, software reliability, program verification .c 4.0 4.22 5.24
3005 | implication structured programming machine architecture | based empirical study line program text written goto language machine architecture specifically designed structured program proposed assignment call statement account percent executable statement special care ensure statement implemented efficiently highly compact instruction encoding scheme presented reduce program size factor unlike huffman code utilizes variable length field method fixed length byte op code address field frequent instruction consist single byte field consequence instruction decoding time minimized machine efficient respect space time | tanenbaum, a.s. .k machine architecture, computer architecture, computer organization, instruction set design, program  characteristics .c 4.12 4.22 4.9 6.21
3006 | anomaly variable partition paging algorithm | type anomalous behavior occur paged virtual memory operating system redefined type anomaly concern fact reference string paging algorithm increase mean memory allocation result increase fault rate paging algorithm examined term anomaly potential reference string example anomaly presented paging algorithm property inclusion property generalized inclusion property discussed anomaly implication property presented | franklin, m.a. graham, g.s. gupta, r.k. .k anomaly, memory management, program behavior, stack algorithms, virtual memory, working set, page  fault frequency, paging algorithms .c 4.32 4.35 4.6 8.1
3007 | complexity computation corrigendum | rabin, m.o.
3008 | preserving average proximity array | programmer data structure designer forced choose alternative structure storing structure preserving logical adjacency proximity important consideration combinatorial problem storing array kind list structure examined embeddings graph model loss proximity involved storage scheme elementary proof array stored linear list bounded loss proximity presented average loss proximity considered shown array stored linear list bounded loss average proximity stored binary tree result implies instance row major order asymptotically optimal storage strategy array | demillo, r.a. eisenstat, s.c. lipton, r.j. .k arrays, graph embedding, linear lists, proximity, average proximity, trees .c 4.34 5.24 5.25 5.32
3009 | insertion deletion sided height balanced tree | recently hirschberg established insertion sided height balanced tree log 2n step proved deletion performed log 2n step answer open problem posed hirschberg | kosaraju, s.r. .k avl trees, balanced trees, binary search, dynamic balancing .c 3.73 3.74 4.34 5.25 5.31
3010 | orientation computer science student | technological nontechnological orientation investigated special attention complexity structure computer science student closely technology contrast social science student technologically aloof confirmed rating student university minnesota computer science major found complex structure social science major | anderson, r.e. .k values, attitudes, students, public, social effects .c 2.11 2.12
3011 | management utilization computer american local government | traditional concept management information system mi bear relation information system top management local government exists management oriented computing involving unsophisticated application despite unsophisticated nature system management computing surprisingly common varied extent local government management computing prevalent government professional management practice top management supportive computing tends control computing decision department user control design implementation activity finally management computing clearly impact top manager involving improvement decision information | dutton, w.h. kraemer, k.l. .k computer utilization, management information system, american local government, city government  computers, county government computers, computer impacts, management computing .c 2.0 2.1 2.11 2.19 2.4 2.45 2.9 3.5 3.53
3012 | interactive information storage retrieval system medical research | paper present result study interactive computerized storage retrieval system monitor built computer system provided usage data study additional data user reaction gathe red questionnaire result show important role played frequently chosen laboratory reference leader influencing system implication study design similar system discussed | lucas, h.c.jr. .k implementation, system use, information storage and retrieval system .c 2.10 3.50 3.72
3013 | method detecting step edge digital picture | note describes operator respond step edge ramp similar digital laplacian max sum difference difference mean median gray level neighborhood output obtained operator applied set test picture compared standard digital laplacian gradient operator distance center centroid neighborhood edge briefly considered turn equivalent standard digital approximation gradient | schachter, b.j. rosenfeld, a. .k image processing, pattern recognition, edge detection .c 3.63
3014 | intermittent assertion proving program correctness | paper explores technique proving correctness termination program simultaneously approach intermittent assertion method involves documenting program assertion true time control pass point need true time method introduced burstall promise provide valuable complement conventional method intermittent assertion method presented number example correctness termination proof proof markedly simpler conventional counterpart hand shown proof correctness termination conventional technique rephrased directly proof intermittent assertion finally shown intermittent assertion method applied prove validity program transformation correctness continuously operating program | manna, z. waldinger, r. .k intermittent assertions, correctness of programs, termination of programs, program verification,  program transformation, continuously operating programs. .c 5.24
3015 | relaxation method image reconstruction | problem recovering image function variable experimentally integral grayness thin strip great importance large number scientific area important version problem medicine obtaining exact density distribution human body ray projection approach solve problem consists translating information system linear inequality size sparsity resulting system typically inequality fewer percent coefficient nonzero make method successive relaxation computationally attractive compared way solving system inequality paper shown consistent system linear inequality sequence relaxarion parameter lying strictly generates sequence vector converges solution assumption system linear equation relaxation method converges minimum norm solution previously proposed technique shown special case procedure choice relaxation parameter practical consequence image reconstruction choice relaxation parameter discussed | herman, g.t. lent, a. lutz, p.h. .k biomedical image processing, image reconstruction, x-ray tomography, mathematical programming,  linear inequalities, relaxation techniques .c 3.12 3.17 3.34 3.63 5.14 5.18 5.41
3016 | comparison numerical technique markov modeling | paper present numerical method obtain stationary probability vector markovian model nearly decomposable system considered result obtained method examined post mortem reveals standard technique fail yield correct result finally mean estimating error inherent decomposition model presented | stewart, w.j. .k markov models, numerical techniques, simultaneous iteration, near-decomposability .c 4.6 5.14 8.1
3017 | tree re examined | tree variant increasing frequency proposed basic storage structure multiuser database application potential problem dealt structure arise traditional static directory structure problem performance penalty | held, g. stonebraker, m. .k b-tree, directory, static directory, dynamic directory, index sequential access method .c 3.70 3.73 3.74 4.33 4.34
3018 | covering edge clique regard keyword conflict intersection graph | kellerman presented method determining keyword conflict heuristic algorithm solves combinatorial optimization problem connection method optimization problem shown equivalent problem covering edge graph complete subgraphs objective minimizing number complete subgraphs relationship edge clique cover problem graph coloring problem established algorithm problem constructed algorithm consequence relationship keyword conflict problem edge clique cover problem shown np complete np admit polynomial time approximation algorithm produce solution factor optimum | kou, l.t. stockmeyer, l.j. wong, c.k. watson, t.j. .k keyword conflicts, intersection graphs, node clique cover, edge clique cover, computational complexity,  np-complete problems, polynomial-time heuristics .c 4.12 5.25 5.32
3019 | gre advanced test computer science | austing, r.h.
3020 | systematic recursion removal | recursion removal algorithm presented strong walker amplified applied complex pl program aim demonstrate systematic recursion removal technique complex knuth sturdy toddler obtain measurement cost procedure linkage pl saving achievable procedure integration presence recursion paper describes recursion removal process illustrated recursion removal applied major part final result process displayed performance comparison result presented conclusion briefly discussed | auslander, m.a. strong, h.r. .k recursion removal, recursion elimination, optimization, procedure linkage, procedure integration .c 4.19 4.49 4.9 5.24
3021 | method obtaining digital signature public key cryptosystems | encryption method presented property publicly revealing encryption key reveal decryption key important consequence courier secure mean needed transmit key message enciphered encryption key publicly revealed intended recipient decipher message know decryption key message signed privately held decryption key verify signature publicly revealed encryption key signature forged signer later deny validity signature obvious application electronic mail electronic fund transfer system message encrypted representing number raising publicly power taking remainder result divided publicly product large secret prime number decryption similar secret power mod security system rest part difficulty factoring published divisor | rivest, r.l. shamir, a. adleman, l. .k digital signatures, public-key cryptosystems, privacy, authentication, security, factorization,  prime number, electronic mail, message-passing, electronic funds transfer, cryptography. .c 2.12 3.15 3.50 3.81 5.25
3022 | computer science faculty status minority woman | result survey conducted fall determine status woman minority faculty member academic computer science presented faculty member compared respect professional background salary teaching load publication record research grant analysis data verdict general equality woman minority men | mamrak, s.a. montanelli, r.g.jr. .k discrimination against women, discrimination against minorities, faculty, computer science degree  programs, affirmative action, teaching loads, salaries, publications .c 1.52 1.53 2.2 2.3
3023 | architecture ibm system | paper discus design consideration architectural extension distinguish system system comment experience original objective system effort achieve describes reason objective extending architecture cover virtual storage program control data manipulation instruction timing facility multiprocessing debugging monitoring error handling input output operation final section tabulates important parameter ibm machine implement architecture | case, r.p. padges, a. .k computer systems, architecture, instruction sets, virtual storage, error handling .c 6.0 6.21
3024 | cray computer system | paper describes cray discus evolution architecture account problem overcome manufacture cray computer built date satisfies erda class vi requirement computer capable processing million floating point operation cray fortran compiler cft designed give scientific user access benefit cray vector processing architecture optimizing compiler cft vectorizes innermost loop compatible ansi fortran standard commonly supported fortran extension cft require source program modification additional nonstandard fortran statement achieve vectorization user investment hundred man month effort develop fortran program contemporary computer protected | russell, r.m. .k architecture, computer systems .c 1.2 6.2 6.3
3025 | evolution dec system | dec system known pdp evolved pdp circa generation implementation presently include system covering price range origin evolution hardware operating system language term technological change user requirement user development pdp contribution computing technology include accelerating transition batch oriented time sharing computing system transferring hardware technology dec minicomputer design manufacturing supporting minicomputer hardware software development serving model single user timeshared interactive minicomputer microcomputer system | bell, c.g. kotok, a. hastings, t.n. hill, r. .k computer structures, architecture, operating system, timesharing .c 4.32 6.21 6.3
3026 | evolution sperry univac series tory analysis projection | series system sperry univac large scale main frame computer system beginning series progressed succession compatible computer model latest system introduced series hardware architecture based bit word complement structure obtains operand storage high speed register operand high speed register operating system designed support symmetrical multiprocessor configuration simultaneously providing multiprogrammed batch timesharing transaction environment | borgherson, b.r. hanson, m.l. hartley, p.a. .k 1100 computer series, computer architecture, multiprocessing languages, data management systems,  end user facilities, executive control software .c 1.3 4.0 4.20 4.30 4.32 4.33 4.35 6.0 6.21 6.30
3027 | development mu5 computer system | outline background mu5 project aim idea mu5 discussed description instruction set includes number feature conducive production efficient compiled code high level language source program design processor traced initial idea associatively addressed store final multistage pipeline structure involving prediction mechanism instruction prefetching function queue array element accessing view complete mu5 complex presented indication performance | ibbett, r.n. capon, p.c. .k architecture, naming, virtual storage, instruction set, descriptor, pipeline, instruction buffering,  associative storage, function queue, computer complex .c 4.10 4.12 6.21 6.33
3028 | manchester mark atlas torical perspective | year computer design manchester university system stand mark developed period atlas paper place computer torical context describes architecture system software present day terminology design concept address generation store management evolved progression mark atlas wider impact manchester innovation area discussed contemporary performance mark atlas evaluated | lavington, s.h. .k architecture, index registers, paging, virtual storage, extra codes, compilers, operating systems,  ferranti, manchester mark i, atlas, icl .c 1.2 4.22 4.32 6.21 6.30
3029 | foreword special issue computer architecture | fuller,s.h.
3030 | hierarchical design proof | hierarchical programming increasingly recognized helpful construction large program user hierarchical technique claim predict substantial increase productivity reliability program produced paper describe formal method hierarchical program specification implementation proof apply method significant list processing problem discus number extension programming language ease hierarchical program design proof | spitzen, j.m. levitt, k.n. robinson, l. .k program verification, specification, data abstraction, software modules, hierarchical structures .c 4.0 4.6 5.21 5.24
3031 | abstract data type software validation | data abstraction naturally algebraic axiom virtue axiom permit representation independent formal specification data type show employ algebraic axiom successive level implementation major thrust paper twofold shown algebraic axiomatizations simplify process proving correctness implementation abstract data type semi automatic tool automate proof correctness derive implementation axiom implementation limited testing program design time conventional implementation accomplished | guttag, j.v. horowitz, e. musser, d.r. .k abstract data type, correctness proof, data type, data structure, specification  .c 4.34 5.24
3032 | reverse path forwarding broadcast packet | broadcast packet delivery node network algorithm accomplishing delivery store forward packet switching computer network include transmission separately addressed packet multidestination addressing hot potato forwarding spanning tree forwarding source based forwarding list algorithm add reverse path forwarding broadcast routing method exploit routing procedure data structure packet switching reverse path forwarding practical algorithm broadcast routing store forward packet switching computer network algorithm practical optimal according metric developed analysis paper implemented existing network complexity required known alternative | dalal, y.k. metcalfe, r.m. .k reverse path forwarding, broadcast packets, routing, computer networks, store-and-forward packet  switching, broadcast protocols .c 3.81 4.32 5.32
3033 | optimizing decision tree heuristically guided search | optimal decision table conversion tackled literature approach dynamic programming branch bound technique effective time space requirement independent easy table produce good quasi optimal solution branch bound technique good heuristic direct search cluttered enormous search space number solution increase number test variable according double exponential paper suggest heuristically guided top search algorithm dynamic programming recognizes identical subproblems find optimal quasi optimal solution heuristic search method introduced paper combine positive aspect technique compressed table large number variable handled deriving expanded table | martelli, a. montanari, u. .k decision table, optimal decision table conversion, decision tree, heuristic search, and/or graphs,  dynamic programming, branch-and-bound .c 3.59 3.66 5.42 8.3
3034 | detection logical error decision table program | paper algorithm detect logical error limited entry decision table loop free program embedded decision table developed condition decision table assumed inequality equality relating linear expression assumed action decision table linear variable occur condition stub decision table table control transferred table algorithm based determining set linear inequality solution algorithm paper implemented fortran iv | ibramsha, m. rajaraman, v. .k error diagnostics, decision tables .c 3.5 4.1 4.42 5.24
3035 | strategic planning methodology computing effort higher education empirical evaluation | finding study designed address pressing problem strategic planning computing effort higher education presented planning methodology developed tested implementation university year methodology implemented effectiveness planning methodology assessed term improvement delivery computing service major institutional role instruction research administration control institution employed contrast improvement test institution result research planning methodology significantly enhanced delivery computing service | wetherbe, j.c. dock, v.t. .k computer management, computer budget, university computing, computer planning .c 2.41 3.51
3036 | selection optimal tab setting | generation computer terminal tab setting selected set computer feature reduce number character needed represent document transmission printing note algorithm selecting optimal set tab stop minimizing number character transmitted implementation algorithm reduced number character transmitted percent requires prepass document compute matrix determining optimal set tab stop fixed tab stop heuristic alternative achieve percent optimal prepass | peterson, j.l. bitner, j.r. howard, j.h. .k tabs, word processing, dynamic programming .c 3.9 4.4
3037 | linear sieve algorithm finding prime number | algorithm presented finding prime algorithm executes time proportional assuming multiplication integer larger performed unit time method arithmetic complexity algorithm presented mairson version simpler elegant easily extended find prime factorization integer time proportional | gries, d. misra, j. .k primes, algorithms, data structures .c 5.25 5.24 5.29
3038 | encryption authentication large network computer | encryption achieve authenticated communication computer network discussed protocol presented establishment authenticated connection management authenticated mail signature verification document integrity guarantee conventional public key encryption algorithm considered basis protocol | needham, r.m. schroeder, m.d. .k encryption, security, authentication, networks, protocols, public-key cryptosystems, data encryption  standard .c 3.81 4.31 4.35
3039 | fly garbage collection exercise cooperation | cooperation sequential process mutual interference despite frequent manipulation large shared data space technique developed nearly activity needed garbage detection collection performed additional processor operating con processor devoted computation proper exclusion synchronization constraint weak achieved severe complexity engendered illustrated | dijkstra, e.w. lamport, l. martin, a.j. scholten, c.s. steffens, e.f.m. .k multiprocessing, fine-grained interleaving, cooperation between sequential processes with minimized  mutual exclusion, program correctness for multiprogramming tasks, garbage collection  .c 4.32 4.34 4.35 4.39 5.24
3040 | synthesizing constraint expression | constraint network representation presented combinatorial search problem finding value set variable subject set constraint theory consistency level network formulated related problem backtrack tree search efficiency algorithm developed achieve level consistency desired order preprocess problem subsequent backtrack search function alternative backtrack search explicitly determining solution | freuder, e.c. .k backtrack, combinatorial algorithms, constraint networks, constraint satisfaction, graph coloring,  network consistency, relaxation, scene labeling, search .c 3.63 3.64 5.25 5.30 5.32
3041 | median split tree fast lookup technique frequently occuring key | split tree technique searching set key highly skewed frequency distribution split tree binary search tree node key value node maximally frequent key subtree split partition remaining key respect lexical ordering left subtrees median split tree mst lexical median node descendent split force search tree perfectly balanced achieving space efficient representation tree high search speed unlike frequency ordered binary search tree cost successful search mst log bounded stable minimal value mst built key ordering set frequency time log opposed n2 optimum binary search tree discussion application mst dictionary lookup english presented performance obtained contrasted technique | sheil, b.a. .k tree search, dictionary lookup, binary search, heaps, balanced trees, zipf's law, information retrieval .c 3.74 5.25 5.39
3042 | power tree | class pk tree presented height balance maintained node iying path number node pk tree asymptotically grows power height worst case procedure node insertion class tree considered restricted ipk tree buildable procedure average behavior tree studied extensive set simulation run close avl tree family ipo tree main advantage reduced number restructurings required node insertion analyzed | luccio, f. pagli, l. .k binary search trees, pk trees, ipk trees, search length, node insertion, subtree rotation .c 3.73 3.74 4.34 5.25 5.31
3043 | distributed process concurrent programming concept | language concept concurrent process common variable introduced process communicate synchronize mean procedure call guarded region concept proposed real time application controlled microcomputer network distributed storage paper example distributed process show include procedure coroutines class monitor process semaphore buffer path expression input output special case | hansen, p. .k concurrent programming, distributed processes, microprocessor networks, nondeterminism, guarded  regions, programming languages, process communication and scheduling, sorting arrays, coroutines, classes,  monitors, processes, semaphores, buffers, path expressions, input/output  .c 3.8 4.2 4.22 4.32 5.24
3044 | note conditional expression | evaluation conditional expression succeed deciding predicate diverges alternative record node field content | friedman, d.p. wise, d.s. .k parallel evaluation, suspending cons, lisp, conditional forms, if-then-else, ambiguous function, infinite structures .c 4.2 4.13 4.32 5.24
3045 | simple recovery procedure simple precedence parser | simple method enabling simple precedence parser recover syntax error attempt repair error made parsing semantic processing continue result good approximation syntax error handling negligible increase parsing time space complexity parser table generator | ripley, d.g. .k syntax errors, error recovery, parsing, simple precedence, compilers, debugging .c 4.12 4.42 5.23
3046 | computer generation gamma random variable ii | rejection method proposed generating gamma variate nonintegral shape parameter method similar method fishman wallace tadikamalla faster method core storage requirement programming effort proposed method similar wallace tadikamalla method computational time proposed method remain fairly constant medium large value superior time obtained ahrens dieter method value proposed method simpler ahrens dieter method | tadikamalla, p.r. .k gamma variables, rejection method, computer methods .c 5.5 8.1
3047 | synthetic image register real image surface model | number image analysis task benefit registration image model surface imaged automatic navigation visible light radar image requires exact alignment image digital terrain model addition automatic classification terrain satellite imagery requires alignment deal correctly effect varying sun angle surface slope inspection technique industrial part improved mean achieve required alignment matching real image synthetic image obtained surface model known position light source synthetic image intensity calculated reflectance map convenient describing surface reflection function surface gradient illustrate technique landsat image digital terrain model | horn, b.k.p. bachman, b.l. .k image registration, synthetic images, surface models, automatic hill shading, digital terrain models,  image transformation, image matching, shaded images  .c 3.63 3.11 3.14 8.2 3.83
3048 | performance evaluation highly concurrent computer deterministic simulation | simulation presented practical technique performance evaluation alternative configuration highly concurrent computer technique constructing detailed deterministic simulation model system model control stream replaces instruction data stream real system simulation system model yield timing resource usage statistic needed performance evaluation necessity emulating system case study implementation simulator model cpu memory subsystem ibm result evaluating alternative system design discussed experiment reveal case study major bottleneck system memory unit fixed point unit appears sophisticated pipelining buffering technique simplemented architecture ibm high speed cache memory ibm | kumar, b. davidson, e.s. .k performance evaluation, deterministic simulation, control stream, concurrent computers .c 6.20 8.1
3049 | simply extended modified batch environment graphical system sembegs | sembegs complete batch environment graphical system component handling graphical data displaying content variety graphical hardware performing graphical batch input operation sembegs easy extend modify meet growing need large batch environment extendable fully interactive system paper present conceptual view graphic leading design sembegs outline major component system design sembegs founded basic assumption true aim computer graphic describe graphical entity commonly held provide graphical input output functional capability sembegs built basic graphical data management system bagdams common mean communicating description graphical entity component sembegs bagdams facility storing retrieving manipulating description graphical entity provided received application program graphic package graphical device | wendorf, j.w. .k computer graphics, data structures, graphic display, graphic input, graphical database, device  independent graphics .c 4.33 4.34 8.2
3050 | system design education gaming approach | problem facing manager computer installation problem configuring computer system meet demand made mix job computer center service paper present management game player configure computer system meet hypothetical job mix control game administrator varied simulate variety real world situation bound job compute bound job player game receives set detailed report cost choice simulated run center operating choice | lyons, n.r. .k system design, configuration, management game .c 2.43 2.44
3051 | comparison heap tl structure simulation event set |  | franta, w.r. maly, k. .k simulation,event set, heaps, tl structure .c 3.34 4.22 5.5 8.1
3052 | cold start warm start miss ratio | level computer storage hierarchy miss ratio measurement made cold start made level store initially empty large capacity effect measured miss ratio miss incurred filling level store significant long reference string warm start cold start miss ratio cast doubt widespread belief observed shape lifetime reciprocal miss ratio versus capacity curve property behavior program maintain constant number page main storage hand cold start miss ratio measured function capacity measurement length studying system operation program periodically interrupted task switch shown obtain simple assumption cache miss ratio multiprogramming cold start miss ratio value obtain approximate cold start miss ratio warm start miss ratio | easton, m.c. fagin, r. .k miss ratio, cold start, warm start, storage hierarchy, lifetime function, multiprogramming, s-shape .c 3.70 4.32 9.35
3053 | packed scatter table | scatter table open addressing benefit recursive entry displacement cutoff unsuccessful search auxiliary cost function compared conventional method technique provide substantially improved table resemble exact solution optimal packing displacement depth limited approximation enumerative exhaustive optimization packing cost remain linear table size technique primarily suited important fixed possibly large table reference frequency known op code table spelling dictionary access array introduction frequency weight improves retrieval enhancement degrade cutoff | lyon, g. .k assignment problem, backtrack programming, hashing, open addressing, recursion, scatter table rearrangements  .c 3.74 4.0
3054 | implementing quicksort program | paper practical study implement quicksort sorting algorithm variant real computer including apply code optimization technique detailed implementation combining effective improvement quicksort discussion implement assembly language analytic result describing performance program summarized variety special situation considered practical standpoint illustrate quicksort wide applicability internal sorting method requires negligible extra storage | sedgewick, r. .k quicksort, analysis of algorithms, code optimization, sorting .c 4.0 4.6 5.25 5.31 5.5
3055 | analysis algorithm dutch national flag problem | solution dutch national flag problem dijkstra meyer dijkstra start simple program arrives improved program refinement algorithm dijkstra shown expected number swap 3n value differ swap asymptotically swap algorithm meyer shown expected swap complexity 9n | mcmaster, c.l. .k algorithmic analysis, dutch national flag problem, refinement, structured programming .c 4.0 5.24 5.25 5.3
3056 | counting large number event small register | small counter approximate count large number resulting expected error precisely controlled bit counter byte track event relative error substantially independent number event relative error expected percent percent time technique advantage multichannel counting hardware software monitoring experiment process | morris, r. .k counting .c 5.11
3057 | optimal togram matching monotone gray level transformation | paper investigates problem optimal togram matching monotone gray level transformation assigns picture point gray level gray level objective find transformed digital picture picture sum absolute error gray level togram transformed picture reference picture minimized equivalent placing k1 linearly ordered object sized k2 linearly ordered box assorted size accumulated error space packed overpacked box minimized placement function monotonic ensures polynomial time solution problem tree search algorithm optimal togram matching presented time complexity k1 k2 monotone property dropped problem np complete restricted k2 | chang, s.k. wong, y.w. .k optimal his togram matching, gray level transformation, packing problem, tree searching algorithm,  picture processing .c 3.24 5.25 5.42
3058 | jump searching fast sequential search technique | sequential structure binary searching feasible jump searching appealing alternative paper explores variant classic jump searching scheme optimum jump size square root number record multiple level variable size jump strategy explored application discussed performance evaluated | shneiderman, b. .k jump searching, sequential files, file management, search strategies, database structures, index  searching .c 3.74 4.34
3059 | model parallel processing program application cpu overlap | approximate queueing model internal parallel processing individual program multiprogrammed system developed paper solution technique developed network decomposition model formulated term cpu overlap applied analysis problem percentage performance improvement cpu overlap found greatest system approximate cpu utilization balance low degree multiprogramming percentage improvement overlap found greatest systemtems system utilized cpu | towsley, d. chandy, k.m. browne, j.c. .k multiprogramming, parallel processing, queueing network models, multiprocessing of computation  and i/o  .c 4.32 8.1
3060 | fortran | standard fortran official title american national standard programming language fortran x3 commonly referred fortran development completed replaces fortran standard designated x3 paper describes feature fortran information standard developed | brainerd, w. .k none .c none
3061 | simulation dynamic sequential search algorithm |  | tenenbaum, a. .k searching, list processing, sequential searching, dynamic reordering, simulation  .c 3.74 8.1
3062 | real time plotting approximate contour map |  | ward, s.a. .k contour map, digital plotting, graphical characters .c 3.10 3.20 4.41 8.2
3063 | note virtual memory index |  | maly, k. .k index, b-tree, pages, file organization, linked representation, maintenance costs  .c 3.02 3.50 3.51 3.73 3.74
3064 | event manipulation discrete simulation requiring large number event | event manipulation system presented consists major part part address familiar problem event scheduling efficiency number scheduled event grows large part deal apparent problem providing efficiency flexibility scheduled event accessed executed additional feature problem dealt include proper handling simultaneous event event created scheduled executed point simulated time infinite loop caused concatenation time event diagnosed maintaining event count practical economical capability handling time displaceable event desirable | ulrich, e.g. .k simulation, discrete systems simulation, discrete event simulation, time-flow mechanisms .c 3.65 3.74 4.22 8.1
3065 | brother tree | insertion deletion provided class sided brother tree log performance importance result stem close relationship brother tree insertion algorithm operating log2 insertion deletion carried log time brother tree appears insertion algorithm inherently difficult deletion algorithm reverse obtains | ottmann, t.t. six, h.w. wood, d. .k dictionary problem, search trees, avl trees, brother trees, right-balanced trees,one-sided height-balanced  trees, insertion and deletion algorithms .c 3.73 3.74 5.31
3066 | controlled experiment program testing code walkthroughs inspection | paper describes experiment program testing employing highly experienced data processing professional method test small pl program result show popular code walk inspection method effective computer based method finding error effective method term error found cost employed pair subject tested program independently pooled finding study show tremendous amount variability subject ability detect type error varies method method | myers, g.j. .k software reliability, program verification, debugging, testing, code walkthroughs, code inspections,  personnel selection .c 4.6
3067 | generalized working set segment reference string | working set concept extended program reference segment size generalized working set policy gws keep resident set segment retention cost exceed retrieval cost gws model entire class demand fetching memory policy satisfy resident set inclusion property generalized optimal policy gopt defined operating point minimizes aggregated retention swapping cost special case cost structure allow gws gopt simulate known stack algorithm working set vmin efficient procedure computing demand curve showing swapping load function memory usage developed gws gopt policy empirical data actual system included | denning, p.j. slutz, d.r. .k database referencing, memory management, optimal memory policies, paging, program behavior, program  measurement, segmentation, working sets .c 4.30 8.10
3068 | model verification data security operating system | program verification applied kernel architecture form promising method providing uncircumventably secure shared computer system precise definition data security developed term general model operating system model suitable basis verifying property operating system assure reliable enforcement security application approach ucla secure operating system discussed | popek, g.j.. farber, d.a. .k operating systems, security, protection, program verification .c 4.35 5.24
3069 | practical interprocedural data flow analysis algorithm | interprocedural data flow analysis algorithm presented analyzed algorithm associate procedure program information variable modified possibly preserved call procedure subcalls algorithm sufficiently powerful recursive program deal sharing variable arises reference parameter algorithm unique compute information single pas requiring prepass compute calling relationship sharing pattern algorithm asymptotically optimal time complexity implemented practical program large | barth, j.m. .k data flow analysis, global flow analysis, optimization, side effects, relations, reference parameters,  incarnations .c 4.12 4.20
3070 | hybrid simulation model computer system | paper describes structure operation hybrid simulation model discrete event simulation analytic technique combined produce efficient accurate system model based simple hypothetical computer system discrete event simulation model arrival activation job central server queueing network model system processor accuracy efficiency hybrid technique demonstrated comparing result computational cost hybrid model equivalent simulation model | schwetman, h.d. .k performance evaluation, simulation, queueing network models, central server model .c 4.32 4.35 8.1
3071 | algorithm symbolic technique bel petrov classification gravitational field | note algorithm presented symbolic calculation algebraic invariant weyl tensor permit determination bel petrov type gravitational field algorithm specialized inverno russell clark requires special coordinate system spin coefficient formalism algorithm implemented formac designed complete classification scheme proposed petrov book appendix example illustrating algorithm | harris, r.a. zund, j.d. .k general relativity, bel-petrov types, formac, symbolic manipulation, tensors .c 3.11 3.15 3.17
3072 | feedback coupled resource allocation policy multiprogramming multiprocessor computer system | model study integrated feedback driven scheduling system multiprogrammed multiprocessor computer system presented basic control variable data flow rate process executing cpu model system feature simulated continuous flow preempt resume scheduling input output activity attention amount memory resource required effective processing activity buffer space assignment model study distribution driven trace driven technique simple dynamic scheduler shown improve system performance measured user cpu time optimal optimal static scheduler imbeded identical system structure workload environment improvement greatest heavy demand workload | brice, r.s. browne, j.c. .k integrated schedulers, feedback scheduling, multiprogramming systems, i/o system scheduling .c 4.32 4.35
3073 | communicating sequential process | paper suggests input output basic primitive programming parallel composition communicating sequential process fundamental program structuring method combined development dijkstra guarded command concept surprisingly versatile illustrated sample solution variety familiar programming exercise | hoare, c.a.r. .k programming, programming languages, programming primitives, program structures, parallel programming,  concurrency, input, output, guarded commands, nondeterminacy, coroutines, procedures, multiple entries,  multiple exits, classes, data representations, recursion, conditional critical regions, monitors, iterative  arrays .c 4.20 4.22 4.32
3074 | time space efficient garbage compaction algorithm | area storage scattered marked node differing size wish rearrange compact mass end area revising pointer marked node show location algorithm accomplishes task linear time relative size storage area space order bit pointer algorithm operates reversibly encoding situation collection location point single location linear list emanating pointed location passing pointing location terminating pointed location transplanted content | morris, f.l. .k garbage collection, compaction, compact ification, storage reclamation, storage allocation, record  structures, relocation, list processing, free storage, pointers, data structures .c 4.34 4.49 5.32
3075 | fast parallel sorting algorithm | parallel bucket sort algorithm presented requires time log processor algorithm make technique requires space product processor time realistic model model memory contention permitted procedure presented sort number time log processor arbitrary integer model computation procedure permit simultaneous fetch memory location | hirschberg, d.s. .k parallel processing, sorting, algorithms, bucket sort .c 3.74 4.34 5.25 5.31
3076 | conflict social choice electronic fund transfer system development | year computer based system automate transfer recording debit credit begun implemented large scale system promise financial benefit institution potential convenience customer raise significant social legal technical question resolved full scale system electronic fund transfer eft problem larger public solve paper examines incentive eft development social problem raise context conflict position implicit analysis proposed eft arrangement conflict reflect relative importance problem specific group position implicit eft proposal help organize analysis market arrangement system reliability privacy transaction topic analyzed article related position held concerned party way public learn social quality eft arrangement pace eft development discussed context social choice | kling, r. .k electronic funds transfer systems, social impacts of computing, privacy, social choice, computer  networks, network reliability, security, social values .c 2.11 2.12 2.3 3.52 3.53 3.55
3077 | programming liberated von neumann style functional style algebra program | conventional programming language growing enormous stronger inherent defect basic level fat weak primitive word time style programming inherited common ancestor von neumann computer close coupling semantics state transition division programming world expression world statement inability effectively powerful combining form building program existing lack mathematical property reasoning program alternative functional style programming founded combining form creating program functional program deal structured data nonrepetitive nonrecursive hierarchically constructed argument require complex machinery procedure declaration generally applicable combining form high level program build higher level style conventional language functional style programming algebra program variable range program operation combining form algebra transform program solve equation unknown program transforms equation high school algebra transformation algebraic law carried language program written combining form chosen programming power power algebraic law general theorem algebra give detailed behavior termination condition large class program class computing system functional programming style programming language state transition rule unlike von neumann language system semantics loosely coupled state state transition occurs major computation | backus, j. .k functional programming, algebra of programs, combining forms, functional forms, programming languages,  von neumann computers, von neumann languages, models of computing systems, applicative computing systems,  applicative state transition systems, program transformation, program correctness, program termination,  metacomposition .c 4.20 4.29 5.20 5.24 5.26
3078 | analysis availability computer system computer aided algebra | analytical result related availability computer system constructed unreliable processor presented paper result obtained computer aided algebraic manipulation technique major purpose paper demonstrate difficulty obtaining analytical solution markov process considerably reduced application symbol manipulation program physical system modeled markov semi markov process potential range application technique wider problem availability analyzed | chattergy, r. pooch, u.w. .k computer-aided algebra, symbol manipulation, markov process, reliability, redundant structures,  on-line computer system. .c 3.82 5.5 5.7 8.1 8.3
3079 | algorithm reasoning equality | simple technique reasoning equality fast complete ground formula function symbol equality presented proof correctness | shostak, r.e. .k theorem proving, deduction, program verification, equality .c 3.64 3.66 5.21
3080 | proving correctness heuristically optimized code | system proving program written high level language correctly translated low level language primary system post optimization step code generation low level language program need generated compiler fact hand coded example usefulness system interesting result ability handle program implement recursion bypassing start program detection pinpointing wide class error low level language program example demonstrate optimization genre paper result substantially faster operation saving memory term program stack size | samet, h. .k compilers, correctness, code optimization, debugging, program verification, lisp .c 4.12 4.21 4.22 5.24
3081 | shallow binding lisp | shallow binding scheme variable accessed bounded amount computation elegant model shallow binding lisp presented context switching environment tree transformation called rerooting rerooting completely general reversible optional sense lisp interpreter operate correctly rerooting invoked context change rerooting leaf assoc invariant variable environment programmer access rerooting primitive shallow dynamic control access shallow deep affect speed execution program semantics addition multiple process active environment structure long rerooting indivisible operation finally concept rerooting shown combine concept shallow binding lisp dijkstra display algol general model shallow binding | baker, h.g. jr. .k lisp 1.5, environment trees, funarg's, shallow binding, deep binding, multiprogramming, algol display .c 4.13 4.22 4.32
3082 | time clock ordering event distributed system | concept event happening distributed system examined shown define partial ordering event distributed algorithm synchronizing system logical clock totally order event total ordering illustrated method solving synchronization problem algorithm specialized synchronizing physical clock bound derived synchrony clock | lamport, l. .k distributed systems, computer networks, clock synchronization, multiprocess systems .c 4.32 5.29
3083 | pseudochaining hash table | paper present pseudochaining collision resolution method pseudochaining half open addressing chaining owes fact link field present cell hash table permit chaining overflow item table efficiency method derived tradeoff analysis | halatsis, c. philokyprou, g. .k hash code, scatter storage, open addressing, chaining, pseudochaining, collision resolution, searching,  uniform probing. .c 3.7 3.73 3.74 4.9
3084 | interpolation search log logn search | interpolation search method retrieving desired record key ordered key statistical distribution key shown average log logn access required retrieve key assuming key uniformly distributed number extra access estimated shown low hold cumulative distribution function key known computational experiment confirm result | perl, y. itai, a. avni, h. .k average number of accesses, binary search, database, interpolation search, retrieval, searching,  uniform distribution  .c 4.4 4.6 5.25
3085 | algorithm determining optimal computation order matrix chain product | paper discus computation matrix chain product form m1 m2 mn mi matrix order matrix computed affect number operation sufficient condition association matrix optimal order presented algorithm find order computation take percent longer optimal time topt presented case algorithm yield optimal order order take percent longer topt percent average | chin, f.y. .k approximate algorithm, heuristic algorithm, matrix multiplication, matrix chain product .c 5.14
3086 | complexity computing measure ai bi | decision tree complexity computing measure union possibly overlapping interval shown log comparison linear function interval endpoint allowed existence log lower bound determine real number demonstrated problem provide excellent opportunity discussing effect computational model ease analysis result produced | fredman, m.l. weide, b. .k analysis of algorithms, combinatorial problems, computational complexity, computational models,  decision tree programs, lower bounds .c 5.25 5.26 5.30 5.39
3087 | english language question answering system large relational database | typing request english casual user able obtain explicit answer large relational database aircraft flight maintenance data system called plane design implementation system illustrated detailed example operation system component example system operation language processing portion system number augmented transition network match phrase specific meaning context register tory keeper concept case frame judging meaningfulness question generating dialogue clarifying partially understood question resolving ellipsis pronoun reference problem system component construct formal query relational database optimize order searching relation method discussed handling vague complex question providing browsing ability included discussion important issue programming natural language system limited domain relationship system | waltz, d.l. .k question answering, relational database, natural language, database front end, artificial intelligence,  dialogue, query generation, information retrieval, natural language programming  .c 3.42 3.60 3.69 3.74 3.79
3088 | general equation idealized cpu overlap configuration | general equation derived estimating maximum utilization main storage partition cpu device condition idealized cpu overlap model multiprogrammed computer system equation directly applicable configuration consisting set identical cpu processor main storage partition user task example provided illustrate equation compute effective processing time record expected timesharing response time balanced unbalanced resource utilization condition | teory, t.j. .k blocking, buffering, input/output, overlap, performance, resource allocation, throughput, timesharing .c 3.72 4.30 4.41 8.1
3089 | performance rollback recovery system intermittent failure | mathematical model transaction oriented system intermittent failure proposed system assumed operate checkpointing rollback recovery method ensure reliable information processing model derive principal performance measure including availability response time system saturation point | gelenbe, e. derochette, d. .k database reliability, file systems, checkpoints, recovery procedures, checking techniques, reliability  and system performance evaluation .c 3.72 3.73 4.33 4.35 4.6 5.5 8.1
3090 | automated welfare client tracking service integration political economy computing | impact automated client tracking system client caseworker administrator operation welfare agency reported major impact system enhance administrative attractiveness agency eye funders increase internal administrative efficiency impact joint product technical feature computer based system organizational demand agency administrator caseworker illustrates successful automated information system fit political economy group | kling, r. .k social impacts of computing, organizational impacts of computing, management information systems,  sociology of computing, information systems and service integration, urban information systems .c 2.11 3.53
3091 | basic determinant computer programming productivity | propose research examine relationship processing characteristic program experience characteristic programmer program development time ultimate objective develop technique predicting amount time create computer program fifteen program characteristic hypothesized increase programming time required objectively measurable preprogramming specification programmer characteristic experience related measurable programming task begun program characteristic emerged major influence program development time increased program development time programmer characteristic found related reduced program development time multiple regression equation contained programmer characteristic program characteristic gave evidence good predictive power forecasting program development time | chrysler, e. .k programmer performance standards, predicting program development time, program estimation techniques,  program development equation, value of programming experience, programmer evaluation, programmer scheduling,  programmer productivity, programming management, cobol programming .c 2.40 4.20
3092 | characteristic application software maintenance | maintenance enhancement application software consume major portion total life cycle cost system rough estimate total system programming resource consumed range high percent category area attention literature analyze problem area questionnaire developed pretested submitted organization respondent totaled response analyzed spss statistical package result analysis maintenance enhancement consume total resource system programming group maintenance enhancement tend viewed management important application software development maintenance enhancement problem management orientation tend significant technical orientation user demand enhancement extension constitute important management problem area | lientz, b.p. swanson, e.b. tompkins, g.e. .k software maintenance, use of productivity aids, management and technical issues  .c 3.50 4.6
3093 | automatic error recovery lr parser | paper present scheme detecting recovering syntax error program scheme based lr parsing driven information directly obtainable information present lr parser approach patterned levy graham rhodes appears provide error recovery simple powerful | mickunas, m.d. modry, j.a. .k programming languages, error correction, automatic correction, parsing, lr, syntax errors, compilers .c 4.12 4.42 5.23
3094 | analysis deterministic parsing algorithm | paper describes approach determining minimum maximum average time parse sentence acceptable deterministic parser quantity presented form symbolic formula called time formula variable formula represent length input string time perform elementary operation pushing popping subscripting iterating binding variable actual numerical value compiler machine configuration determine execution time configuration time formula derived examining grammar rule program representing algorithm wish analyze approach specific grammar defines simple arithmetic expression deterministic parser analyzed top recursive descent ll parser bottom slr parser paper estimate relative efficiency parser estimate applicable specific machine pdp presented substantiated buy benchmark finally paper illustrates proposed approach applying analysis parser simple programming language | cohen, j. roth, m.s. .k syntactic analysis, analysis of algorithms,top-down and bottom-up parsing, relative efficiencies. .c 4.12 5.23 5.24 5.25 5.7
3095 | selective traversal algorithm binary search tree | problem selecting data item binary search tree according list range condition considered process visiting minimal number node retrieve data satisfying range condition called selective traversal presented paper algorithm selective traversal tag field node tree algorithm efficient examination data time consuming examination tag field | driscoll, j.r. lien, y.e. .k data retrieval, range conditions, binary search tree, tree traversal, selective traversal .c 3.74 5.24 5.25
3096 | optimal method deletion sided height balanced tree | sided height balanced tree binary tree node subtree height equal exactly greater height left subtree advantage general avl tree bit balancing information required bit required acl tree shown deletion arbitrary node tree accomplished logn operation number node tree method optimal sense complexity reduced order magnitude result coupled earlier result hirschberg basic problem insertion deletion retrieval insertion adversely affected modification avl tree | zweben, s.h. mcdonald, m.a. .k balanced, binary, search, trees .c 3.73 3.74 4.34 5.25 5.31
3097 | optimal shift strategy block transfer ccd memory | purpose paper block transfer ccd memory composed serial shift register shift rate vary definite minimum shift rate refresh rate definite maximum shift rate bit iin shift register numbered block bit transferred starting bit shift strategy block transfer request occurring random time wait minimal amount time bit reached minimum shift rate requirement allow simply park bit wait transfer request optimal strategy involves shifting slowly bit passed shifting quickly critical boundary reached shortly bit come called hurry wait strategy known computer field block transfer ccd memory viewed paging drum variable bounded rotation speed | sites, r.l. .k paging drum, charge coupled devices, shift register memory, memory hierarchy, electronic drum,  latency .c 3.72 5.39 6.34 6.35
3098 | computer generation gamma random variable | method generating random variable gamma distribution nonintegral shape parameter proposed method similar method recently wallace fishman compared fishman ahrens dieter method core storage requirement programming effort method similar fishman method proposed method fishman method faster fishman method proposed method simpler ahrens dieter method faster | tadikamalla, p.r. .k gamma variables, rejection method, computer methods .c 5.5 8.1
3099 | sufficient optimality condition integer programming application | purpose report present class sufficient optimality condition pure mixed integer programming problem set sufficient condition presented thought generalization optimality condition based primal dual complementarity linear programming sufficient condition construction difficult integer programming problem known optimal solution problem test benchmark integer programming code | fleisher, j.m. meyer, r.r. .k integer programming, optimality conditions, test problem construction, kuhn-tucker conditions,  greatest common divisor  .c 3.15 5.39 5.49
3100 | interference matching technique inducing abstraction | method inducing knowledge abstraction sequence training example proposed method interference matching induces abstraction finding relational property common exemplar task solved program interference matching algorithm presented problem concerning description training example adequacy interference matching discussed direction future research considered | hayes-roth, f. mcdermott, j. .k rule induction, knowledge acquisition, partial matching, interference, graph matching, learning,  induction, knowledge representation, informal retrieval, abstraction, generalization, language learning,  complexity, predicate discovery. .c 3.36 3.61 3.62 3.66 3.70 5.32
3101 | sl5 procedure mechanism | paper describes integrated procedure mechanism permit procedure recursive function coroutines integration accomplished treating procedure activation record called environment data object decomposing procedure invocation separate component source language level addition argument binding control programmer permitting definition method argument transmission source language resulting procedure mechanism part sl5 programming language suited goal oriented problem problem readily programmed coroutines example | hanson, d. griswold, r.e. .k procedures, coroutines, programming languages, interpreters, snobol 4, backtracking .c 4.2 4.20 4.22 4.13
3102 | incorporation unit programming language | issue programming language aid keeping track physical unit foot sec discussed method introduction relationship unit watt volt amp yard foot subsequent automatic conversion based relationship proposal syntax considered | karr, m. loveman iii, d.b. .k units, language design, compiler construction, language syntax .c 4.12 4.22
3103 | automatic data structure selection overview | level abstraction proved helpful constructing maintaining program program designed abstract data type set list programmer time saved automating process filling low level implementation detail past programming system provided single general purpose implementation abstract type program produced abstract type inefficient space time paper system choosing efficient implementation abstract type library implementation discussed process discussed detail program general issue data structure selection reviewed | low, j.r. .k abstract data types, automatic programming, data structures, optimizing compilers, sets, lists .c 4.12 4.22 4.6
3104 | test data aid proving program correctness | proof program correctness tend long tedious testing detecting error guarantee correctness paper introduces technique test data proving program correctness addition simplifying process proving correctness method simplifies process providing accurate specification program applicability technique procedure recursive program demonstrated | geller, m. .k program verification, program testing, recursive programs .c 4.22 4.6 5.24
3105 | language extension expressing constraint data access | controlled sharing information needed desirable application supported operating system access control mechanism paper show extend programming language provide controlled sharing extension permit expression access constraint shared data access constraint apply simple object object component larger object bank account record bank data base constraint stated declaratively enforced static checking similar type checking approach extend strongly typed language suitable extending language support notion abstract data type | jones, a.k. liskov,b.h. .k programming languages, access control, data types, abstract data types, type checking, capabilities .c 4.20 4.35
3106 | fast algorithm copying list structure | algorithm presented copying arbitrarily linked list structure block contiguous storage location destroying original list fixed number program variable auxiliary storage stack algorithm need mark bit operates linear time shown significantly faster fisher algorithm fastest previous linear time algorithm problem speed come mainly efficient list traversal technique fold processing stack structure built classification list cell type enables processing operation optimized type | clark, d.w. .k list copying, lisp, space complexity, constant workspace .c 4.34 4.49 5.25
3107 | generating beta variate nonintegrel shape parameter | rejection method generating beta variate method compared previously published method theoretically computer timing suggested method advantage speed programming simplicity previous method especially difficult combination parameter value | cheng, r.c.h. .k beta variates, random numbers, simulation .c 5.5 8.1
3108 | economical encoding comma string | method insertion delimiters string symbol presented length string increase extra cost term prolongation vanishingly small compared length string | even, s. rodeh, m. .k string transmission, delimiters, commas, encoding of the integers .c 3.57 3.81 5.6
3109 | data structure manipulating priority queue | data structure representing collection priority queue primitive operation insertion deletion union update search item earliest priority | vuillemin, j. .k data structures, implementation of set operations,priority queues, mergeable heaps, binary trees .c 4.34 5.24 5.25 5.32 8.1
3110 | assembling code machine span dependent instruction | modern computer instruction length depend distance instance instruction operand instruction paper considers problem minimizing length program machine efficient solution presented case operand span dependent instruction label assembly time expression restricted form restriction relaxed allowing operand general assembly time expression problem shown np complete | szymanski, t.g. .k span-dependent instructions, variable-length addressing, code generation, assemblers, compilers,  np-complete, computational complexity. .c 4.11 4.12 5.25
3111 | secure communication insecure channel | according traditional conception cryptographic security transmit key secret mean encrypted message securely paper show select key open communication channel fashion communication security maintained method force enemy expend amount work increase square work required communicant select key method logically kind protection passive eaves dropper suggests research topic highly rewarding theoretical practical sense | merkle, r.c. .k security, cryptography, cryptology, communications security, wiretap, computer network security,  passive eavesdropping, key distribution, public key cryptosystem .c 3.56 3.81
3112 | list processing real time serial computer | real time list processing system time required elementary list operation con car cdr rplaca replacd eq atom lisp bounded small constant classical implementation list processing system lack property allocating list cell heap garbage collection process requires time proportional heap size finish real time list processing system presented continuously reclaims garbage including directed cycle linearizing compacting accessible cell contiguous location avoid fragmenting free storage pool program small requires time sharing interrupt making suitable microcode finally system requires average time space classical implementation space requirement reduced approximately classical proportion compact list representation array size program stack hash linking simple extension system reference counting found inferior application | baker, h.g. .k real-time, compacting,garbage collection, list processing, virtual memory, file or database management,  storage management, storage allocation, lisp, cdr-coding, reference counting.   .c 3.50 3.60 3.73 3.80 4.13 4.22 4.32 4.33 4.35 4.49
3113 | optimal conversion extended entry decision table general cost criterion | general dynamic programming algorithm converting limited extended mixed entry decision table optimal decision tree presented take account rule frequency probability minimum time space cost criterion common action set compressed rule rule sequencing constraint condition test excludable combination condition ambiguity interrupted rule masking | lew, a. .k decision table, optimal programs, dynamic programming .c 3.59 4.19 4.29 4.49 5.39 5.42 8.3
3114 | technique isolating difference | simple algorithm isolating difference application comparing version source program order display difference algorithm isolates difference corresponds closely intuitive notion difference easy implement computationally efficient time linear length application algorithm isolates difference similar isolated longest common subsequence application algorithm merges independently generated single algorithm generate efficient encoding form difference datum permitting reconstruction original difference datum | heckel, p. .k difference isolation, word processing, text editing, program maintenance, hash coding, file compression,  bandwidth compression, longest common subsequence, file comparison, molecular evolution .c 3.63 3.73 3.81 4.43
3115 | orderly enumeration nonsingular binary matrix applied text encryption | nonsingular binary matrix order nonsingular field initial segment natural number correspondence natural number corresponds intermediate vector vector mapped nonsingular binary matrix example complete enumeration nonsingular binary matrix produced mapping intermediate vector matrix mapping application vernam encipherment method pseudorandom number sequence bit string formed form byte text data encryption key representation natural number natural number transformed nonsingular binary matrix key leverage obtained matrix seed shift register sequence pseudorandom number generator | payne, w.h. mcmillen, k.l. .k binary matrices, combinatorics, combinations, nonsingular matrices, encryption, vernam, pseudorandom  numbers, feedback shiftregister sequences, random numbers. .c 3.7 5.3
3116 | interference detection solid surface | industrial environment determine interference component potential interference problem product made assembly component product manufacturing testing typically drawing attempt detect unwanted interference dimensional static drafting medium show interference dimensional moving part paper present computer representation solid surface algorithm carry interference checking object represented object represented polyhedron piecewise planar surface type interference checking discussed detection intersection object fixed position detection collision object moving trajectory | boyse, j.w. .k interference checking, intersection detection, collision detection, solid representation, polyhedral representation, graphics, polygons, surfaces .c 3.2 8.2
3117 | impact computer technology police | past decade significant growth computer technology police department growth slower rate predicted early computer application extend routine nonroutine effort resource allocation computer aided dispatch system machine begin tool decision making strategic planning person machine interaction result technology date mixed paper report case study survey provinsights implementation impact police computer technology relationship technology law enforcement society | colton, k.w. .k computer technology, innovation, police resource allocation, police command  and control, computer aided dispatch, law enforcement, technology transfer .c 2.1 2.11 2.12 2.45 3.33 3.39
3118 | permutation data block bubble memory | common internal organization bubble memory consists set minor loop connected major loop problem obtaining give permutation minor loop content minimum time studied paper lower bound number step required buy permutation algorithm derived class optimum algorithm identified | bongiovanni, g.c. luccio, f. .k bubble memory, memory loops, permutation algorithm, data block shift .c 4.34 5.30 6.34
3119 | impact distribution discipline multiple processor system | simple queueing model study performance tradeoff multiple processor system issue considered include impact cpu service discipline distribution level multiprogramming multitasking job priority | sauer, c.h. chandy, k.m. .k multiprogramming, multiprocessing, scheduling disciplines, performance evaluation, queueing models .c 4.32 4.6 6.2 8.1
3120 | event driven compiling technique | due linear structure source text difficulty arise pas compilation process difficulty occur entity processed forward reference information obtainable subsequent entity classic solution ask data structure case technique presented control structure event process work compiler writer easier conceptually practice forget problem outset avoids special processing problem technique applied construction algol compiler example implementation discussed | banatre, j.p. routeau, j.p. trilling, l. .k compiling technique, one-pass compilation, semantic analysis, event, process, parallelism categories--4.12
3121 | syntactic source source transforms program manipulation | syntactic transforms source source program transformation preserve history computation modify execution time combined small number primitive semantic transforms provide powerful tool program manipulation catalogue syntactic transforms solution system program equation example derivation complex source source transformation presented case study illustrate syntactic semantic source source transformation development clear simple reasonably efficient program | arsac, j.j. .k structured programming, program transforms, control structures .c 4.2 5.24 5.25
3122 | production employment ph computer science | taulbee, o.e. conte, s.d. .k computer science, production of ph.d.'s, employment, students .c 1.3 1.52 1.53 1.59
3123 | employment characteristic doctoral level computer scientist | fairley, r.e. .k employment characteristics, manpower utilization,occupational trends .c 1.5 2.1 2.2
3124 | recursive data structure apl | mathematical study approach defining nested array apl presented theorem exhibiting relationship definitional system illustrated graph representation approach define apl array recursive data structure equivalent tree structure data stored leaf homogeneous array number character extension apl proposed includes primitive function manipulate nesting level array operator assist construction data driven algorithm | gull,w.e. jenkins, m.a. .k nested arrays, apl arrays, recursive data structures, trees, data-driven algorithms, theory of arrays .c 4.22 5.29
3125 | global optimization suppression partial redundancy | elimination redundant computation moving invariant computation loop separately invariant moved outward loop loop propose move expression directly entrance outermost loop invariant solving general problem elimination computation performed execution path computation termed partially redundant algorithm require graphical information restriction shape program graph testing algorithm shown execution cost nearly linear size program lead smaller optimizer requires execution time | morel, e. renvoise, c. .k optimizer, optimization, compiler, compilation, redundancy elimination, invariant  computation elimination, partial redundancy, data flow analysis, boolean systems .c 4.12 5.21 5.24
3126 | comment perfect hashing function single probe retrieving method static set | anderson, m.g. .k hashing, hashing methods, hash coding, direct addressing, identifier- to-address transformations, perfect hashing functions, perfect hash coding, reduction, retrieving, scatter storage, searching .c 3.7 3.74 4.34
3127 | thoth portable real time operating system | thoth isa real time operating system designed portable large set machine running minicomputer architecture system application program written high level language system implemented software hardware interface user program application program thoth highly portable thoth encourages structuring program network communicating process providing efficient interprocess communication primitive | cheriton, d.r. malcolm, m.a. melen, l.a. sager, g.r. .k portability, real time, operating systems, minicomputer .c 3.80 4.30 4.35
3128 | synchronization eventcounts sequencer | synchronization concurrent process requires controlling relative ordering event process synchronization mechanism proposed abstract object called eventcounts sequencer process control ordering event directly mutual exclusion protect manipulation shared variable control ordering event direct control ordering simplify correctness argument simplifies implementation distributed system mechanism defined formally example relationship mechanism protection mechanism system explained eventcounts shown applicable situation confinement information matter implementation eventcount sequencer system shared memory | reed, d.p. kanodia, r.k. .k process synchronization, interprocess communication, distributed systems, security models, mutual exclusion, semaphores .c 4.30 4.32
3129 | optimal storage allocation serial | computer system serial reside direct access storage device storage space limited record added job batch processing mode line transaction transaction job generates demand vector designates space required record addition run space system reorganized paper considers criterion allocating storage space | mendelson, h. pliskin, j.s. yechiali, u. .k serial files, storage allocation, reorganization, partitioned dataset .c 3.5 3.7 4.33 4.6
3130 | curriculum recommendation undergraduate program computer science | contained report recommendation undergraduate degree program computer science curriculum committee computer science c3s association computing machinery acm core curriculum common computer science undergraduate program presented term elementary level topic course intermediate level course elective course round undergraduate program discussed entire program including computer science component material presented issue related undergraduate computer science education service course supporting area continuing education facility staff articulation presented | austing, r.h. barnes, b.h. bonnette, d.t. engel, g.l. stokes, g. .k computer sciences courses, computer science curriculum, computer science education, computer science undergraduate degree programs, service courses, continuing education .c 1.52
3131 | focus microcomputer number system | focus number system supporting computational algorithm especially microcomputer control signal processing application focus wide ranging character floating point number uniformity state distribution give focus twofold accuracy advantage equal word length floating point system focus computation typically time faster single precision fixed point integer arithmetic mixture operation comparable speed hardware arithmetic application algorithm bit bit implementation focus included | edgar, a.d. lee, s.c. .k number representation, logarithmic arithmetic, computational speed, computational accuracy, microcomputer applications   .c 3.24 3.80 4.0 4.22 5.11
3132 | experiment algorithm find central solution pattern classification | class pattern recognition standard technique algorithm finding hyperplanes separate class linearly separable training set traditional method find hyperplane separate point hyperplane necessarily centered empty space class central hyperplane favor class lower error rate classifying point noncentral hyperplane algorithm finding central hyperplanes tested data set frequently practice modified relaxation algorithm poor algorithm defined paper found good | slagle, j. .k pattern recognition, pattern classification, linear discriminants, central hyperplanes, centering, centrality criteria, dead zone, hyperplane, linearly separable, relaxation algorithm, accelerated relaxation .c 3.62 3.63
3133 | logic semantic network | extended form semantic network defined regarded syntactic variant clausal form logic virtue relationship logic extended semantic network provided precise semantics inference rule procedural interpretation hand regarding semantic network abstract data structure representation clause provide theorem prover potentially indexing scheme path strategy guiding search proof | deliyanni, a. kowalski, r.a. .k logic, semantic networks, theorem-proving, indexing, resolution, deduction,  logic programming .c 3.42 3.64 5.21
3134 | normal multiplication table information storage retrieval | paper describes method organization retrieval attribute based information system normal multiplication table directory information system algorithm organization retrieval information method suitable query requesting group information item posse set attribute possibly attribute example result respect number disk access disk space compared common approach algorithm evaluating appropriateness approach information system class information system normal multiplication table method yield rapid retrieval economical space requirement conventional system method incorporates improved modification inverted technique | motzkin, d. .k information retrieval, inverted files, multiattribute retrieval, multilist file, normal multiplication table, queries, rapid retrieval, space economy .c 3.70 3.73 3.79
3135 | detection dimensional pattern atom chemical structure | algorithm detecting occurrence dimensional pattern object larger structure presented search technique presented geometric structure pattern define characteristic demanded candidate matching case property atom considered individually adequately limit number set matchings application technique field chemistry pharmacology searching common constellation atom molecule possessing similar biological activity ray crystallography fitting structure structural fragment set peak electron density distribution fourier map chemical documentation retrieving structure substructure | lesk, a.m. .k three-dimensional pattern recognition, chemical structure search, information retrieval, crystal -structure analysis, drug analysis and design .c 3.13 3.63 3.74
3136 | price performance pattern computer system | econometric model computer market developed study relationship system price hardware performance single measure price performance grosch law shown simplified meaningless multiple regression model predicting system cost function hardware characteristic reveal market dichotomy hand exists stable price predictable market larger general purpose computer system market developing small business computer system market unstable low price predictability | cale, e.g. gremillion, l.l. mckenney, j.l. .k price/performance, grosch's law, u.s. computer market .c 2.0 2.11 6.21
3137 | methodology design distributed information system | macro model distributed information system presented model describes major cost information system perspective end user making evident effect design operating parameter cost transaction technique illustrated application design interactive transaction processing system | bucci, g. streeter, d.n. .k distributed processing, system design, cost minimization, distributed database, interactive computing, economic modeling, transaction processing .c 4.32 4.33 6.2 8.1
3138 | mathematical programming updating method modified given transformation applied lp problem | efficient numerically stable method presented problem updating orthogonal decomposition matrix column row vector fundamental idea add column row analogous adding additional row data linear square problem column row dropped formal scaling imaginary unit square addition column row elimination process procedure successive ssive application given transformation modified efficient form idea illustrated implementation revised simplex method algorithm general purpose account structure sparsity equation suggested computational test determining sign controlling parameter revised simplex algorithm mentioned simple mean constructing test case sample computing time presented | hanson, r.j. wisniewski, j.a. .k linear programming, numerical linear algebra, modified givens transformations, linear programming test cases .c 5 5.4 5.41 5.1 5.14
3139 | method color vertex graph | paper describes efficient heuristic method color vertex graph rely comparison degree structure graph method developed exact bipartite graph important part heuristic procedure find maximal clique general graph finally exact method performs randall brown algorithm able color larger graph heuristic method classical method exact method compared | brelaz, d. .k np-complete, graph structure, balancing, graph coloring, scheduling, comparison of the methods .c 5.25 5.32
3140 | social process proof theorem program | argued formal verification program matter obtained play key role development computer science software engineering proof mathematics absence continuity inevitability change complexity specification significantly real program make form al verification process difficult justify manage felt ease formal verification dominate program language design | de millo, r.a. lipton, r.j. perlis, a.j. .k formal mathematics, mathematical proofs, program verification, program specification .c 2.10 4.6 5.24
3141 | improved algorithm decentralized extremum finding circular configuration process | note present improvement lelann algorithm finding largest smallest set uniquely numbered process arranged circle central controller exists number process known priori decentralized algorithm technique selective message extinction order achieve average number message pass order log n2 | chang, e. roberts, r. .k decentralized algorithms, distributed systems, operating systems .c 4.32 4.35 5.25 5.32
3142 | consumer difficulty computerized transaction empirical investigation | prevalence error encountered end target computerized process assessed type error occur easily corrected reaction consumer error failure correct learned designer large management package data result show present state art approximately percent individual household average contact type account experience error year eighty percent relate billing attempt correct error turned difficult successful appears conflict computer organization public role poor man agement package including poor software management system adequate result survey raise concern timeliness number design large linked program package eft instance | sterling, t.d. .k errors, systems errors, billing errors, management systems, consumers .c 2.0 2.1 2.12 2.2 3.50 3.52 3.55 4.19 4.6
3143 | reasoning array | variety concept law notation presented facilitate reasoning array basic concept include interval partition functional restriction image pointwise extension relation ordering single point variation function equivalence relation array value concatenation effectiveness idea illustrated informal description algorithm binary search merging short formal proof | reynolds, j.c. .k arrays, assertions, program proving, intervals, partitions, pointwise extension, ordering, concatenation, binary search, merging .c 4.0 4.22 5.21 5.24
3144 | model discussion multi interpreter system | multi interpreter system system program execute virtue interpreted program interpreted nested interpreter run directly host machine model reveals anatomy interpreter differ procedure exhibit link protection domain multiprocessor architecture | manthey, m.j. .k interpreters, transfer-of-control, hierarchies .c 4.13 3.65
3145 | implementation structured walk throughs teaching cobol programming | effectiveness structured walk throughs teaching introductory cobol programming empirically assessed sample graduate business administration major cobol proficiency measured final examination testing knowledge language rule ability read debug program ability write program analysis multiple covariance statistically adjust test score age conditional reasoning score finding provide empirical support incorporating structured walk throughs programming learning process effectively develop student proficiency writing cobol program | lemos, r.s. .k structured walk-throughs, cobol programming, teaching of programming, testing programming proficiency .c 3.51 1.52 2.42 4.22
3146 | academic program providing realistic training software engineering | academic program harvey mudd college called clinic program brings project industry campus studied solved student team objective clinic provide student working small team careful faculty supervision opportunity work real world problem sufficient magnitude complexity program student acquire essential skill software engineering team work software project management software design methodology communication skill realistic environment sample software project undertaken clinic experience shown program viable transition academic industrial world | busenberg, s.n. tam, w.c. .k software engineering, software engineering education, software projects, student teams, software engineering skills .c 1.52 4.0
3147 | model automating program design business application system | paper discus model finding efficient implementation business application system logical specification determined advance model view program design problem systematically coordinating configuration datasets computation straight forward search technique determine aggregation computation aggregation datasets device organization key order data set key order computation access method dataset computation pair computational result presented sample problem involving computation datasets main point paper underlying model work computationally simple adapted design situation | alter, s. .k system design, automatic programming, search methods, system configurations, design choices .c 4.12 4.22 4.6
3148 | high level programming distributed computing | programming distributed loosely coupled system problem growing interest paper describes approach distributed computing level general purpose programming language based primitive notion module message transaction key methodology shown independent language machine appears programming wide range task part ambitious program development advanced programming language relation aspect project discussed | feldman, j.a. .k distributed computing, modules, messages, assertions .c 4.22 4.32
3149 | cyclic order property vertex aid scene analysis | cyclic order property defined body bounded smooth curved face property shown analyzing picture body line data extracted picture imperfect property augments previously known grammatical rule determine existence dimensional body dimensional line structure data | shapira, r. freeman, h. .k scene analysis, cyclic order, artificial intelligence, three-dimensional reconstruction , picture processing, computer graphics, pattern recognition. .c 3.2 3.6 8.2
3150 | programming language | computer technology matures growing ability create large system leading basic nature programming programming language concept adequate building maintaining system complexity called task attempt high level language enabled programmer escape intricacy machine order code higher level programming system provide mean understand manipulate complex system component order develop system need shift attention detailed specification algorithm description property package object build paper analyzes shortcoming programming language exist lay direction future research | winograd, t. .k programming, programming languages, programming systems, systems development .c 4.0 4.20 4.22 4.40
3151 | optimal real time algorithm planar convex hull | algorithm construction real time convex hull set point plane data structure algorithm construct convex hull successive update taking time log achieving total processing time log | preparata, f.p. .k computational geometry, convex hull, planar set of points, real-time algorithms, on-line algorithms.   .c 4.49 5.25 5.32
3152 | storage reorganization technique matrix computation paging environment | order multiply matrix minimizing number page fetch required efficient reorganize data submatrix form block multiplication known algorithm leave matrix stored row column oriented form efficient method accomplishing reorganization make derivation asymptotically bound multiplication matrix row oriented form adapting technique strassen reorganized data reorganization block multiplication scheme shown advantageous matrix page realistic size strassen adaptation scheme shown advantageous transpose matrix additional cost | fischer, p.c. probert, r.l. .k matrix multiplication, paging, virtual memory, data reorganization, pagination, transpose. .c 4.34 5.14 5.25
3153 | control response time multi class system memory allocation | possibility giving quality service job class regulating memory allocation examined context paged computer system parameterized algorithm partition main memory class job considered initially closed system consisting process paging device fixed number job studied determine optimal degree multiprogramming proportion processor time devoted class applying decomposition approach treating closed system single server response time open system external arrival studied object investigate effect memory alocation parameter expected response time algorithm numerical solution economical lower bound expected response time function control parameter obtained applying result system job class | hine, j.h. mitrani, i. tsur, s. .k queueing networks, paging, virtual memory, performance control .c 4.32 8.1
3154 | algorithm logic control | algorithm regarded consisting logic component specifies knowledge solving problem control component determines problem solving strategy mean knowledge logic component determines meaning algorithm control component affect efficiency efficiency algorithm improving control component changing logic algorithm argue computer program correct easily improved modified logic control aspect identified separated program text | kowalski, r. .k control language, logic programming, nonprocedural language, programming methodology, program specification, relational data structures  .c 3.64 4.20 4.30 5.21 5.24
3155 | paradigm programming | floyd, r.w.
3156 | computing connected component parallel computer | present parallel algorithm n2 processor find connected component undirected graph vertex time log2n log2n time bound achieved log2n processor algorithm find transitive closure symmetric boolean matrix assume processor access common memory simultaneous access location permitted fetch instruction store instruction | hirschberg, d.s. chandra, a.k. sarwate, d.v. .k graph theory, parallel processing, algorithms, transitive closure, connected component .c 5.25 5.32 6.22
3157 | proving termination multiset ordering | common tool proving termination program founded set set ordered admit infinite descending sequence basic approach find termination function map value program variable founded set termination function repeatedly reduced computation termination function required difficult find complexity proportion program consideration multisets bag founded set set admit multiple occurrence element ordering induces ordering finite multisets multiset ordering shown founded multiset ordering enables simple intuitive termination function difficult termination proof multiset ordering prove termination production system program defined term set rewriting rule | dershowitz, n. manna, z. .k program correctness, program termination, program verification, well-founded orderings, well-founded sets, multisets, bags, production systems, term rewriting systems, tree replacement systems, reduction rules .c 5.24 5.7
3158 | secure personal computing insecure network | method implementing secure personal computing network central facility proposed method employ public key encryption device hardware key user responsible security need rely security central facility communication link user safely store confidential central facility transmit confidential data user network | denning, d.e. .k personal computing, security, privacy, networks, public-key encryption .c 2.12 6.20
3159 | remark stably updating mean standard deviation estimate | nelson, l.s. .k mean, standard deviation .c 5.5 5.19
3160 | rejuvenating experimental computer science | report based result nsf sponsored workshop held wasington november author report gordon bell digital equipment corporation bernard galler university michigan patricia goldberg ibm corporation john hamblen university missouri rolla elliot pinson bell telephone laboratory ivan sutherland california institute technology participating workshop representative nsf government agency addition author number people contributed content report preparation original workshop doctorate granting computer science department nation asked comment suggestion problem experimental computer science version report dated january circulated department number industrial government group criticism editor author final version gratefully acknowledge contribution large number people stage preparation report note presentation report position paper crisis experimental computer science written acm executive committee | feldman, j.a. sutherland, w.r.
3161 | acm executive committee position crisis experimental computer science | mccracken, d.d., ccp denning, p.j. brandin, d.h.
3162 | improving worst case running time boyer moore string matching algorithm | shown modify boyer moore string matching algorithm worst case running time linear multiple occurrence pattern present text | galil, z. .k computational complexity, linear time, worst case, string matching, periodicity .c 3.74 4.40 5.25
3163 | optimal insertion algorithm sided height balanced binary search tree | algorithm inserting element sided height balanced oshb binary search tree presented algorithm operates time log number node tree represents improvement previous ly known insertion algorithm hirschberg kosaraju require time log 2n log complexity optimal earlier result shown deletion structure performed log time result paper negative answer question tree example kind deletion smaller time complexity insertion concluded insertion deletion retrieval oshb tree performed time operation general avl tree constant factor insertion deletion algorithm oshb tree complicated algorithm avl tree | raiha,k.j. zweben, s.h. .k insertion, one-sided height-balanced trees, height-balanced trees, binary trees, search trees. .c 3.73. 3.74 4.34 5.25 5.31
3164 | progressive acyclic digraph tool database integrity | progressive acyclic digraph pad algorithm accepts request maintains graph acyclic state request creates cycle node detached entered acyclically process important area database implementation constraint permissible sequence action pad algorithm presented simple path matrix representation list artificial gradient experiment suggest large considerably faster asymptotically nr number node expected number node reachable path node | hansen, w.j. .k list processing, data structures, topological sort, acyclic digraph, database integrity, network, deadlock .c 4.34 5.32 4.33
3165 | approximation polygonal map cellular map | approximation polygonal thematic map cellular map important operation geographical data processing analyzed data organization representing polygonal map widely segment based data structure class label identify region bordering segment side approximation algorithm presented operates organization eliminating need recognition region boundary segment examined versatility organization illustrated outline algorithm area computation point inclusion algorithm applied set soil map converted computer readable form mean coordinate digitizer | nagy, g. wagle, s.g. .k polygon maps, cellularization, gridding, geographic data structures, computational geometry, computer cartography, automated cartography .c 3.14 4.34 8.2
3166 | computing standard deviation accuracy | algorithm numerical computation standard deviation unweighted sampled data analyzed algorithm known statistical computational literature algorithm specifically intended automatic computation discussion expository emphasis reaching suitable definition accuracy algorithm analyzed condition accurate conclude algorithm provide accurate answer problem algorithm substantially accurate difficult problem | chan, t.f. lewis, j.g. .k mean, standard deviation, least squares, updating estimates, rounding error analysis, condition number. .c 5.5 5.11 5.19
3167 | updating mean variance estimate improved method | method improved efficiency updating mean variance weighted sampled data additional data included set evidence presented method stable accurate existing updating method | west, d.h.d. .k mean, standard deviation, variance, updating estimates, removing data .c 5.5 5.19
3168 | comment optimal evaluation boolean expression online query system | laird, p.d. .k query, boolean expression, information retrieval, file organization .c 3.53.70 3.73 3.74
3169 | note optimal evaluation boolean expression online query system | gudes, e. hoffman, a. .k query, boolean expression, optimal evaluation, information retrieval .c 3.50 3.70 3.74
3170 | proof correctness calendar program | formal specification simple calendar program derivation proof correctness program sketched specification easy understand correctness manifest human | lamport, l. .k program specification, program verification, inductive assertions .c 5.24
3171 | line number made cheap | technique run time line number administration implementation high level language suitable circumstance method requires absolutely overhead time space execution program | klint, p. .k line number administration, diagnostic messages, abstract machine code  .c 4.12 4.13 4.20 4.42
3172 | algorithm planning collision free path polyhedral obstacle | paper describes collision avoidance algorithm planning safe path polyhedral object moving known polyhedral object algorithm transforms obstacle represent locus forbidden position arbitrary reference point moving object trajectory reference point avoids forbidden region free collision trajectory found searching network vertex transformed obstacle vertex reached safely | lozano-perez, t. wesley, m.a. .k path finding, collision-free paths, polyhedral objects, polyhedral obstacles, graph searching, growing objects .c 3.15 3.64 3.66 8.1
3173 | psychology learning basic | paper address question person know learning basic programming underlying conceptual structure identified transaction event occurs computer involves operation object location prestatement set transaction line code chunk frequently occurring configuration prestatements line code | mayer, r.e. .k basic, learning, instruction .c 1.50 3.36 4.22
3174 | password security case history | paper describes history design password security scheme remotely accessed time sharing system present design result countering observed attempt penetrate system result compromise extreme security ease | morris, r. thompson, k. .k operating systems, passwords, computer security .c 2.41 4.35
3175 | breaking substitution cipher relaxation algorithm | substitution cipher code letter alphabet fixed substitute word division change paper problem breaking substitution cipher represented probabilistic labeling problem code letter assigned probability representing plain text letter probability updated parallel code letter joint letter probability iterating updating scheme result improved estimate finally lead breaking cipher method applies successfully example | peleg, s. rosenfeld, a. .k cryptography, substitution ciphers, probabilistic classification, relaxation .c 3.42 3.63
3176 | storing sparse table | problem storing searching large sparse table ubiquitous computer science standard technique storing table hashing hashing poor worst case performance propose good worst case method storing static table entry integer method requires word storage logn access time method complicated practice analysis show simpler algorithm compressing lr parsing table work | tarjan, r.e. yao, a.c.c. .k gaussian elimination, parsing, searching, sparse matrix, table compression, table lookup .c 3.74 4.12 4.34 5.25
3177 | share secret | paper show divide data piece easily reconstructable piece complete knowledge piece reveals olutely information technique enables construction robust key management scheme cryptographic system function securely reliably misfortune destroy half piece security breach expose remaining piece | shamir, a. .k cryptography, key management, interpolation .c 5.39 5.6
3178 | introduction eft symposium | kling, r.
3179 | overview eft symposium | increasingly recognized large scale technology eft potential aiding solution societal problem technology generate problem symposium present selected paper conference sought discover known eft impact society research needed future | kraemer, k.l. colton, k.w. .k eft's, research agenda, conference results, public policy .c 2.11 3.52 3.53 3.80
3180 | cost payment system | banking industry public policy maker good information comparative cost alternative payment system cash check credit card eft transaction result eft system service likely implemented valid assessment cost justified lst justified term criterion | lipis, a.h. .k eft's,payment system costs, payment system volumes .c 3.52
3181 | public protection education eft | research revealed existence widespread misinformation lack knowledge eft business government consumer result effort stimulate meaningful public participation decision introduction eft system require coordinated educational effort considerable scale addition research revealed shortcoming present system defining responsibility liability avenue recourse article present alternative improving system ongoing research needed assure action responsive changing environment consumer need | long, r.h. .k electronic funds transfer systems, consumer education, security and fraud, privacy, system reliability, eft ombudsman  .c 2.12
3182 | vulnerability eft intentionally caused loss | hypothesis consumer provided greater accuracy freedom error fraud electronic fund transfer system eft discussed light technical capability potential computer protect accidentally intentionally caused loss nomenclature business crime remains depository financial service system fraud theft embezzlement characteristic crime resulting accelerating eft continual technological advance broaden scope security issue examined factor backup requirement regulatory legislative action economics give rise urgency research solution emerging eft related vulnerability | parker, d.b. .k efts, computer abuse, crime, security, errors, losses, positions of trust, legislation .c 2.11 2.3 3.52 3.80
3183 | policy value eft research anatomy research agenda | emerging recognition eft system potential vastly alter payment fund transfer system american society number force actor involved evolution value vary significantly depending individual institutional perspective conflict highlighted part research agenda technological issue eft eft impact people economic impact eft regulation control eft evaluating monitoring eft system | kraemer, k.l. colton, k.w. .k efts, research agenda, value conflicts, impacts on people, economic impacts, regulation and control, monitoring eft .c 2.11 2.3 3.52 3.53 3.80
3184 | revised report algorithmic language algol | report complete defining description international algorithmic language algol language suitable expressing large class numerical process form sufficiently concise direct automatic translation language programmed automatic computer | nuar, p.
3185 | humble programmer | programming job provided approach task full appreciation tremendous difficulty provided stick modest elegant programming language provided respect intrinsic limitation human mind approach task humble programmer | dijkstra, e. w.
3186 | statement considerd harmful | dijkstra, e. w. .k go to statement, jump instruction, branch instruction, conditional clause, repetitive clause, program intelligibility, program sequencing .c 4.22 5.23 5.24
3187 | certification algorithm quickersort | quickersort compiled run correction aldep translator cdc 1604a comparison average sorting item recently published algorithm demonstrates quickersort superior performance | blair, c.r.
3188 | semiotics programming language | based paper semiotics dimension insert point language aspect pragmatic semantics syntactics cover project aspect semiotic dimension strong tendency today | zemanek, h.
3189 | algebraic compiler fortran assembly program | algebraic compiler written added fortran assembly program compiler expand algebraic statement operation addition subtraction multiplication division compile multi level expression floating point arithmetic easily revised fixed point | stiegler, a. d.
3190 | correction economy scale ibm system | page typical instruction mix id discussed timing computed outlined page undetected programming error time resulting regression equation slightly error | solomon, m.b.
3191 | generating permutation nested cycling | purpose letter twofold give due credit tompkins paige algorithm clarify comment hill cr review program permutation | langdon, glen g. .k permutations .c 5.39
3192 | lincoln keyboard typewriter keyboard designed computer input flexibility | typewriter keyboard direct punched paper tape computer input replace usual commercial keyboard character chosen convenience programmer lincoln keyboard expected facilitate programming algorithmic process allow considerable flexibility assembly utility routine | vanderburgh, a.
3193 | work progress formula coding technique allowing direct entry | into the computer of formulae typed on an 84 character flexo-writer. this flexo-writer will be modified for automatic half-line advance and retract, without carriage return, to permit completely general sub and superscripting.
3194 | non heuristic program proving elementary logical theorem | paper discus problem involved designing device capable distinguishing speech event recognized native speaker language parallel problem chemical analysis pointed | dunham, b. fridshal, r. sward, g. l.
3195 | reiteration acm policy standardization | periodic change officer chairman editor follows election occasionally result change policy case department radical change proper time reiterate an underline acm policy respect standardization computer area | gorn, s.
3196 | reactive typewriter program | character keyboard including alphabetical upper lower case good readability machine restricted single case lower case preferred reactive typewriter portable reactive typewriter operate commercially dial type telephone voice telegraph telex line leased nondial telegraph line interchangeably | mooers, c. n.
3197 | structure standard processing organization computer area | line acm policy statement comm acm nov organizational description provided order describe standardization activity pertinent computer information processing | gorn, s. bemer, r. w. green, j.
3198 | microprogramming emulator programming language | problem concerned converting language action intellectual energy mechanical energy medium purpose language preoccupied subject language area language investigation concentrated formalizing syntax semantics | greem, j.
3199 | algem algebraic manipulator | algem package subprogram written slip fortran iv map ii manipulate algebraic expression algem basic algebraic operation addition subtraction multiplication division exponentiation capable handling number single letter variable variable exponent finding highest common factor polynomial included function substitution differentiation determining coefficient variable solving linear equation basic routine special purpose arithmetic routine major innovation algem manipulator assignment type expression standard ordering procedure | gotlieb, c. c. novak, r. j.
3200 | formac program solution linear boundary initial problem | computer program developed obtaining approximate solution linear initial boundary problem involving differential equation problem input program includes equation symbolic form satisfied differential equation equation describing auxiliary condition boundary condition numerical description region equation satisfied set function symbolic form linear combination approximate solution function give input program generates approximation solution problemm term function optimum square sense | cuthill, e.
3201 | symbolic manipulation poisson series | poisson series variable manageable symbolically set formal subroutine written partially ibm machine language called fortran language fortran program effort made supply operation required celestial mechanic routine entirely contained subroutine require standard fortran input output unit design avoid waste overflow core storage space | danby, j. deprit, a. rom, a.
3202 | manip computer system algebra analytic differentiation | mathematical expression operated written fortran notation stored computer string bcd character blank removed complicated desired parenthesis nested restriction long entire expression subsequent form exceed character problemm performing algebraic operation obtaining analytic derivative translated identifying manipulating character sequence program resulted written fortran iv cdc discussed detail | bender, b.
3203 | grad assistant program symbolic algebraic manipulation differentiation | general recursive algebra differentiation assistant grad assistant development set lisp function symbolically manipulate abd differentiate algebraic expression designed problemms large amount routine manipulation program human intervention grad recognize simplification external guidance complicated expression notably involving nested radical trigonometric function yield completely present version proved | fletcher, j. g.
3204 | line program non numerical algebra | goal program make step te design automated mathematical assistant requirement program easy access result obtained reasonably short time program written time shared computer computer system development corporation santa monica california chosen lisp compiler programming debugging remote teletype console stanford university | korsvold, k.

